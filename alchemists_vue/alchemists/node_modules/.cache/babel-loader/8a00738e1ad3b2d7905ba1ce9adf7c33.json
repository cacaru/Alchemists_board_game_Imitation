{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-6294ced9\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  id: \"game_lobby\"\n};\nconst _hoisted_2 = {\n  id: \"room_title\"\n};\nconst _hoisted_3 = {\n  id: \"room_back\"\n};\n\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"name inline\"\n}, \"이름\", -1\n/* HOISTED */\n));\n\nconst _hoisted_5 = {\n  class: \"inline user_name\"\n};\n\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"user_color\"\n}, \" 색 선택 \", -1\n/* HOISTED */\n));\n\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"under\"\n}, null, -1\n/* HOISTED */\n));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, _toDisplayString(this.$route.params.room_name), 1\n  /* TEXT */\n  ), _createElementVNode(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.users, entrans => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"entrans\",\n      key: entrans\n    }, [_hoisted_4, _createElementVNode(\"p\", _hoisted_5, _toDisplayString(entrans.user_name), 1\n    /* TEXT */\n    ), _hoisted_6, _createElementVNode(\"button\", {\n      class: \"red\",\n      onClick: _cache[0] || (_cache[0] = (...args) => _ctx.choose_color && _ctx.choose_color(...args))\n    })]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  )), _hoisted_7])]);\n}","map":{"version":3,"mappings":";;;;;EACSA,EAAE,EAAC;;;EACCA,EAAE,EAAC;;;EAGHA,EAAE,EAAC;;;gEAEFC,oBAA6B,GAA7B,EAA6B;EAA1BC,KAAK,EAAC;AAAoB,CAA7B,EAAuB,IAAvB,EAAyB;AAAA;AAAzB;;;EACGA,KAAK,EAAC;;;gEACTD,oBAAgC,GAAhC,EAAgC;EAA7BC,KAAK,EAAC;AAAuB,CAAhC,EAAsB,QAAtB,EAA4B;AAAA;AAA5B;;gEAIJD,oBAEM,KAFN,EAEM;EAFDC,KAAK,EAAC;AAEL,CAFN,EAAkB,IAAlB,EAAkB;AAAA;AAAlB;;;uBAZNC,oBAgBM,KAhBN,cAgBM,CAfFF,oBAEM,KAFN,cAEMG,sBADMC,MACN,CADaC,MACb,CADoBC,SACpB,CAFN,EACmC;EAAA;EADnC,CAeE,EAZFN,oBAWM,KAXN,cAWM,oBAVJE,oBAKMK,SALN,EAKM,IALN,EAKMC,YALiCC,WAKjC,EALsBC,OAAgB,IAAT;yBAAnCR,oBAKM,KALN,EAKM;MALDD,KAAK,EAAC,SAKL;MALyCU,GAAG,EAAED;IAK9C,CALN,GACIE,YACAZ,oBAAyD,GAAzD,cAAyDG,iBAAzBO,OAAO,CAACG,SAAiB,CAAzD,EAAiD;IAAA;IAAjD,GACAC,YACAd,oBAAuD,QAAvD,EAAuD;MAA/CC,KAAK,EAAC,KAAyC;MAA9Bc,OAAK,yCAAEC,+CAAF;IAAyB,CAAvD,EAJJ;GAKM,CALN;;EAAA,CAUI,GAHJC,UAGI,CAXN,CAYE,CAhBN","names":["id","_createElementVNode","class","_createElementBlock","_toDisplayString","$route","params","room_name","_Fragment","_renderList","$data","entrans","key","_hoisted_4","user_name","_hoisted_6","onClick","_ctx","_hoisted_7"],"sourceRoot":"","sources":["E:\\web\\alchemists_vue\\alchemists\\src\\components\\game_lobby.vue"],"sourcesContent":["<template>\r\n    <div id=\"game_lobby\">\r\n        <div id=\"room_title\">\r\n            {{ this.$route.params.room_name }}\r\n        </div>\r\n        <div id=\"room_back\">\r\n          <div class=\"entrans\" v-for=\"entrans in users\" :key=\"entrans\">\r\n              <p class=\"name inline\">이름</p>\r\n              <p class=\"inline user_name\"> {{ entrans.user_name }} </p>\r\n              <p class=\"user_color\"> 색 선택 </p>\r\n              <button class=\"red\" v-on:click=\"choose_color\"></button>\r\n          </div>\r\n\r\n          <div class=\"under\">\r\n            \r\n          </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport io from 'socket.io-client';\r\n\r\nexport default {\r\n  name : 'game_lobby',\r\n  created() {\r\n    //this.$route.params.room_address:this.$route.params.port\r\n    const socket = io(`http://192.168.0.102:3000`);\r\n    // console.log(params);\r\n    // console.log(params.nick_name);\r\n    console.log(\"server in\");\r\n\r\n    let msg = {\r\n        user_name : this.$route.params.nick_name,\r\n        room_pw   : this.$route.params.room_pw,\r\n        count     : this.$route.params.count,\r\n        msg       : this.$route.params.nick_name + \" 가 방에 참가하였습니다.\"\r\n    };\r\n    // 입장했음을 알림\r\n    socket.emit('enter', msg);\r\n\r\n    //다른 채팅이 있는지 확인\r\n    socket.on(\"chat\", (data) => {\r\n      console.log(\"chat :: \");\r\n      console.log(data);\r\n    });\r\n\r\n    // 다른 플레이어가 입장시 정보를 받음\r\n    socket.on(\"all_player\", (data) => {\r\n      this.users = data;\r\n    });\r\n\r\n    //입장시 방이 가득 찼는지 확인\r\n    socket.on(\"pull_room\", (res) => {\r\n        console.log(res + \"방이 가득 찼습니다.\");\r\n        this.$router.push({\r\n          name: 'create_lobby',\r\n          params : {\r\n              count : this.$route.params.count\r\n          }\r\n          });\r\n        alert(\"방이 가득 찼습니다. 뒤로 돌아갑니다\");\r\n    });\r\n\r\n  },\r\n  data() {\r\n    return  {\r\n      users : ''\r\n    }\r\n  },\r\n  methods : {\r\n\r\n  },\r\n  \r\n}\r\n</script>\r\n\r\n<style scoped src=\"@/assets/css/game_lobby.css\"></style>"]},"metadata":{},"sourceType":"module"}