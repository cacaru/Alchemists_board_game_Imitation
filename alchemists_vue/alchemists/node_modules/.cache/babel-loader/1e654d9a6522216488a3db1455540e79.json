{"ast":null,"code":"import io from 'socket.io-client'; // 다른 곳에서도 쓸 수 있게 전역 선언\n\nvar socket;\nexport default {\n  name: 'game_lobby',\n\n  created() {\n    //this.$route.params.room_address:this.$route.params.port\n    socket = io(`http://192.168.0.102:3000`); // console.log(params);\n    // console.log(params.nick_name);\n\n    console.log(\"server in\");\n    console.log(this.$route.params);\n    let msg; //마스터 인 입장만 count를 가지고 있으므로\n\n    if (this.$route.params.is_master === 'true') {\n      msg = {\n        user_name: this.$route.params.nick_name,\n        room_pw: this.$route.params.room_pw,\n        count: this.$route.params.count,\n        is_master: this.$route.params.is_master,\n        is_ready: false,\n        msg: this.$route.params.nick_name + \" 가 방에 참가하였습니다.\"\n      };\n      console.log(\"master\");\n    } else {\n      msg = {\n        user_name: this.$route.params.nick_name,\n        room_pw: this.$route.params.room_pw,\n        is_master: this.$route.params.is_master,\n        is_ready: false,\n        msg: this.$route.params.nick_name + \" 가 방에 참가하였습니다.\"\n      };\n      console.log(\"entras\");\n    } // 입장했음을 알림\n\n\n    socket.emit(\"enter\", msg); // 방 정보를 받음 - 입장 했을 때 자신에게만 한 번 전송\n\n    socket.on(\"announce_room_name\", room_data => {\n      this.room_name = room_data.room_name;\n      this.my_key = room_data.my_key;\n    }); //다른 채팅이 있는지 확인\n\n    socket.on(\"chat\", data => {\n      switch (data.type) {\n        case \"announce\":\n          this.textarea += data.speaker + \" 이(가) \" + data.msg + \"\\n\";\n          break;\n\n        case \"normal\":\n          this.textarea += data.speaker + \" : \" + data.msg + \"\\n\";\n          break;\n      }\n\n      console.log(\"chat :: \");\n      console.log(data);\n    }); // 다른 플레이어가 입장시 / 색깔 선택 시 정보를 받음\n\n    socket.on(\"all_player\", data => {\n      console.log(data);\n      this.users = data;\n\n      for (var i = 0; i < this.users.length; i++) {\n        if (this.users[i].user_color != '') {\n          this.color_button = 'none';\n          this.back_button = 'inline-block';\n          this.toggle_color_message = '고른색';\n        }\n      }\n    }); //입장시 방이 가득 찼는지 확인\n\n    socket.on(\"pull_room\", res => {\n      console.log(res + \"방이 가득 찼습니다.\");\n      alert(\"방이 가득 찼습니다. 뒤로 돌아갑니다\"); // master 면 create 로\n\n      if (this.$route.params.is_master === 'true') {\n        this.$router.push({\n          name: 'create_lobby',\n          params: {\n            count: this.$route.params.count\n          }\n        });\n      } // entrans 면 enter 로\n      else {\n        this.$router.push({\n          name: 'enter_lobby'\n        });\n      }\n    }); // 마스터가 아닌데 방이 없는 곳에 들어갈 경우\n\n    socket.on(\"no_room\", () => {\n      alert(\"방이 아직 생성되지 않았거나 잘못된 주소입니다. 주소를 확인해주세요\");\n      alert(\"뒤로 돌아갑니다.\");\n      this.$router.push({\n        name: 'enter_lobby'\n      });\n    }); // 비밀번호가 잘못 된 경우\n\n    socket.on(\"wrong_pw\", () => {\n      alert(\"비밀번호가 잘못되었습니다. 비밀번호를 확인해주세요\");\n      this.$router.push({\n        name: 'enter_lobby'\n      });\n    });\n  },\n\n  data() {\n    return {\n      users: '',\n      textarea: '',\n      message: '',\n      room_name: '',\n      my_key: '',\n      color_button: 'inline-block',\n      back_button: 'none',\n      toggle_color_message: \"색 선택 중\",\n      toggle_game_start: \"준비완료\"\n    };\n  },\n\n  methods: {\n    // 고른 색을 서버에 알림\n    choose_color: function (color, my_name, my_key) {\n      this.toggle_color_message = this.toggle_color_message === '색 선택 중' ? '고른색' : '색 선택 중';\n      this.color_button = this.color_button === 'inline-block' ? 'none' : 'inline-block';\n      this.back_button = this.back_button === 'none' ? 'inline-block' : 'none';\n      let data = {\n        user_name: my_name,\n        user_color: color,\n        user_key: my_key\n      }; //선택한 값을 서버에 전송\n\n      socket.emit(\"edit_color\", data);\n    },\n    sending_message: function () {\n      if (this.message !== '') {\n        let msg = {\n          speaker: this.my_name,\n          msg: this.message,\n          type: \"normal\"\n        };\n        console.log(msg);\n        this.message = '';\n        socket.emit(\"chat\", msg);\n      }\n    },\n    back_choose_color: function () {\n      this.toggle_color_message = this.toggle_color_message === '색 선택 중' ? '고른색' : '색 선택 중';\n      this.color_button = this.color_button === 'inline-block' ? 'none' : 'inline-block';\n      this.back_button = this.back_button === 'none' ? 'inline-block' : 'none';\n    },\n    game_start: function () {\n      if (this.$route.params.is_master === 'true') {\n        console.log(\"준비완료 클릭\");\n      } else {\n        this.toggle_game_start = this.toggle_game_start === '준비완료' ? '시작대기' : '준비완료';\n        this.ready_button_state = this.ready_button_state === 'outline-secondary' ? 'secondary' : 'outline-secondary';\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["io","socket","name","created","console","log","$route","params","msg","is_master","user_name","nick_name","room_pw","count","is_ready","emit","on","room_data","room_name","my_key","data","type","textarea","speaker","users","i","length","user_color","color_button","back_button","toggle_color_message","res","alert","$router","push","message","toggle_game_start","methods","choose_color","color","my_name","user_key","sending_message","back_choose_color","game_start","ready_button_state"],"sourceRoot":"","sources":["E:\\web\\alchemists_vue\\alchemists\\src\\components\\game_lobby.vue"],"sourcesContent":["<template>\r\n    <b-container id=\"game_lobby\">\r\n      <b-row>\r\n        <b-col>\r\n          <div id=\"room_title\">\r\n              {{ room_name }}\r\n          </div>\r\n        </b-col>\r\n      </b-row>\r\n      <b-row>\r\n        <b-col>\r\n          <b-container id=\"room_back\">\r\n            <b-row align-v=\"stretch\" v-for=\"i in Math.ceil(users.length / 2 )\" :key=\"i\">\r\n              <b-col sm=\"6\" v-for=\"entrans in users.slice((i - 1) * 2, i * 2)\" :key=\"entrans\">\r\n                <b-overlay :show=\"entrans.is_ready\" rounded=\"sm\" >\r\n                  <div class=\"entrans\">\r\n                      <p class=\"inline name\" v-if=\"entrans.is_master === 'true'\">방장</p>\r\n                      <p class=\"inline name\">이름</p>\r\n                      <p class=\"inline user_name\"> {{ entrans.user_name }} </p>\r\n                      \r\n                      <div class=\"choose_color_section\">\r\n                        <p class=\"user_color_announce\"> {{ toggle_color_message }} </p>\r\n                        <div class=\"button_area\" v-if=\"my_key === entrans.my_key\">\r\n                          <button class=\"red color\"   v-on:click=\"choose_color('red', entrans.user_name, entrans.user_key)\" v-bind:style=\"{display : color_button }\"></button>\r\n                          <button class=\"blue color\"  v-on:click=\"choose_color('blue', entrans.user_name, entrans.user_key)\" v-bind:style=\"{display : color_button }\"></button>\r\n                          <button class=\"black color\" v-on:click=\"choose_color('black', entrans.user_name, entrans.user_key)\" v-bind:style=\"{display : color_button }\"></button>\r\n                          <button class=\"white color\" v-on:click=\"choose_color('white', entrans.user_name, entrans.user_key)\" v-bind:style=\"{display : color_button }\"></button>\r\n                          <button class=\"back_to_choose_color\" v-on:click=\"back_choose_color\" v-bind:style=\"{display : back_button , background: entrans.user_color }\"></button>\r\n                          <p class=\"announce\" v-bind:style=\"{display : back_button }\"> 한 번 더 누르면 고른 색이 취소됩니다. </p>\r\n                        </div>\r\n                        <div v-else>\r\n                          <b-icon-circle-fill v-bind:style=\"{ background : entrans.user_color }\"/>\r\n                        </div>\r\n                      </div>\r\n                  </div>\r\n                  <template #overlay>\r\n                    <div class=\"overlay_ready\">\r\n                        <b-icon-stack font-scale=\"5\">\r\n                          <b-icon stacked icon=\"square\"></b-icon>\r\n                          <b-icon stacked icon=\"check\"></b-icon>\r\n                        </b-icon-stack>\r\n                        <p id=\"check_label\">준비 완료</p>\r\n                    </div>\r\n                  </template>\r\n                </b-overlay>\r\n              </b-col>\r\n            </b-row>\r\n          </b-container>\r\n        </b-col>\r\n      </b-row>\r\n\r\n      <b-row>\r\n        <b-col sm=\"8\">\r\n          <textarea id=\"chat_area\" v-model=\"textarea\" disabled></textarea>\r\n          <div></div>\r\n          <input id=\"message_area\" v-model=\"message\" v-on:keyup.enter=\"sending_message\"/>\r\n          <b-button pill id=\"sending\" v-on:click=\"sending_message\"> 보내기 </b-button>\r\n        </b-col>\r\n        <b-col>\r\n          <b-button pill size=\"lg\" id=\"game_start\" v-on:click=\"game_start\"> {{ this.toggle_game_start }} </b-button>\r\n        </b-col>\r\n      </b-row>\r\n    </b-container>\r\n</template>\r\n\r\n<script>\r\nimport io from 'socket.io-client';\r\n\r\n// 다른 곳에서도 쓸 수 있게 전역 선언\r\nvar socket;\r\n\r\nexport default {\r\n  name : 'game_lobby',\r\n  created() {\r\n    //this.$route.params.room_address:this.$route.params.port\r\n    socket = io(`http://192.168.0.102:3000`);\r\n    // console.log(params);\r\n    // console.log(params.nick_name);\r\n    console.log(\"server in\");\r\n    console.log(this.$route.params);\r\n    let msg;\r\n    //마스터 인 입장만 count를 가지고 있으므로\r\n    if ( this.$route.params.is_master === 'true' ) {\r\n      msg = {\r\n        user_name : this.$route.params.nick_name,\r\n        room_pw   : this.$route.params.room_pw,\r\n        count     : this.$route.params.count,\r\n        is_master : this.$route.params.is_master,\r\n        is_ready  : false,\r\n        msg       : this.$route.params.nick_name + \" 가 방에 참가하였습니다.\"\r\n      };\r\n      console.log(\"master\");\r\n    } else {\r\n      msg = {\r\n        user_name : this.$route.params.nick_name,\r\n        room_pw   : this.$route.params.room_pw,\r\n        is_master : this.$route.params.is_master,\r\n        is_ready  : false,\r\n        msg       : this.$route.params.nick_name + \" 가 방에 참가하였습니다.\"\r\n      }\r\n      console.log(\"entras\");\r\n    }\r\n   \r\n    // 입장했음을 알림\r\n    socket.emit(\"enter\", msg);\r\n\r\n    // 방 정보를 받음 - 입장 했을 때 자신에게만 한 번 전송\r\n    socket.on(\"announce_room_name\", (room_data) => {\r\n      this.room_name = room_data.room_name;\r\n      this.my_key = room_data.my_key;\r\n    })\r\n\r\n\r\n    //다른 채팅이 있는지 확인\r\n    socket.on(\"chat\", (data) => {\r\n      switch ( data.type ) {\r\n        case \"announce\" :\r\n          this.textarea += data.speaker + \" 이(가) \" + data.msg + \"\\n\";\r\n          break;\r\n        case \"normal\" :\r\n          this.textarea += data.speaker + \" : \" + data.msg + \"\\n\";\r\n          break;\r\n      }\r\n      console.log(\"chat :: \");\r\n      console.log(data);\r\n    });\r\n\r\n    // 다른 플레이어가 입장시 / 색깔 선택 시 정보를 받음\r\n    socket.on(\"all_player\", (data) => {\r\n      console.log(data);\r\n      this.users = data;\r\n      for( var i = 0; i < this.users.length ; i++ ) {\r\n        if( this.users[i].user_color != '' ){\r\n          this.color_button = 'none';\r\n          this.back_button = 'inline-block';\r\n          this.toggle_color_message = '고른색';\r\n        }\r\n      }\r\n    });\r\n\r\n    //입장시 방이 가득 찼는지 확인\r\n    socket.on(\"pull_room\", (res) => {\r\n        console.log(res + \"방이 가득 찼습니다.\");\r\n        alert(\"방이 가득 찼습니다. 뒤로 돌아갑니다\");\r\n        // master 면 create 로\r\n        if( this.$route.params.is_master === 'true' ){\r\n          this.$router.push({\r\n            name: 'create_lobby',\r\n            params : {\r\n                count : this.$route.params.count\r\n            }\r\n          });\r\n        }\r\n        // entrans 면 enter 로\r\n        else {\r\n          this.$router.push({\r\n            name: 'enter_lobby',\r\n          });\r\n        }\r\n        \r\n        \r\n    });\r\n\r\n    // 마스터가 아닌데 방이 없는 곳에 들어갈 경우\r\n    socket.on(\"no_room\", () => {\r\n      alert(\"방이 아직 생성되지 않았거나 잘못된 주소입니다. 주소를 확인해주세요\");\r\n      alert(\"뒤로 돌아갑니다.\");\r\n      this.$router.push({\r\n          name: 'enter_lobby'\r\n      });\r\n    })\r\n\r\n    // 비밀번호가 잘못 된 경우\r\n    socket.on(\"wrong_pw\", () => {\r\n      alert(\"비밀번호가 잘못되었습니다. 비밀번호를 확인해주세요\");\r\n      this.$router.push({\r\n        name: 'enter_lobby'\r\n      });\r\n    });\r\n\r\n  },\r\n  data() {\r\n    return  {\r\n      users : '',\r\n      textarea : '',\r\n      message : '',\r\n      room_name : '',\r\n      my_key : '',\r\n      color_button : 'inline-block',\r\n      back_button : 'none',\r\n      toggle_color_message : \"색 선택 중\",\r\n      toggle_game_start : \"준비완료\",\r\n    }\r\n  },\r\n  methods : {\r\n    // 고른 색을 서버에 알림\r\n    choose_color : function(color, my_name, my_key) {\r\n\r\n        this.toggle_color_message = this.toggle_color_message === '색 선택 중' ? '고른색' : '색 선택 중';\r\n        this.color_button = this.color_button === 'inline-block' ? 'none' : 'inline-block';\r\n        this.back_button = this.back_button === 'none' ? 'inline-block' : 'none';\r\n        let data = {\r\n          user_name   : my_name,\r\n          user_color  : color,\r\n          user_key    : my_key\r\n        }\r\n        //선택한 값을 서버에 전송\r\n        socket.emit(\"edit_color\", data);\r\n\r\n    },\r\n\r\n    sending_message : function(){\r\n      if( this.message !== '' ){\r\n        let msg = {\r\n          speaker : this.my_name,\r\n          msg : this.message,\r\n          type : \"normal\"\r\n        }\r\n        console.log(msg);\r\n        this.message = '';\r\n        socket.emit(\"chat\", msg);\r\n      }\r\n    },\r\n\r\n    back_choose_color : function() {\r\n      this.toggle_color_message = this.toggle_color_message === '색 선택 중' ? '고른색' : '색 선택 중';\r\n      this.color_button = this.color_button === 'inline-block' ? 'none' : 'inline-block';\r\n      this.back_button = this.back_button === 'none' ? 'inline-block' : 'none';\r\n    },\r\n\r\n    game_start : function(){\r\n      if( this.$route.params.is_master === 'true' ){\r\n        console.log(\"준비완료 클릭\");\r\n      }\r\n      else {\r\n        this.toggle_game_start = this.toggle_game_start === '준비완료' ? '시작대기' : '준비완료';\r\n        this.ready_button_state = this.ready_button_state === 'outline-secondary' ? 'secondary' : 'outline-secondary';\r\n\r\n        \r\n\r\n      }\r\n      \r\n    }\r\n  },\r\n  \r\n  \r\n}\r\n</script>\r\n\r\n<style scoped src=\"@/assets/css/game_lobby.css\"></style>"]},"metadata":{},"sourceType":"module"}