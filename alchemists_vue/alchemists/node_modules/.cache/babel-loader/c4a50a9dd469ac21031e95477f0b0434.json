{"ast":null,"code":"'use strict';\n\nconst {\n  globalAgent\n} = require('../agent.js');\n\nconst Http2OverHttpX = require('./h2-over-hx.js');\n\nconst getAuthorizationHeaders = require('./get-auth-headers.js');\n\nconst getStatusCode = stream => new Promise((resolve, reject) => {\n  stream.once('error', reject);\n  stream.once('response', headers => {\n    stream.off('error', reject);\n    resolve(headers[':status']);\n  });\n});\n\nclass Http2OverHttp2 extends Http2OverHttpX {\n  async _getProxyStream(authority) {\n    const {\n      proxyOptions\n    } = this;\n    const headers = { ...getAuthorizationHeaders(this),\n      ...proxyOptions.headers,\n      ':method': 'CONNECT',\n      ':authority': authority\n    };\n    const stream = await globalAgent.request(proxyOptions.url, proxyOptions, headers);\n    const statusCode = await getStatusCode(stream);\n    return [stream, statusCode];\n  }\n\n}\n\nmodule.exports = Http2OverHttp2;","map":{"version":3,"names":["globalAgent","require","Http2OverHttpX","getAuthorizationHeaders","getStatusCode","stream","Promise","resolve","reject","once","headers","off","Http2OverHttp2","_getProxyStream","authority","proxyOptions","request","url","statusCode","module","exports"],"sources":["E:/web/alchemists_vue/alchemists/node_modules/http2-wrapper/source/proxies/h2-over-h2.js"],"sourcesContent":["'use strict';\nconst {globalAgent} = require('../agent.js');\nconst Http2OverHttpX = require('./h2-over-hx.js');\nconst getAuthorizationHeaders = require('./get-auth-headers.js');\n\nconst getStatusCode = stream => new Promise((resolve, reject) => {\n\tstream.once('error', reject);\n\tstream.once('response', headers => {\n\t\tstream.off('error', reject);\n\t\tresolve(headers[':status']);\n\t});\n});\n\nclass Http2OverHttp2 extends Http2OverHttpX {\n\tasync _getProxyStream(authority) {\n\t\tconst {proxyOptions} = this;\n\n\t\tconst headers = {\n\t\t\t...getAuthorizationHeaders(this),\n\t\t\t...proxyOptions.headers,\n\t\t\t':method': 'CONNECT',\n\t\t\t':authority': authority\n\t\t};\n\n\t\tconst stream = await globalAgent.request(proxyOptions.url, proxyOptions, headers);\n\t\tconst statusCode = await getStatusCode(stream);\n\n\t\treturn [stream, statusCode];\n\t}\n}\n\nmodule.exports = Http2OverHttp2;\n"],"mappings":"AAAA;;AACA,MAAM;EAACA;AAAD,IAAgBC,OAAO,CAAC,aAAD,CAA7B;;AACA,MAAMC,cAAc,GAAGD,OAAO,CAAC,iBAAD,CAA9B;;AACA,MAAME,uBAAuB,GAAGF,OAAO,CAAC,uBAAD,CAAvC;;AAEA,MAAMG,aAAa,GAAGC,MAAM,IAAI,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;EAChEH,MAAM,CAACI,IAAP,CAAY,OAAZ,EAAqBD,MAArB;EACAH,MAAM,CAACI,IAAP,CAAY,UAAZ,EAAwBC,OAAO,IAAI;IAClCL,MAAM,CAACM,GAAP,CAAW,OAAX,EAAoBH,MAApB;IACAD,OAAO,CAACG,OAAO,CAAC,SAAD,CAAR,CAAP;EACA,CAHD;AAIA,CAN+B,CAAhC;;AAQA,MAAME,cAAN,SAA6BV,cAA7B,CAA4C;EACtB,MAAfW,eAAe,CAACC,SAAD,EAAY;IAChC,MAAM;MAACC;IAAD,IAAiB,IAAvB;IAEA,MAAML,OAAO,GAAG,EACf,GAAGP,uBAAuB,CAAC,IAAD,CADX;MAEf,GAAGY,YAAY,CAACL,OAFD;MAGf,WAAW,SAHI;MAIf,cAAcI;IAJC,CAAhB;IAOA,MAAMT,MAAM,GAAG,MAAML,WAAW,CAACgB,OAAZ,CAAoBD,YAAY,CAACE,GAAjC,EAAsCF,YAAtC,EAAoDL,OAApD,CAArB;IACA,MAAMQ,UAAU,GAAG,MAAMd,aAAa,CAACC,MAAD,CAAtC;IAEA,OAAO,CAACA,MAAD,EAASa,UAAT,CAAP;EACA;;AAf0C;;AAkB5CC,MAAM,CAACC,OAAP,GAAiBR,cAAjB"},"metadata":{},"sourceType":"script"}