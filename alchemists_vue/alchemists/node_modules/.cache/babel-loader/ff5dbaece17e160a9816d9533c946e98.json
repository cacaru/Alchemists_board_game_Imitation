{"ast":null,"code":"import { socket } from '@/components/game_lobby.vue';\nexport default {\n  name: 'end_page',\n\n  created() {\n    this.my_key = socket.id;\n  },\n\n  mounted() {\n    // 다시하기 취소!\n    socket.on(\"restart_cancel_check\", () => {\n      this.restart_member_count--;\n    });\n    socket.on(\"restart\", data => {\n      this.room_pw = data.room_pw;\n      this.count = data.count;\n      let is_master = false;\n\n      if (data.master_name == this.my_name) {\n        is_master = true;\n      }\n\n      this.$router.push({\n        name: 'game_lobby',\n        params: {\n          user_name: this.my_name,\n          room_pw: this.room_pw,\n          count: this.count,\n          is_master: is_master // ip port 정보도 보내주는게 원칙인데 서버에 방 형식으로 구현방식을 변경해서 진행해야할듯 일단 ㄱ\n\n        }\n      });\n    });\n  },\n\n  data() {\n    return {\n      game_result: this.$route.params.game_result,\n      my_key: '',\n      restart_member_count: 0,\n      cancel_restart_val: false,\n      my_name: this.$route.params.my_name,\n      room_pw: '',\n      count: ''\n    };\n  },\n\n  methods: {\n    want_restart: function () {\n      // 다시 하고 싶다는 의사 전달 \n      // 추후에 인원이 다 안차더라도 게임 로비로 이동됨\n      // 로비로 이동될 떄 게임방 주인은 순위 가장 높은 사람으로 선정\n      this.restart_member_count++;\n      let send_data = {\n        user_key: this.my_key\n      };\n      this.cancel_restart_val = true;\n      socket.emit(\"restart_checking\", send_data);\n    },\n    close_game: function () {\n      // 서버에서 나가지고 첫번째 페이지로 이동됨\n      socket.emit(\"out_game\");\n      this.$router.push({\n        name: 'first_page'\n      });\n    },\n    cancel_restart: function () {\n      let send_data = {\n        user_key: this.my_key\n      };\n      socket.emit(\"restart_cancel\", send_data);\n    }\n  }\n};","map":{"version":3,"names":["socket","name","created","my_key","id","mounted","on","restart_member_count","data","room_pw","count","is_master","master_name","my_name","$router","push","params","user_name","game_result","$route","cancel_restart_val","methods","want_restart","send_data","user_key","emit","close_game","cancel_restart"],"sources":["E:/GitHub/personal_tranning/alchemists_vue/alchemists/src/assets/script/end_page.js"],"sourcesContent":["import { socket } from '@/components/game_lobby.vue'\r\n\r\nexport default {\r\n    name : 'end_page',\r\n    created() {\r\n        this.my_key = socket.id;\r\n    },\r\n    mounted () {\r\n        // 다시하기 취소!\r\n        socket.on(\"restart_cancel_check\", () => {\r\n            this.restart_member_count--;\r\n        });\r\n\r\n        socket.on(\"restart\", (data) => {\r\n            this.room_pw = data.room_pw;\r\n            this.count = data.count;\r\n            let is_master = false;\r\n            if( data.master_name == this.my_name ){\r\n                is_master = true;\r\n            }\r\n            this.$router.push({\r\n                name: 'game_lobby',\r\n                params : {\r\n                    user_name : this.my_name,\r\n                    room_pw   : this.room_pw,\r\n                    count     : this.count,\r\n                    is_master : is_master,\r\n                    // ip port 정보도 보내주는게 원칙인데 서버에 방 형식으로 구현방식을 변경해서 진행해야할듯 일단 ㄱ\r\n                }\r\n            });\r\n        });\r\n    },\r\n    data () {\r\n        return {\r\n            game_result : this.$route.params.game_result,\r\n            my_key : '',\r\n            restart_member_count : 0,\r\n            cancel_restart_val : false,\r\n            my_name : this.$route.params.my_name,\r\n            room_pw : '',\r\n            count : '',\r\n        }\r\n    },\r\n    methods : {\r\n        want_restart : function() {\r\n            // 다시 하고 싶다는 의사 전달 \r\n            // 추후에 인원이 다 안차더라도 게임 로비로 이동됨\r\n            // 로비로 이동될 떄 게임방 주인은 순위 가장 높은 사람으로 선정\r\n            this.restart_member_count++;\r\n            let send_data = {\r\n                user_key : this.my_key,\r\n            };\r\n            this.cancel_restart_val = true;\r\n            socket.emit(\"restart_checking\", send_data);\r\n        },\r\n        close_game : function() {\r\n            // 서버에서 나가지고 첫번째 페이지로 이동됨\r\n            socket.emit(\"out_game\");\r\n            this.$router.push({\r\n                name : 'first_page',\r\n            });\r\n        },\r\n        cancel_restart : function() {\r\n            let send_data = {\r\n                user_key : this.my_key,\r\n            };\r\n            socket.emit(\"restart_cancel\", send_data);\r\n        },\r\n    }\r\n}"],"mappings":"AAAA,SAASA,MAAT,QAAuB,6BAAvB;AAEA,eAAe;EACXC,IAAI,EAAG,UADI;;EAEXC,OAAO,GAAG;IACN,KAAKC,MAAL,GAAcH,MAAM,CAACI,EAArB;EACH,CAJU;;EAKXC,OAAO,GAAI;IACP;IACAL,MAAM,CAACM,EAAP,CAAU,sBAAV,EAAkC,MAAM;MACpC,KAAKC,oBAAL;IACH,CAFD;IAIAP,MAAM,CAACM,EAAP,CAAU,SAAV,EAAsBE,IAAD,IAAU;MAC3B,KAAKC,OAAL,GAAeD,IAAI,CAACC,OAApB;MACA,KAAKC,KAAL,GAAaF,IAAI,CAACE,KAAlB;MACA,IAAIC,SAAS,GAAG,KAAhB;;MACA,IAAIH,IAAI,CAACI,WAAL,IAAoB,KAAKC,OAA7B,EAAsC;QAClCF,SAAS,GAAG,IAAZ;MACH;;MACD,KAAKG,OAAL,CAAaC,IAAb,CAAkB;QACdd,IAAI,EAAE,YADQ;QAEde,MAAM,EAAG;UACLC,SAAS,EAAG,KAAKJ,OADZ;UAELJ,OAAO,EAAK,KAAKA,OAFZ;UAGLC,KAAK,EAAO,KAAKA,KAHZ;UAILC,SAAS,EAAGA,SAJP,CAKL;;QALK;MAFK,CAAlB;IAUH,CAjBD;EAkBH,CA7BU;;EA8BXH,IAAI,GAAI;IACJ,OAAO;MACHU,WAAW,EAAG,KAAKC,MAAL,CAAYH,MAAZ,CAAmBE,WAD9B;MAEHf,MAAM,EAAG,EAFN;MAGHI,oBAAoB,EAAG,CAHpB;MAIHa,kBAAkB,EAAG,KAJlB;MAKHP,OAAO,EAAG,KAAKM,MAAL,CAAYH,MAAZ,CAAmBH,OAL1B;MAMHJ,OAAO,EAAG,EANP;MAOHC,KAAK,EAAG;IAPL,CAAP;EASH,CAxCU;;EAyCXW,OAAO,EAAG;IACNC,YAAY,EAAG,YAAW;MACtB;MACA;MACA;MACA,KAAKf,oBAAL;MACA,IAAIgB,SAAS,GAAG;QACZC,QAAQ,EAAG,KAAKrB;MADJ,CAAhB;MAGA,KAAKiB,kBAAL,GAA0B,IAA1B;MACApB,MAAM,CAACyB,IAAP,CAAY,kBAAZ,EAAgCF,SAAhC;IACH,CAXK;IAYNG,UAAU,EAAG,YAAW;MACpB;MACA1B,MAAM,CAACyB,IAAP,CAAY,UAAZ;MACA,KAAKX,OAAL,CAAaC,IAAb,CAAkB;QACdd,IAAI,EAAG;MADO,CAAlB;IAGH,CAlBK;IAmBN0B,cAAc,EAAG,YAAW;MACxB,IAAIJ,SAAS,GAAG;QACZC,QAAQ,EAAG,KAAKrB;MADJ,CAAhB;MAGAH,MAAM,CAACyB,IAAP,CAAY,gBAAZ,EAA8BF,SAA9B;IACH;EAxBK;AAzCC,CAAf"},"metadata":{},"sourceType":"module"}