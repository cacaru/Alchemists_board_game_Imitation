{"ast":null,"code":"'use strict'; // See https://github.com/facebook/jest/issues/2549\n// eslint-disable-next-line node/prefer-global/url\n\nrequire(\"core-js/modules/es.array.includes.js\");\n\nrequire(\"core-js/modules/es.error.cause.js\");\n\nconst {\n  URL,\n  urlToHttpOptions\n} = require('url');\n\nconst http = require('http');\n\nconst https = require('https');\n\nconst resolveALPN = require('resolve-alpn');\n\nconst QuickLRU = require('quick-lru');\n\nconst {\n  Agent,\n  globalAgent\n} = require('./agent.js');\n\nconst Http2ClientRequest = require('./client-request.js');\n\nconst calculateServerName = require('./utils/calculate-server-name.js');\n\nconst delayAsyncDestroy = require('./utils/delay-async-destroy.js');\n\nconst cache = new QuickLRU({\n  maxSize: 100\n});\nconst queue = new Map();\n\nconst installSocket = (agent, socket, options) => {\n  socket._httpMessage = {\n    shouldKeepAlive: true\n  };\n\n  const onFree = () => {\n    agent.emit('free', socket, options);\n  };\n\n  socket.on('free', onFree);\n\n  const onClose = () => {\n    agent.removeSocket(socket, options);\n  };\n\n  socket.on('close', onClose);\n\n  const onTimeout = () => {\n    const {\n      freeSockets\n    } = agent;\n\n    for (const sockets of Object.values(freeSockets)) {\n      if (sockets.includes(socket)) {\n        socket.destroy();\n        return;\n      }\n    }\n  };\n\n  socket.on('timeout', onTimeout);\n\n  const onRemove = () => {\n    agent.removeSocket(socket, options);\n    socket.off('close', onClose);\n    socket.off('free', onFree);\n    socket.off('timeout', onTimeout);\n    socket.off('agentRemove', onRemove);\n  };\n\n  socket.on('agentRemove', onRemove);\n  agent.emit('free', socket, options);\n};\n\nconst createResolveProtocol = (cache, queue = new Map(), connect = undefined) => {\n  return async options => {\n    const name = `${options.host}:${options.port}:${options.ALPNProtocols.sort()}`;\n\n    if (!cache.has(name)) {\n      if (queue.has(name)) {\n        const result = await queue.get(name);\n        return {\n          alpnProtocol: result.alpnProtocol\n        };\n      }\n\n      const {\n        path\n      } = options;\n      options.path = options.socketPath;\n      const resultPromise = resolveALPN(options, connect);\n      queue.set(name, resultPromise);\n\n      try {\n        const result = await resultPromise;\n        cache.set(name, result.alpnProtocol);\n        queue.delete(name);\n        options.path = path;\n        return result;\n      } catch (error) {\n        queue.delete(name);\n        options.path = path;\n        throw error;\n      }\n    }\n\n    return {\n      alpnProtocol: cache.get(name)\n    };\n  };\n};\n\nconst defaultResolveProtocol = createResolveProtocol(cache, queue);\n\nmodule.exports = async (input, options, callback) => {\n  if (typeof input === 'string') {\n    input = urlToHttpOptions(new URL(input));\n  } else if (input instanceof URL) {\n    input = urlToHttpOptions(input);\n  } else {\n    input = { ...input\n    };\n  }\n\n  if (typeof options === 'function' || options === undefined) {\n    // (options, callback)\n    callback = options;\n    options = input;\n  } else {\n    // (input, options, callback)\n    options = Object.assign(input, options);\n  }\n\n  options.ALPNProtocols = options.ALPNProtocols || ['h2', 'http/1.1'];\n\n  if (!Array.isArray(options.ALPNProtocols) || options.ALPNProtocols.length === 0) {\n    throw new Error('The `ALPNProtocols` option must be an Array with at least one entry');\n  }\n\n  options.protocol = options.protocol || 'https:';\n  const isHttps = options.protocol === 'https:';\n  options.host = options.hostname || options.host || 'localhost';\n  options.session = options.tlsSession;\n  options.servername = options.servername || calculateServerName(options.headers && options.headers.host || options.host);\n  options.port = options.port || (isHttps ? 443 : 80);\n  options._defaultAgent = isHttps ? https.globalAgent : http.globalAgent;\n  const resolveProtocol = options.resolveProtocol || defaultResolveProtocol; // Note: We don't support `h2session` here\n\n  let {\n    agent\n  } = options;\n\n  if (agent !== undefined && agent !== false && agent.constructor.name !== 'Object') {\n    throw new Error('The `options.agent` can be only an object `http`, `https` or `http2` properties');\n  }\n\n  if (isHttps) {\n    options.resolveSocket = true;\n    let {\n      socket,\n      alpnProtocol,\n      timeout\n    } = await resolveProtocol(options);\n\n    if (timeout) {\n      if (socket) {\n        socket.destroy();\n      }\n\n      const error = new Error(`Timed out resolving ALPN: ${options.timeout} ms`);\n      error.code = 'ETIMEDOUT';\n      error.ms = options.timeout;\n      throw error;\n    } // We can't accept custom `createConnection` because the API is different for HTTP/2\n\n\n    if (socket && options.createConnection) {\n      socket.destroy();\n      socket = undefined;\n    }\n\n    delete options.resolveSocket;\n    const isHttp2 = alpnProtocol === 'h2';\n\n    if (agent) {\n      agent = isHttp2 ? agent.http2 : agent.https;\n      options.agent = agent;\n    }\n\n    if (agent === undefined) {\n      agent = isHttp2 ? globalAgent : https.globalAgent;\n    }\n\n    if (socket) {\n      if (agent === false) {\n        socket.destroy();\n      } else {\n        const defaultCreateConnection = (isHttp2 ? Agent : https.Agent).prototype.createConnection;\n\n        if (agent.createConnection === defaultCreateConnection) {\n          if (isHttp2) {\n            options._reuseSocket = socket;\n          } else {\n            installSocket(agent, socket, options);\n          }\n        } else {\n          socket.destroy();\n        }\n      }\n    }\n\n    if (isHttp2) {\n      return delayAsyncDestroy(new Http2ClientRequest(options, callback));\n    }\n  } else if (agent) {\n    options.agent = agent.http;\n  }\n\n  return delayAsyncDestroy(http.request(options, callback));\n};\n\nmodule.exports.protocolCache = cache;\nmodule.exports.resolveProtocol = defaultResolveProtocol;\nmodule.exports.createResolveProtocol = createResolveProtocol;","map":{"version":3,"names":["URL","urlToHttpOptions","require","http","https","resolveALPN","QuickLRU","Agent","globalAgent","Http2ClientRequest","calculateServerName","delayAsyncDestroy","cache","maxSize","queue","Map","installSocket","agent","socket","options","_httpMessage","shouldKeepAlive","onFree","emit","on","onClose","removeSocket","onTimeout","freeSockets","sockets","Object","values","includes","destroy","onRemove","off","createResolveProtocol","connect","undefined","name","host","port","ALPNProtocols","sort","has","result","get","alpnProtocol","path","socketPath","resultPromise","set","delete","error","defaultResolveProtocol","module","exports","input","callback","assign","Array","isArray","length","Error","protocol","isHttps","hostname","session","tlsSession","servername","headers","_defaultAgent","resolveProtocol","constructor","resolveSocket","timeout","code","ms","createConnection","isHttp2","http2","defaultCreateConnection","prototype","_reuseSocket","request","protocolCache"],"sources":["E:/web/alchemists_vue/alchemists/node_modules/http2-wrapper/source/auto.js"],"sourcesContent":["'use strict';\n// See https://github.com/facebook/jest/issues/2549\n// eslint-disable-next-line node/prefer-global/url\nconst {URL, urlToHttpOptions} = require('url');\nconst http = require('http');\nconst https = require('https');\nconst resolveALPN = require('resolve-alpn');\nconst QuickLRU = require('quick-lru');\nconst {Agent, globalAgent} = require('./agent.js');\nconst Http2ClientRequest = require('./client-request.js');\nconst calculateServerName = require('./utils/calculate-server-name.js');\nconst delayAsyncDestroy = require('./utils/delay-async-destroy.js');\n\nconst cache = new QuickLRU({maxSize: 100});\nconst queue = new Map();\n\nconst installSocket = (agent, socket, options) => {\n\tsocket._httpMessage = {shouldKeepAlive: true};\n\n\tconst onFree = () => {\n\t\tagent.emit('free', socket, options);\n\t};\n\n\tsocket.on('free', onFree);\n\n\tconst onClose = () => {\n\t\tagent.removeSocket(socket, options);\n\t};\n\n\tsocket.on('close', onClose);\n\n\tconst onTimeout = () => {\n\t\tconst {freeSockets} = agent;\n\n\t\tfor (const sockets of Object.values(freeSockets)) {\n\t\t\tif (sockets.includes(socket)) {\n\t\t\t\tsocket.destroy();\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t};\n\n\tsocket.on('timeout', onTimeout);\n\n\tconst onRemove = () => {\n\t\tagent.removeSocket(socket, options);\n\t\tsocket.off('close', onClose);\n\t\tsocket.off('free', onFree);\n\t\tsocket.off('timeout', onTimeout);\n\t\tsocket.off('agentRemove', onRemove);\n\t};\n\n\tsocket.on('agentRemove', onRemove);\n\n\tagent.emit('free', socket, options);\n};\n\nconst createResolveProtocol = (cache, queue = new Map(), connect = undefined) => {\n\treturn async options => {\n\t\tconst name = `${options.host}:${options.port}:${options.ALPNProtocols.sort()}`;\n\n\t\tif (!cache.has(name)) {\n\t\t\tif (queue.has(name)) {\n\t\t\t\tconst result = await queue.get(name);\n\t\t\t\treturn {alpnProtocol: result.alpnProtocol};\n\t\t\t}\n\n\t\t\tconst {path} = options;\n\t\t\toptions.path = options.socketPath;\n\n\t\t\tconst resultPromise = resolveALPN(options, connect);\n\t\t\tqueue.set(name, resultPromise);\n\n\t\t\ttry {\n\t\t\t\tconst result = await resultPromise;\n\n\t\t\t\tcache.set(name, result.alpnProtocol);\n\t\t\t\tqueue.delete(name);\n\n\t\t\t\toptions.path = path;\n\n\t\t\t\treturn result;\n\t\t\t} catch (error) {\n\t\t\t\tqueue.delete(name);\n\n\t\t\t\toptions.path = path;\n\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\n\t\treturn {alpnProtocol: cache.get(name)};\n\t};\n};\n\nconst defaultResolveProtocol = createResolveProtocol(cache, queue);\n\nmodule.exports = async (input, options, callback) => {\n\tif (typeof input === 'string') {\n\t\tinput = urlToHttpOptions(new URL(input));\n\t} else if (input instanceof URL) {\n\t\tinput = urlToHttpOptions(input);\n\t} else {\n\t\tinput = {...input};\n\t}\n\n\tif (typeof options === 'function' || options === undefined) {\n\t\t// (options, callback)\n\t\tcallback = options;\n\t\toptions = input;\n\t} else {\n\t\t// (input, options, callback)\n\t\toptions = Object.assign(input, options);\n\t}\n\n\toptions.ALPNProtocols = options.ALPNProtocols || ['h2', 'http/1.1'];\n\n\tif (!Array.isArray(options.ALPNProtocols) || options.ALPNProtocols.length === 0) {\n\t\tthrow new Error('The `ALPNProtocols` option must be an Array with at least one entry');\n\t}\n\n\toptions.protocol = options.protocol || 'https:';\n\tconst isHttps = options.protocol === 'https:';\n\n\toptions.host = options.hostname || options.host || 'localhost';\n\toptions.session = options.tlsSession;\n\toptions.servername = options.servername || calculateServerName((options.headers && options.headers.host) || options.host);\n\toptions.port = options.port || (isHttps ? 443 : 80);\n\toptions._defaultAgent = isHttps ? https.globalAgent : http.globalAgent;\n\n\tconst resolveProtocol = options.resolveProtocol || defaultResolveProtocol;\n\n\t// Note: We don't support `h2session` here\n\n\tlet {agent} = options;\n\tif (agent !== undefined && agent !== false && agent.constructor.name !== 'Object') {\n\t\tthrow new Error('The `options.agent` can be only an object `http`, `https` or `http2` properties');\n\t}\n\n\tif (isHttps) {\n\t\toptions.resolveSocket = true;\n\n\t\tlet {socket, alpnProtocol, timeout} = await resolveProtocol(options);\n\n\t\tif (timeout) {\n\t\t\tif (socket) {\n\t\t\t\tsocket.destroy();\n\t\t\t}\n\n\t\t\tconst error = new Error(`Timed out resolving ALPN: ${options.timeout} ms`);\n\t\t\terror.code = 'ETIMEDOUT';\n\t\t\terror.ms = options.timeout;\n\n\t\t\tthrow error;\n\t\t}\n\n\t\t// We can't accept custom `createConnection` because the API is different for HTTP/2\n\t\tif (socket && options.createConnection) {\n\t\t\tsocket.destroy();\n\t\t\tsocket = undefined;\n\t\t}\n\n\t\tdelete options.resolveSocket;\n\n\t\tconst isHttp2 = alpnProtocol === 'h2';\n\n\t\tif (agent) {\n\t\t\tagent = isHttp2 ? agent.http2 : agent.https;\n\t\t\toptions.agent = agent;\n\t\t}\n\n\t\tif (agent === undefined) {\n\t\t\tagent = isHttp2 ? globalAgent : https.globalAgent;\n\t\t}\n\n\t\tif (socket) {\n\t\t\tif (agent === false) {\n\t\t\t\tsocket.destroy();\n\t\t\t} else {\n\t\t\t\tconst defaultCreateConnection = (isHttp2 ? Agent : https.Agent).prototype.createConnection;\n\n\t\t\t\tif (agent.createConnection === defaultCreateConnection) {\n\t\t\t\t\tif (isHttp2) {\n\t\t\t\t\t\toptions._reuseSocket = socket;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tinstallSocket(agent, socket, options);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tsocket.destroy();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (isHttp2) {\n\t\t\treturn delayAsyncDestroy(new Http2ClientRequest(options, callback));\n\t\t}\n\t} else if (agent) {\n\t\toptions.agent = agent.http;\n\t}\n\n\treturn delayAsyncDestroy(http.request(options, callback));\n};\n\nmodule.exports.protocolCache = cache;\nmodule.exports.resolveProtocol = defaultResolveProtocol;\nmodule.exports.createResolveProtocol = createResolveProtocol;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}