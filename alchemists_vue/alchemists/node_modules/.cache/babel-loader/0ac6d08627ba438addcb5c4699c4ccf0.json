{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-a64c3d3a\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  id: \"create_lobby\"\n};\nconst _hoisted_2 = {\n  id: \"title\"\n};\nconst _hoisted_3 = {\n  id: \"create_info\"\n};\nconst _hoisted_4 = {\n  class: \"show_word\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"p\", _hoisted_2, _toDisplayString(this.$route.params.count) + \"인 게임 생성 \", 1\n  /* TEXT */\n  ), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"p\", _hoisted_4, _toDisplayString($data.ip_address), 1\n  /* TEXT */\n  )])]);\n}","map":{"version":3,"mappings":";;;;;EACSA,EAAE,EAAC;;;EACDA,EAAE,EAAC;;;EACGA,EAAE,EAAC;;;EACDC,KAAK,EAAC;;;uBAHrBC,oBAMM,KANN,cAMM,CALFC,oBAAyD,GAAzD,cAAyDC,sBAAlCC,MAAkC,CAA3BC,MAA2B,CAApBC,KAAoB,IAAZ,UAA7C,EAAqD;EAAA;EAArD,CAKE,EAJEJ,oBAGM,KAHN,cAGM,CAFFA,oBAA2C,GAA3C,cAA2CC,iBAAlBI,gBAAkB,CAA3C,EAAmC;EAAA;EAAnC,CAEE,CAHN,CAIF,CANN","names":["id","class","_createElementBlock","_createElementVNode","_toDisplayString","$route","params","count","$data"],"sourceRoot":"","sources":["E:\\web\\alchemists_vue\\alchemists\\src\\components\\create_lobby.vue"],"sourcesContent":["<template>\r\n    <div id=\"create_lobby\">\r\n        <p id=\"title\"> {{ this.$route.params.count }}인 게임 생성 </p>\r\n            <div id=\"create_info\">\r\n                <p class=\"show_word\"> {{ ip_address }} </p>\r\n                \r\n            </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\n\r\nexport default {\r\n    el : '#create_lobby',\r\n    name: 'create_lobby',\r\n    data() {\r\n        return {\r\n            ip_address : async () => {\r\n                try {\r\n                    const my_ip = await axios.get('https://api.ipify.org');\r\n                    //console.log(my_ip.data);\r\n                } catch (error) {\r\n                    console.error(error);\r\n                }\r\n                return my_ip.data;\r\n            } ,\r\n        }\r\n    },\r\n    created : () => {\r\n        get_ip_address();\r\n    },\r\n    methods: {\r\n       \r\n    }\r\n}\r\n\r\n</script>\r\n\r\n<style scoped src=\"@/assets/css/create_lobby.css\"></style>"]},"metadata":{},"sourceType":"module"}