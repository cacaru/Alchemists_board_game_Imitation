{"ast":null,"code":"import { io } from 'socket.io-client';\nimport { default as Create_lobby } from '@/components/create_lobby.vue'; // 다른 곳에서도 쓸 수 있게 전역 선언\n\nvar socket;\nexport default {\n  name: 'room_list',\n  components: {\n    Create_lobby: Create_lobby\n  },\n\n  created() {\n    socket = io('http://' + this.$route.params.ip + \":3000\");\n    this.enter_server();\n  },\n\n  mounted() {\n    socket.on(\"enter_room_success\", data => {\n      // router로 방 선택/ 생성 창으로 이동\n      console.log(data);\n      this.room_list = data;\n    });\n  },\n\n  data() {\n    return {\n      name: this.$route.params.name,\n      room_list: '',\n      room_pw: '',\n      listing: true,\n      loading: true,\n      check_pw_modal: false\n    };\n  },\n\n  methods: {\n    enter_server: async function () {\n      setTimeout(() => {\n        if (socket.id == undefined || socket.id == '') {\n          // 접속 실패로 이전화면으로 돌림\n          alert(\"접속에 실패하였습니다.\\n 주소를 다시 확인해주세요\");\n          this.$router.push({\n            name: 'first_page',\n            params: {\n              refresh: true\n            }\n          });\n        }\n\n        this.loading = false;\n        socket.emit(\"enter_room_gate\", this.$route.params.name);\n      }, 3000);\n    },\n    create_room: function () {\n      this.listing = false;\n    },\n    back_page: function () {\n      this.listing = true;\n    },\n    pw_modal_on: function (room_name) {\n      console.log(room_name); // pw입력창 띄우기\n\n      this.check_pw_modal = true;\n    }\n  }\n};\nexport { socket };","map":{"version":3,"names":["io","default","Create_lobby","socket","name","components","created","$route","params","ip","enter_server","mounted","on","data","console","log","room_list","room_pw","listing","loading","check_pw_modal","methods","setTimeout","id","undefined","alert","$router","push","refresh","emit","create_room","back_page","pw_modal_on","room_name"],"sources":["E:/GitHub/personal_tranning/alchemists_vue/alchemists/src/assets/script/room_list.js"],"sourcesContent":["import { io } from 'socket.io-client';\r\nimport { default as Create_lobby } from '@/components/create_lobby.vue';\r\n\r\n// 다른 곳에서도 쓸 수 있게 전역 선언\r\nvar socket;\r\n\r\nexport default {\r\n    name : 'room_list',\r\n    components : {\r\n        Create_lobby : Create_lobby,\r\n    },\r\n    created() {\r\n        socket = io('http://' + this.$route.params.ip + \":3000\");\r\n        this.enter_server();\r\n    },\r\n    mounted() {\r\n        socket.on(\"enter_room_success\", (data)=> {\r\n            // router로 방 선택/ 생성 창으로 이동\r\n            console.log(data);\r\n            this.room_list = data;\r\n        });\r\n    },\r\n    data () {\r\n        return {\r\n            name : this.$route.params.name,\r\n            room_list : '',\r\n            room_pw : '',\r\n            listing : true,\r\n            loading : true,\r\n            check_pw_modal : false,\r\n        }\r\n    },\r\n    methods : {\r\n        enter_server : async function() {\r\n            setTimeout(()=>{\r\n                if( socket.id == undefined || socket.id == '' ){\r\n                    // 접속 실패로 이전화면으로 돌림\r\n                    alert(\"접속에 실패하였습니다.\\n 주소를 다시 확인해주세요\");\r\n                    this.$router.push({\r\n                        name: 'first_page',\r\n                        params : {\r\n                            refresh : true,\r\n                        }\r\n                    });\r\n                }\r\n                this.loading = false;\r\n                socket.emit(\"enter_room_gate\", this.$route.params.name);\r\n            }, 3000);\r\n            \r\n        },\r\n\r\n        create_room : function() {\r\n            this.listing = false;\r\n        },\r\n        back_page : function() {\r\n            this.listing = true;\r\n        },\r\n\r\n        pw_modal_on : function(room_name) {\r\n            console.log(room_name);\r\n            // pw입력창 띄우기\r\n            this.check_pw_modal = true;\r\n        },\r\n    },\r\n}\r\n\r\nexport { socket };"],"mappings":"AAAA,SAASA,EAAT,QAAmB,kBAAnB;AACA,SAASC,OAAO,IAAIC,YAApB,QAAwC,+BAAxC,C,CAEA;;AACA,IAAIC,MAAJ;AAEA,eAAe;EACXC,IAAI,EAAG,WADI;EAEXC,UAAU,EAAG;IACTH,YAAY,EAAGA;EADN,CAFF;;EAKXI,OAAO,GAAG;IACNH,MAAM,GAAGH,EAAE,CAAC,YAAY,KAAKO,MAAL,CAAYC,MAAZ,CAAmBC,EAA/B,GAAoC,OAArC,CAAX;IACA,KAAKC,YAAL;EACH,CARU;;EASXC,OAAO,GAAG;IACNR,MAAM,CAACS,EAAP,CAAU,oBAAV,EAAiCC,IAAD,IAAS;MACrC;MACAC,OAAO,CAACC,GAAR,CAAYF,IAAZ;MACA,KAAKG,SAAL,GAAiBH,IAAjB;IACH,CAJD;EAKH,CAfU;;EAgBXA,IAAI,GAAI;IACJ,OAAO;MACHT,IAAI,EAAG,KAAKG,MAAL,CAAYC,MAAZ,CAAmBJ,IADvB;MAEHY,SAAS,EAAG,EAFT;MAGHC,OAAO,EAAG,EAHP;MAIHC,OAAO,EAAG,IAJP;MAKHC,OAAO,EAAG,IALP;MAMHC,cAAc,EAAG;IANd,CAAP;EAQH,CAzBU;;EA0BXC,OAAO,EAAG;IACNX,YAAY,EAAG,kBAAiB;MAC5BY,UAAU,CAAC,MAAI;QACX,IAAInB,MAAM,CAACoB,EAAP,IAAaC,SAAb,IAA0BrB,MAAM,CAACoB,EAAP,IAAa,EAA3C,EAA+C;UAC3C;UACAE,KAAK,CAAC,8BAAD,CAAL;UACA,KAAKC,OAAL,CAAaC,IAAb,CAAkB;YACdvB,IAAI,EAAE,YADQ;YAEdI,MAAM,EAAG;cACLoB,OAAO,EAAG;YADL;UAFK,CAAlB;QAMH;;QACD,KAAKT,OAAL,GAAe,KAAf;QACAhB,MAAM,CAAC0B,IAAP,CAAY,iBAAZ,EAA+B,KAAKtB,MAAL,CAAYC,MAAZ,CAAmBJ,IAAlD;MACH,CAbS,EAaP,IAbO,CAAV;IAeH,CAjBK;IAmBN0B,WAAW,EAAG,YAAW;MACrB,KAAKZ,OAAL,GAAe,KAAf;IACH,CArBK;IAsBNa,SAAS,EAAG,YAAW;MACnB,KAAKb,OAAL,GAAe,IAAf;IACH,CAxBK;IA0BNc,WAAW,EAAG,UAASC,SAAT,EAAoB;MAC9BnB,OAAO,CAACC,GAAR,CAAYkB,SAAZ,EAD8B,CAE9B;;MACA,KAAKb,cAAL,GAAsB,IAAtB;IACH;EA9BK;AA1BC,CAAf;AA4DA,SAASjB,MAAT"},"metadata":{},"sourceType":"module"}