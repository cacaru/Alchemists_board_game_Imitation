{"ast":null,"code":"import io from 'socket.io-client'; // 다른 곳에서도 쓸 수 있게 전역 선언\n\nvar socket;\nexport default {\n  name: 'game_lobby',\n\n  created() {\n    //this.$route.params.room_address:this.$route.params.port\n    socket = io(`http://192.168.0.102:3000`); // console.log(params);\n    // console.log(params.nick_name);\n\n    console.log(\"server in\"); //마스터 인 입장만 count를 가지고 있으므로\n\n    if (this.$route.params.is_master) {\n      let msg = {\n        user_name: this.$route.params.nick_name,\n        room_pw: this.$route.params.room_pw,\n        count: this.$route.params.count,\n        is_master: this.$route.params.is_master,\n        msg: this.$route.params.nick_name + \" 가 방에 참가하였습니다.\"\n      };\n    } else {\n      let msg = {\n        user_name: this.$route.params.nick_name,\n        room_pw: this.$route.params.room_pw,\n        is_master: this.$route.params.is_master,\n        msg: this.$route.params.nick_name + \" 가 방에 참가하였습니다.\"\n      };\n    } // 입장했음을 알림\n\n\n    socket.emit(\"enter\", msg); //다른 채팅이 있는지 확인\n\n    socket.on(\"chat\", data => {\n      switch (data.type) {\n        case \"announce\":\n          this.textarea += data.speaker + \" 이(가) \" + data.msg + \"\\n\";\n          break;\n\n        case \"normal\":\n          this.textarea += data.speaker + \" : \" + data.msg + \"\\n\";\n          break;\n      }\n\n      console.log(\"chat :: \");\n      console.log(data);\n    }); // 다른 플레이어가 입장시 / 색깔 선택 시 정보를 받음\n\n    socket.on(\"all_player\", data => {\n      console.log(data);\n      this.users = data;\n\n      for (var i = 0; i < this.users.length; i++) {\n        if (this.users[i].user_color != '') {\n          this.color_button = 'none';\n          this.back_button = 'inline-block';\n          this.toggle_color_message = '고른색';\n        }\n      }\n    }); //입장시 방이 가득 찼는지 확인\n\n    socket.on(\"pull_room\", res => {\n      console.log(res + \"방이 가득 찼습니다.\");\n      this.$router.push({\n        name: 'create_lobby',\n        params: {\n          count: this.$route.params.count\n        }\n      });\n      alert(\"방이 가득 찼습니다. 뒤로 돌아갑니다\");\n    }); // 마스터가 아닌데 방이 없는 곳에 들어갈 경우\n\n    socket.on(\"no_room\", () => {\n      alert(\"방이 아직 생성되지 않았거나 잘못된 주소입니다. 주소를 확인해주세요\");\n      alert(\"뒤로 돌아갑니다.\");\n      this.$router.push({\n        name: 'enter_lobby'\n      });\n    }); // 비밀번호가 잘못 된 경우\n\n    socket.on(\"wrong_pw\", () => {\n      alert(\"비밀번호가 잘못되었습니다. 비밀번호를 확인해주세요\");\n      this.$router.push({\n        name: 'enter_lobby'\n      });\n    });\n  },\n\n  data() {\n    return {\n      users: '',\n      textarea: '',\n      message: '',\n      my_name: this.$route.params.nick_name,\n      color_button: 'inline-block',\n      back_button: 'none',\n      toggle_color_message: \"색을 골라주세요\"\n    };\n  },\n\n  methods: {\n    // 고른 색을 서버에 알림\n    choose_color: function (color, my_name, my_key) {\n      this.toggle_color_message = this.toggle_color_message === '색을 골라주세요' ? '고른색' : '색을 골라주세요';\n      this.color_button = this.color_button === 'inline-block' ? 'none' : 'inline-block';\n      this.back_button = this.back_button === 'none' ? 'inline-block' : 'none';\n      let data = {\n        user_name: my_name,\n        user_color: color,\n        user_key: my_key\n      }; //선택한 값을 서버에 전송\n\n      socket.emit(\"edit_color\", data);\n    },\n    sending_message: function () {\n      let msg = {\n        speaker: this.my_name,\n        msg: this.message,\n        type: \"normal\"\n      };\n      console.log(msg);\n      this.message = '';\n      socket.emit(\"chat\", msg);\n    },\n    back_choose_color: function () {\n      this.toggle_color_message = this.toggle_color_message === '색을 골라주세요' ? '고른색' : '색을 골라주세요';\n      this.color_button = this.color_button === 'inline-block' ? 'none' : 'inline-block';\n      this.back_button = this.back_button === 'none' ? 'inline-block' : 'none';\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["io","socket","name","created","console","log","$route","params","is_master","msg","user_name","nick_name","room_pw","count","emit","on","data","type","textarea","speaker","users","i","length","user_color","color_button","back_button","toggle_color_message","res","$router","push","alert","message","my_name","methods","choose_color","color","my_key","user_key","sending_message","back_choose_color"],"sourceRoot":"","sources":["E:\\web\\alchemists_vue\\alchemists\\src\\components\\game_lobby.vue"],"sourcesContent":["<template>\r\n    <div id=\"game_lobby\">\r\n        <div id=\"room_title\">\r\n            {{ this.$route.params.room_name }}\r\n        </div>\r\n        <div id=\"room_back\">\r\n          <div class=\"entrans\" v-for=\"entrans in users\" :key=\"entrans\">\r\n              <p class=\"inline name\">이름</p>\r\n              <p class=\"inline user_name\"> {{ entrans.user_name }} </p>\r\n              \r\n              <div class=\"choose_color_section\">\r\n                <p class=\"user_color_announce\"> {{ toggle_color_message }} </p>\r\n                <div class=\"button_area\">\r\n                  <button class=\"red color\"   v-on:click=\"choose_color('red', entrans.user_name, entrans.user_key)\" v-bind:style=\"{display : color_button }\"></button>\r\n                  <button class=\"blue color\"  v-on:click=\"choose_color('blue', entrans.user_name, entrans.user_key)\" v-bind:style=\"{display : color_button }\"></button>\r\n                  <button class=\"black color\" v-on:click=\"choose_color('black', entrans.user_name, entrans.user_key)\" v-bind:style=\"{display : color_button }\"></button>\r\n                  <button class=\"white color\" v-on:click=\"choose_color('white', entrans.user_name, entrans.user_key)\" v-bind:style=\"{display : color_button }\"></button>\r\n                  <button class=\"back_to_choose_color\" v-on:click=\"back_choose_color\" v-bind:style=\"{display : back_button , background: entrans.user_color }\"></button>\r\n                  <p class=\"announce\" v-bind:style=\"{display : back_button }\"> 한 번 더 누르면 고른 색이 취소됩니다. </p>\r\n                </div>\r\n              </div>\r\n          </div>\r\n        </div>\r\n        <textarea id=\"chat_area\" v-model=\"textarea\" disabled></textarea>\r\n        <div></div>\r\n        <input id=\"message_area\" v-model=\"message\" v-on:keyup.enter=\"sending_message\"/>\r\n        <button id=\"sending\" v-on:click=\"sending_message\"> 보내기 </button>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport io from 'socket.io-client';\r\n\r\n// 다른 곳에서도 쓸 수 있게 전역 선언\r\nvar socket;\r\n\r\nexport default {\r\n  name : 'game_lobby',\r\n  created() {\r\n    //this.$route.params.room_address:this.$route.params.port\r\n    socket = io(`http://192.168.0.102:3000`);\r\n    // console.log(params);\r\n    // console.log(params.nick_name);\r\n    console.log(\"server in\");\r\n\r\n    //마스터 인 입장만 count를 가지고 있으므로\r\n    if ( this.$route.params.is_master ) {\r\n      let msg = {\r\n        user_name : this.$route.params.nick_name,\r\n        room_pw   : this.$route.params.room_pw,\r\n        count     : this.$route.params.count,\r\n        is_master : this.$route.params.is_master,\r\n        msg       : this.$route.params.nick_name + \" 가 방에 참가하였습니다.\"\r\n      };\r\n    } else {\r\n      let msg = {\r\n        user_name : this.$route.params.nick_name,\r\n        room_pw   : this.$route.params.room_pw,\r\n        is_master : this.$route.params.is_master,\r\n        msg       : this.$route.params.nick_name + \" 가 방에 참가하였습니다.\"\r\n      }\r\n    }\r\n   \r\n    // 입장했음을 알림\r\n    socket.emit(\"enter\", msg);\r\n\r\n    //다른 채팅이 있는지 확인\r\n    socket.on(\"chat\", (data) => {\r\n      switch ( data.type ) {\r\n        case \"announce\" :\r\n          this.textarea += data.speaker + \" 이(가) \" + data.msg + \"\\n\";\r\n          break;\r\n        case \"normal\" :\r\n          this.textarea += data.speaker + \" : \" + data.msg + \"\\n\";\r\n          break;\r\n      }\r\n      console.log(\"chat :: \");\r\n      console.log(data);\r\n    });\r\n\r\n    // 다른 플레이어가 입장시 / 색깔 선택 시 정보를 받음\r\n    socket.on(\"all_player\", (data) => {\r\n      console.log(data);\r\n      this.users = data;\r\n      for( var i = 0; i < this.users.length ; i++ ) {\r\n        if( this.users[i].user_color != '' ){\r\n          this.color_button = 'none';\r\n          this.back_button = 'inline-block';\r\n          this.toggle_color_message = '고른색';\r\n        }\r\n      }\r\n      \r\n    });\r\n\r\n    //입장시 방이 가득 찼는지 확인\r\n    socket.on(\"pull_room\", (res) => {\r\n        console.log(res + \"방이 가득 찼습니다.\");\r\n        this.$router.push({\r\n          name: 'create_lobby',\r\n          params : {\r\n              count : this.$route.params.count\r\n          }\r\n          });\r\n        alert(\"방이 가득 찼습니다. 뒤로 돌아갑니다\");\r\n    });\r\n\r\n    // 마스터가 아닌데 방이 없는 곳에 들어갈 경우\r\n    socket.on(\"no_room\", () => {\r\n      alert(\"방이 아직 생성되지 않았거나 잘못된 주소입니다. 주소를 확인해주세요\");\r\n      alert(\"뒤로 돌아갑니다.\");\r\n      this.$router.push({\r\n          name: 'enter_lobby'\r\n      });\r\n    })\r\n\r\n    // 비밀번호가 잘못 된 경우\r\n    socket.on(\"wrong_pw\", () => {\r\n      alert(\"비밀번호가 잘못되었습니다. 비밀번호를 확인해주세요\");\r\n      this.$router.push({\r\n        name: 'enter_lobby'\r\n      });\r\n    });\r\n\r\n  },\r\n  data() {\r\n    return  {\r\n      users : '',\r\n      textarea : '',\r\n      message : '',\r\n      my_name : this.$route.params.nick_name,\r\n      color_button : 'inline-block',\r\n      back_button : 'none',\r\n      toggle_color_message : \"색을 골라주세요\",\r\n    }\r\n  },\r\n  methods : {\r\n    // 고른 색을 서버에 알림\r\n    choose_color : function(color, my_name, my_key) {\r\n      this.toggle_color_message = this.toggle_color_message === '색을 골라주세요' ? '고른색' : '색을 골라주세요';\r\n      this.color_button = this.color_button === 'inline-block' ? 'none' : 'inline-block';\r\n      this.back_button = this.back_button === 'none' ? 'inline-block' : 'none';\r\n      let data = {\r\n        user_name   : my_name,\r\n        user_color  : color,\r\n        user_key    : my_key\r\n      }\r\n      //선택한 값을 서버에 전송\r\n      socket.emit(\"edit_color\", data);\r\n    },\r\n\r\n    sending_message : function(){\r\n      let msg = {\r\n        speaker : this.my_name,\r\n        msg : this.message,\r\n        type : \"normal\"\r\n      }\r\n      console.log(msg);\r\n      this.message = '';\r\n      socket.emit(\"chat\", msg);\r\n    },\r\n\r\n    back_choose_color : function() {\r\n      this.toggle_color_message = this.toggle_color_message === '색을 골라주세요' ? '고른색' : '색을 골라주세요';\r\n      this.color_button = this.color_button === 'inline-block' ? 'none' : 'inline-block';\r\n      this.back_button = this.back_button === 'none' ? 'inline-block' : 'none';\r\n    }\r\n  },\r\n  \r\n  \r\n}\r\n</script>\r\n\r\n<style scoped src=\"@/assets/css/game_lobby.css\"></style>"]},"metadata":{},"sourceType":"module"}