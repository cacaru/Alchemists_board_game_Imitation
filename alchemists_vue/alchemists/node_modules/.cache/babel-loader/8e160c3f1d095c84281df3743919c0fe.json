{"ast":null,"code":"import io from 'socket.io-client'; // 다른 곳에서도 쓸 수 있게 전역 선언\n\nvar socket;\nexport default {\n  name: 'game_lobby',\n\n  created() {\n    //this.$route.params.room_address:this.$route.params.port\n    socket = io(`http://192.168.0.102:3000`); // console.log(params);\n    // console.log(params.nick_name);\n\n    console.log(\"server in\");\n    let msg = {\n      user_name: this.$route.params.nick_name,\n      room_pw: this.$route.params.room_pw,\n      count: this.$route.params.count,\n      msg: this.$route.params.nick_name + \" 가 방에 참가하였습니다.\"\n    }; // 입장했음을 알림\n\n    socket.emit(\"enter\", msg); //다른 채팅이 있는지 확인\n\n    socket.on(\"chat\", data => {\n      switch (data.type) {\n        case \"announce\":\n          this.textarea += data.speaker + \" 이(가) \" + data.msg + \"\\n\";\n          break;\n\n        case \"normal\":\n          this.textarea += data.speaker + \" : \" + data.msg + \"\\n\";\n          break;\n      }\n\n      console.log(\"chat :: \");\n      console.log(data);\n    }); // 다른 플레이어가 입장시 / 색깔 선택 시 정보를 받음\n\n    socket.on(\"all_player\", data => {\n      console.log(\"all player work\");\n      console.log(data);\n      this.users = data;\n    }); //입장시 방이 가득 찼는지 확인\n\n    socket.on(\"pull_room\", res => {\n      console.log(res + \"방이 가득 찼습니다.\");\n      this.$router.push({\n        name: 'create_lobby',\n        params: {\n          count: this.$route.params.count\n        }\n      });\n      alert(\"방이 가득 찼습니다. 뒤로 돌아갑니다\");\n    });\n  },\n\n  data() {\n    return {\n      users: '',\n      textarea: '',\n      message: '',\n      my_name: this.$route.params.nick_name,\n      color_button: 'inline-block',\n      back_button: 'none',\n      toggle_color_message: \"색을 골라주세요\"\n    };\n  },\n\n  methods: {\n    choose_color: function (color, my_name, my_key) {\n      this.toggle_color_message = this.toggle_color_message === '색을 골라주세요' ? '고른색' : '색을 골라주세요';\n      this.color_button = this.color_button === 'inline-block' ? 'none' : 'inline-block';\n      this.back_button = this.back_button === 'none' ? 'inline-block' : 'none';\n      let data = {\n        user_name: my_name,\n        user_color: color,\n        user_key: my_key\n      }; //선택한 값을 서버에 전송\n\n      socket.emit(\"edit_color\", data);\n    },\n    sending_message: function () {\n      console.log(this.my_name);\n      let msg = {\n        speaker: this.my_name,\n        msg: this.message,\n        type: \"normal\"\n      };\n      console.log(msg);\n      this.message = '';\n      socket.emit(\"chat\", msg);\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["io","socket","name","created","console","log","msg","user_name","$route","params","nick_name","room_pw","count","emit","on","data","type","textarea","speaker","users","res","$router","push","alert","message","my_name","color_button","back_button","toggle_color_message","methods","choose_color","color","my_key","user_color","user_key","sending_message"],"sourceRoot":"","sources":["E:\\web\\alchemists_vue\\alchemists\\src\\components\\game_lobby.vue"],"sourcesContent":["<template>\r\n    <div id=\"game_lobby\">\r\n        <div id=\"room_title\">\r\n            {{ this.$route.params.room_name }}\r\n        </div>\r\n        <div id=\"room_back\">\r\n          <div class=\"entrans\" v-for=\"entrans in users\" :key=\"entrans\">\r\n              <p class=\"inline name\">이름</p>\r\n              <p class=\"inline user_name\"> {{ entrans.user_name }} </p>\r\n              \r\n              <div class=\"choose_color_section\">\r\n                <p class=\"user_color_announce\"> {{ toggle_color_message }} </p>\r\n                <div class=\"button_area\">\r\n                  <button class=\"red color\"   v-on:click=\"choose_color('red', entrans.user_name, entrans.user_key)\" v-bind:style=\"{display : color_button }\"></button>\r\n                  <button class=\"blue color\"  v-on:click=\"choose_color('blue', entrans.user_name, entrans.user_key)\" v-bind:style=\"{display : color_button }\"></button>\r\n                  <button class=\"black color\" v-on:click=\"choose_color('black', entrans.user_name, entrans.user_key)\" v-bind:style=\"{display : color_button }\"></button>\r\n                  <button class=\"white color\" v-on:click=\"choose_color('white', entrans.user_name, entrans.user_key)\" v-bind:style=\"{display : color_button }\"></button>\r\n                  <button class=\"back_to_choose_color\" v-on:click=\"back_choose_color\" v-bind:style=\"{display : back_button , backgroundColor: entrans.user_color }\"></button>\r\n                </div>\r\n              </div>\r\n          </div>\r\n        </div>\r\n        <textarea id=\"chat_area\" v-model=\"textarea\" disabled></textarea>\r\n        <div></div>\r\n        <input id=\"message_area\" v-model=\"message\" />\r\n        <button id=\"sending\" v-on:click=\"sending_message\"> 보내기 </button>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport io from 'socket.io-client';\r\n\r\n// 다른 곳에서도 쓸 수 있게 전역 선언\r\nvar socket;\r\n\r\nexport default {\r\n  name : 'game_lobby',\r\n  created() {\r\n    //this.$route.params.room_address:this.$route.params.port\r\n    socket = io(`http://192.168.0.102:3000`)\r\n    // console.log(params);\r\n    // console.log(params.nick_name);\r\n    console.log(\"server in\");\r\n\r\n    let msg = {\r\n        user_name : this.$route.params.nick_name,\r\n        room_pw   : this.$route.params.room_pw,\r\n        count     : this.$route.params.count,\r\n        msg       : this.$route.params.nick_name + \" 가 방에 참가하였습니다.\"\r\n    };\r\n    // 입장했음을 알림\r\n    socket.emit(\"enter\", msg);\r\n\r\n    //다른 채팅이 있는지 확인\r\n    socket.on(\"chat\", (data) => {\r\n      switch ( data.type ) {\r\n        case \"announce\" :\r\n          this.textarea += data.speaker + \" 이(가) \" + data.msg + \"\\n\";\r\n          break;\r\n        case \"normal\" :\r\n          this.textarea += data.speaker + \" : \" + data.msg + \"\\n\";\r\n          break;\r\n      }\r\n      console.log(\"chat :: \");\r\n      console.log(data);\r\n    });\r\n\r\n    // 다른 플레이어가 입장시 / 색깔 선택 시 정보를 받음\r\n    socket.on(\"all_player\", (data) => {\r\n      console.log(\"all player work\");\r\n      console.log(data);\r\n      this.users = data;\r\n    });\r\n\r\n    //입장시 방이 가득 찼는지 확인\r\n    socket.on(\"pull_room\", (res) => {\r\n        console.log(res + \"방이 가득 찼습니다.\");\r\n        this.$router.push({\r\n          name: 'create_lobby',\r\n          params : {\r\n              count : this.$route.params.count\r\n          }\r\n          });\r\n        alert(\"방이 가득 찼습니다. 뒤로 돌아갑니다\");\r\n    });\r\n\r\n  },\r\n  data() {\r\n    return  {\r\n      users : '',\r\n      textarea : '',\r\n      message : '',\r\n      my_name : this.$route.params.nick_name,\r\n      color_button : 'inline-block',\r\n      back_button : 'none',\r\n      toggle_color_message : \"색을 골라주세요\",\r\n    }\r\n  },\r\n  methods : {\r\n    choose_color : function(color, my_name, my_key) {\r\n      this.toggle_color_message = this.toggle_color_message === '색을 골라주세요' ? '고른색' : '색을 골라주세요';\r\n      this.color_button = this.color_button === 'inline-block' ? 'none' : 'inline-block';\r\n      this.back_button = this.back_button === 'none' ? 'inline-block' : 'none';\r\n      let data = {\r\n        user_name   : my_name,\r\n        user_color  : color,\r\n        user_key    : my_key\r\n      }\r\n      //선택한 값을 서버에 전송\r\n      socket.emit(\"edit_color\", data);\r\n    },\r\n\r\n    sending_message : function(){\r\n      console.log(this.my_name);\r\n      let msg = {\r\n        speaker : this.my_name,\r\n        msg : this.message,\r\n        type : \"normal\"\r\n      }\r\n      console.log(msg);\r\n      this.message = '';\r\n      socket.emit(\"chat\", msg);\r\n    }\r\n  },\r\n  \r\n  \r\n}\r\n</script>\r\n\r\n<style scoped src=\"@/assets/css/game_lobby.css\"></style>"]},"metadata":{},"sourceType":"module"}