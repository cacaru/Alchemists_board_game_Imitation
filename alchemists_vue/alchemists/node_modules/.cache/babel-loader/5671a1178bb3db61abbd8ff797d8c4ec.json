{"ast":null,"code":"import { io } from 'socket.io-client';\nimport { default as Create_lobby } from '@/components/create_lobby.vue'; // 다른 곳에서도 쓸 수 있게 전역 선언\n\nvar socket;\nexport default {\n  name: 'room_list',\n  components: {\n    Create_lobby: Create_lobby\n  },\n\n  async created() {\n    socket = await this.connect();\n    console.log(socket);\n\n    if (socket.id == undefined || socket.id == '') {\n      // 접속 실패로 이전화면으로 돌림\n      alert(\"접속에 실패하였습니다.\\n 주소를 다시 확인해주세요\");\n      this.$router.push({\n        name: 'first_page'\n      });\n    } else {\n      this.enter_server();\n    }\n  },\n\n  mounted() {\n    socket.on(\"enter_room_success\", data => {\n      // router로 방 선택/ 생성 창으로 이동\n      console.log(data);\n      this.room_list = data;\n    });\n  },\n\n  data() {\n    return {\n      name: this.$route.params.name,\n      room_list: '',\n      listing: true\n    };\n  },\n\n  methods: {\n    // 소켓 연결 비동기 처리\n    connect: function () {\n      return new Promise(function (resolve) {\n        setTimeout(function () {\n          socket = io('http://' + this.$route.params.ip + \":3000\");\n          resolve(socket);\n        }, 3000);\n      });\n    },\n    enter_server: function () {\n      socket.emit(\"enter_room_gate\", this.$route.params.name);\n    },\n    create_room: function () {\n      this.listing = false;\n    },\n    back_page: function () {\n      this.listing = true;\n    }\n  }\n};\nexport { socket };","map":{"version":3,"names":["io","default","Create_lobby","socket","name","components","created","connect","console","log","id","undefined","alert","$router","push","enter_server","mounted","on","data","room_list","$route","params","listing","methods","Promise","resolve","setTimeout","ip","emit","create_room","back_page"],"sources":["E:/GitHub/personal_tranning/alchemists_vue/alchemists/src/assets/script/room_list.js"],"sourcesContent":["import { io } from 'socket.io-client';\r\nimport { default as Create_lobby } from '@/components/create_lobby.vue';\r\n\r\n// 다른 곳에서도 쓸 수 있게 전역 선언\r\nvar socket;\r\n\r\nexport default {\r\n    name : 'room_list',\r\n    components : {\r\n        Create_lobby : Create_lobby,\r\n    },\r\n    async created() {\r\n        socket = await this.connect();\r\n        console.log(socket);\r\n        if( socket.id == undefined || socket.id == '' ){\r\n            // 접속 실패로 이전화면으로 돌림\r\n            alert(\"접속에 실패하였습니다.\\n 주소를 다시 확인해주세요\");\r\n            this.$router.push({\r\n                name: 'first_page',\r\n            });\r\n        }\r\n        else {\r\n            this.enter_server();\r\n        }\r\n        \r\n    },\r\n    mounted() {\r\n        socket.on(\"enter_room_success\", (data)=> {\r\n            // router로 방 선택/ 생성 창으로 이동\r\n            console.log(data);\r\n            \r\n            this.room_list = data;\r\n        });\r\n    },\r\n    data () {\r\n        return {\r\n            name : this.$route.params.name,\r\n            room_list : '',\r\n            listing : true,\r\n        }\r\n    },\r\n    methods : {\r\n        // 소켓 연결 비동기 처리\r\n        connect : function(){\r\n            return new Promise( function(resolve) {\r\n                setTimeout(function() {\r\n                    socket = io('http://' + this.$route.params.ip + \":3000\");\r\n                    resolve(socket)\r\n                  }, 3000);\r\n            });\r\n        },\r\n\r\n        enter_server : function() {\r\n            socket.emit(\"enter_room_gate\", this.$route.params.name);\r\n        },\r\n\r\n        create_room : function() {\r\n            this.listing = false;\r\n        },\r\n        back_page : function() {\r\n            this.listing = true;\r\n        },\r\n    },\r\n}\r\n\r\nexport { socket };"],"mappings":"AAAA,SAASA,EAAT,QAAmB,kBAAnB;AACA,SAASC,OAAO,IAAIC,YAApB,QAAwC,+BAAxC,C,CAEA;;AACA,IAAIC,MAAJ;AAEA,eAAe;EACXC,IAAI,EAAG,WADI;EAEXC,UAAU,EAAG;IACTH,YAAY,EAAGA;EADN,CAFF;;EAKX,MAAMI,OAAN,GAAgB;IACZH,MAAM,GAAG,MAAM,KAAKI,OAAL,EAAf;IACAC,OAAO,CAACC,GAAR,CAAYN,MAAZ;;IACA,IAAIA,MAAM,CAACO,EAAP,IAAaC,SAAb,IAA0BR,MAAM,CAACO,EAAP,IAAa,EAA3C,EAA+C;MAC3C;MACAE,KAAK,CAAC,8BAAD,CAAL;MACA,KAAKC,OAAL,CAAaC,IAAb,CAAkB;QACdV,IAAI,EAAE;MADQ,CAAlB;IAGH,CAND,MAOK;MACD,KAAKW,YAAL;IACH;EAEJ,CAnBU;;EAoBXC,OAAO,GAAG;IACNb,MAAM,CAACc,EAAP,CAAU,oBAAV,EAAiCC,IAAD,IAAS;MACrC;MACAV,OAAO,CAACC,GAAR,CAAYS,IAAZ;MAEA,KAAKC,SAAL,GAAiBD,IAAjB;IACH,CALD;EAMH,CA3BU;;EA4BXA,IAAI,GAAI;IACJ,OAAO;MACHd,IAAI,EAAG,KAAKgB,MAAL,CAAYC,MAAZ,CAAmBjB,IADvB;MAEHe,SAAS,EAAG,EAFT;MAGHG,OAAO,EAAG;IAHP,CAAP;EAKH,CAlCU;;EAmCXC,OAAO,EAAG;IACN;IACAhB,OAAO,EAAG,YAAU;MAChB,OAAO,IAAIiB,OAAJ,CAAa,UAASC,OAAT,EAAkB;QAClCC,UAAU,CAAC,YAAW;UAClBvB,MAAM,GAAGH,EAAE,CAAC,YAAY,KAAKoB,MAAL,CAAYC,MAAZ,CAAmBM,EAA/B,GAAoC,OAArC,CAAX;UACAF,OAAO,CAACtB,MAAD,CAAP;QACD,CAHO,EAGL,IAHK,CAAV;MAIH,CALM,CAAP;IAMH,CATK;IAWNY,YAAY,EAAG,YAAW;MACtBZ,MAAM,CAACyB,IAAP,CAAY,iBAAZ,EAA+B,KAAKR,MAAL,CAAYC,MAAZ,CAAmBjB,IAAlD;IACH,CAbK;IAeNyB,WAAW,EAAG,YAAW;MACrB,KAAKP,OAAL,GAAe,KAAf;IACH,CAjBK;IAkBNQ,SAAS,EAAG,YAAW;MACnB,KAAKR,OAAL,GAAe,IAAf;IACH;EApBK;AAnCC,CAAf;AA2DA,SAASnB,MAAT"},"metadata":{},"sourceType":"module"}