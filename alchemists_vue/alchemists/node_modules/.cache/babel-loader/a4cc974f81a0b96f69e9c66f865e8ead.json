{"ast":null,"code":"'use strict';\n\nconst tls = require('tls');\n\nconst http = require('http');\n\nconst https = require('https');\n\nconst JSStreamSocket = require('../utils/js-stream-socket.js');\n\nconst {\n  globalAgent\n} = require('../agent.js');\n\nconst UnexpectedStatusCodeError = require('./unexpected-status-code-error.js');\n\nconst initialize = require('./initialize.js');\n\nconst getAuthorizationHeaders = require('./get-auth-headers.js');\n\nconst createConnection = (self, options, callback) => {\n  (async () => {\n    try {\n      const {\n        proxyOptions\n      } = self;\n      const {\n        url,\n        headers,\n        raw\n      } = proxyOptions;\n      const stream = await globalAgent.request(url, proxyOptions, { ...getAuthorizationHeaders(self),\n        ...headers,\n        ':method': 'CONNECT',\n        ':authority': `${options.host}:${options.port}`\n      });\n      stream.once('error', callback);\n      stream.once('response', headers => {\n        const statusCode = headers[':status'];\n\n        if (statusCode !== 200) {\n          callback(new UnexpectedStatusCodeError(statusCode));\n          return;\n        }\n\n        const encrypted = self instanceof https.Agent;\n\n        if (raw && encrypted) {\n          options.socket = stream;\n          const secureStream = tls.connect(options);\n          secureStream.once('close', () => {\n            stream.destroy();\n          });\n          callback(null, secureStream);\n          return;\n        }\n\n        const socket = new JSStreamSocket(stream);\n        socket.encrypted = false;\n\n        socket._handle.getpeername = out => {\n          out.family = undefined;\n          out.address = undefined;\n          out.port = undefined;\n        };\n\n        callback(null, socket);\n      });\n    } catch (error) {\n      callback(error);\n    }\n  })();\n};\n\nclass HttpOverHttp2 extends http.Agent {\n  constructor(options) {\n    super(options);\n    initialize(this, options.proxyOptions);\n  }\n\n  createConnection(options, callback) {\n    createConnection(this, options, callback);\n  }\n\n}\n\nclass HttpsOverHttp2 extends https.Agent {\n  constructor(options) {\n    super(options);\n    initialize(this, options.proxyOptions);\n  }\n\n  createConnection(options, callback) {\n    createConnection(this, options, callback);\n  }\n\n}\n\nmodule.exports = {\n  HttpOverHttp2,\n  HttpsOverHttp2\n};","map":{"version":3,"names":["tls","require","http","https","JSStreamSocket","globalAgent","UnexpectedStatusCodeError","initialize","getAuthorizationHeaders","createConnection","self","options","callback","proxyOptions","url","headers","raw","stream","request","host","port","once","statusCode","encrypted","Agent","socket","secureStream","connect","destroy","_handle","getpeername","out","family","undefined","address","error","HttpOverHttp2","constructor","HttpsOverHttp2","module","exports"],"sources":["E:/web/alchemists_vue/alchemists/node_modules/http2-wrapper/source/proxies/h1-over-h2.js"],"sourcesContent":["'use strict';\nconst tls = require('tls');\nconst http = require('http');\nconst https = require('https');\nconst JSStreamSocket = require('../utils/js-stream-socket.js');\nconst {globalAgent} = require('../agent.js');\nconst UnexpectedStatusCodeError = require('./unexpected-status-code-error.js');\nconst initialize = require('./initialize.js');\nconst getAuthorizationHeaders = require('./get-auth-headers.js');\n\nconst createConnection = (self, options, callback) => {\n\t(async () => {\n\t\ttry {\n\t\t\tconst {proxyOptions} = self;\n\t\t\tconst {url, headers, raw} = proxyOptions;\n\n\t\t\tconst stream = await globalAgent.request(url, proxyOptions, {\n\t\t\t\t...getAuthorizationHeaders(self),\n\t\t\t\t...headers,\n\t\t\t\t':method': 'CONNECT',\n\t\t\t\t':authority': `${options.host}:${options.port}`\n\t\t\t});\n\n\t\t\tstream.once('error', callback);\n\t\t\tstream.once('response', headers => {\n\t\t\t\tconst statusCode = headers[':status'];\n\n\t\t\t\tif (statusCode !== 200) {\n\t\t\t\t\tcallback(new UnexpectedStatusCodeError(statusCode));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst encrypted = self instanceof https.Agent;\n\n\t\t\t\tif (raw && encrypted) {\n\t\t\t\t\toptions.socket = stream;\n\t\t\t\t\tconst secureStream = tls.connect(options);\n\n\t\t\t\t\tsecureStream.once('close', () => {\n\t\t\t\t\t\tstream.destroy();\n\t\t\t\t\t});\n\n\t\t\t\t\tcallback(null, secureStream);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst socket = new JSStreamSocket(stream);\n\t\t\t\tsocket.encrypted = false;\n\t\t\t\tsocket._handle.getpeername = out => {\n\t\t\t\t\tout.family = undefined;\n\t\t\t\t\tout.address = undefined;\n\t\t\t\t\tout.port = undefined;\n\t\t\t\t};\n\n\t\t\t\tcallback(null, socket);\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tcallback(error);\n\t\t}\n\t})();\n};\n\nclass HttpOverHttp2 extends http.Agent {\n\tconstructor(options) {\n\t\tsuper(options);\n\n\t\tinitialize(this, options.proxyOptions);\n\t}\n\n\tcreateConnection(options, callback) {\n\t\tcreateConnection(this, options, callback);\n\t}\n}\n\nclass HttpsOverHttp2 extends https.Agent {\n\tconstructor(options) {\n\t\tsuper(options);\n\n\t\tinitialize(this, options.proxyOptions);\n\t}\n\n\tcreateConnection(options, callback) {\n\t\tcreateConnection(this, options, callback);\n\t}\n}\n\nmodule.exports = {\n\tHttpOverHttp2,\n\tHttpsOverHttp2\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}