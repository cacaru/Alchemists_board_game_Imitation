{"ast":null,"code":"import { RequestError } from '../core/errors.js';\n/**\nAn error to be thrown when the request is aborted with `.cancel()`.\n*/\n\nexport class CancelError extends RequestError {\n  constructor(request) {\n    super('Promise was canceled', {}, request);\n    this.name = 'CancelError';\n    this.code = 'ERR_CANCELED';\n  }\n  /**\n  Whether the promise is canceled.\n  */\n\n\n  get isCanceled() {\n    return true;\n  }\n\n}","map":{"version":3,"names":["RequestError","CancelError","constructor","request","name","code","isCanceled"],"sources":["E:/web/alchemists_vue/alchemists/node_modules/got/dist/source/as-promise/types.js"],"sourcesContent":["import { RequestError } from '../core/errors.js';\n/**\nAn error to be thrown when the request is aborted with `.cancel()`.\n*/\nexport class CancelError extends RequestError {\n    constructor(request) {\n        super('Promise was canceled', {}, request);\n        this.name = 'CancelError';\n        this.code = 'ERR_CANCELED';\n    }\n    /**\n    Whether the promise is canceled.\n    */\n    get isCanceled() {\n        return true;\n    }\n}\n"],"mappings":"AAAA,SAASA,YAAT,QAA6B,mBAA7B;AACA;AACA;AACA;;AACA,OAAO,MAAMC,WAAN,SAA0BD,YAA1B,CAAuC;EAC1CE,WAAW,CAACC,OAAD,EAAU;IACjB,MAAM,sBAAN,EAA8B,EAA9B,EAAkCA,OAAlC;IACA,KAAKC,IAAL,GAAY,aAAZ;IACA,KAAKC,IAAL,GAAY,cAAZ;EACH;EACD;AACJ;AACA;;;EACkB,IAAVC,UAAU,GAAG;IACb,OAAO,IAAP;EACH;;AAXyC"},"metadata":{},"sourceType":"module"}