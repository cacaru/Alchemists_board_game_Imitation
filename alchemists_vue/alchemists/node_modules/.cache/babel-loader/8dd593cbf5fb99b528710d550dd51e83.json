{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, normalizeStyle as _normalizeStyle, createBlock as _createBlock, vModelText as _vModelText, withDirectives as _withDirectives, withKeys as _withKeys, createTextVNode as _createTextVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-6294ced9\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  id: \"room_title\"\n};\nconst _hoisted_2 = {\n  class: \"entrans\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"inline name\"\n};\n\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"inline name\"\n}, \"이름\", -1\n/* HOISTED */\n));\n\nconst _hoisted_5 = {\n  class: \"inline user_name\"\n};\nconst _hoisted_6 = {\n  class: \"choose_color_section\"\n};\nconst _hoisted_7 = {\n  class: \"user_color_announce\"\n};\nconst _hoisted_8 = {\n  class: \"button_area\"\n};\nconst _hoisted_9 = [\"onClick\"];\nconst _hoisted_10 = [\"onClick\"];\nconst _hoisted_11 = [\"onClick\"];\nconst _hoisted_12 = [\"onClick\"];\n\nconst _hoisted_13 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", null, null, -1\n/* HOISTED */\n));\n\nconst _hoisted_14 = /*#__PURE__*/_createTextVNode(\" 보내기 \");\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_b_col = _resolveComponent(\"b-col\");\n\n  const _component_b_row = _resolveComponent(\"b-row\");\n\n  const _component_b_container = _resolveComponent(\"b-container\");\n\n  const _component_b_button = _resolveComponent(\"b-button\");\n\n  return _openBlock(), _createBlock(_component_b_container, {\n    id: \"game_lobby\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_b_row, null, {\n      default: _withCtx(() => [_createVNode(_component_b_col, null, {\n        default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_1, _toDisplayString(this.$route.params.room_name), 1\n        /* TEXT */\n        )]),\n        _: 1\n        /* STABLE */\n\n      })]),\n      _: 1\n      /* STABLE */\n\n    }), _createVNode(_component_b_row, null, {\n      default: _withCtx(() => [_createVNode(_component_b_col, null, {\n        default: _withCtx(() => [_createVNode(_component_b_container, {\n          id: \"room_back\"\n        }, {\n          default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(Math.ceil($data.users.length / 2), i => {\n            return _openBlock(), _createBlock(_component_b_row, {\n              \"align-v\": \"stretch\",\n              key: i\n            }, {\n              default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.users.slice((i - 1) * 2, i * 2), entrans => {\n                return _openBlock(), _createBlock(_component_b_col, {\n                  sm: \"6\",\n                  key: entrans\n                }, {\n                  default: _withCtx(() => [_createElementVNode(\"div\", null, [_createElementVNode(\"div\", _hoisted_2, [entrans.is_master === 'true' ? (_openBlock(), _createElementBlock(\"p\", _hoisted_3, \"방장\")) : _createCommentVNode(\"v-if\", true), _hoisted_4, _createElementVNode(\"p\", _hoisted_5, _toDisplayString(entrans.user_name), 1\n                  /* TEXT */\n                  ), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"p\", _hoisted_7, _toDisplayString($data.toggle_color_message), 1\n                  /* TEXT */\n                  ), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"button\", {\n                    class: \"red color\",\n                    onClick: $event => $options.choose_color('red', entrans.user_name, entrans.user_key),\n                    style: _normalizeStyle({\n                      display: $data.color_button\n                    })\n                  }, null, 12\n                  /* STYLE, PROPS */\n                  , _hoisted_9), _createElementVNode(\"button\", {\n                    class: \"blue color\",\n                    onClick: $event => $options.choose_color('blue', entrans.user_name, entrans.user_key),\n                    style: _normalizeStyle({\n                      display: $data.color_button\n                    })\n                  }, null, 12\n                  /* STYLE, PROPS */\n                  , _hoisted_10), _createElementVNode(\"button\", {\n                    class: \"black color\",\n                    onClick: $event => $options.choose_color('black', entrans.user_name, entrans.user_key),\n                    style: _normalizeStyle({\n                      display: $data.color_button\n                    })\n                  }, null, 12\n                  /* STYLE, PROPS */\n                  , _hoisted_11), _createElementVNode(\"button\", {\n                    class: \"white color\",\n                    onClick: $event => $options.choose_color('white', entrans.user_name, entrans.user_key),\n                    style: _normalizeStyle({\n                      display: $data.color_button\n                    })\n                  }, null, 12\n                  /* STYLE, PROPS */\n                  , _hoisted_12), _createElementVNode(\"button\", {\n                    class: \"back_to_choose_color\",\n                    onClick: _cache[0] || (_cache[0] = (...args) => $options.back_choose_color && $options.back_choose_color(...args)),\n                    style: _normalizeStyle({\n                      display: $data.back_button,\n                      background: entrans.user_color\n                    })\n                  }, null, 4\n                  /* STYLE */\n                  ), _createElementVNode(\"p\", {\n                    class: \"announce\",\n                    style: _normalizeStyle({\n                      display: $data.back_button\n                    })\n                  }, \" 한 번 더 누르면 고른 색이 취소됩니다. \", 4\n                  /* STYLE */\n                  )])])])])]),\n                  _: 2\n                  /* DYNAMIC */\n\n                }, 1024\n                /* DYNAMIC_SLOTS */\n                );\n              }), 128\n              /* KEYED_FRAGMENT */\n              ))]),\n              _: 2\n              /* DYNAMIC */\n\n            }, 1024\n            /* DYNAMIC_SLOTS */\n            );\n          }), 128\n          /* KEYED_FRAGMENT */\n          ))]),\n          _: 1\n          /* STABLE */\n\n        })]),\n        _: 1\n        /* STABLE */\n\n      })]),\n      _: 1\n      /* STABLE */\n\n    }), _createVNode(_component_b_row, {\n      \"align-h\": \"around\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_b_col, null, {\n        default: _withCtx(() => [_withDirectives(_createElementVNode(\"textarea\", {\n          id: \"chat_area\",\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.textarea = $event),\n          disabled: \"\"\n        }, null, 512\n        /* NEED_PATCH */\n        ), [[_vModelText, $data.textarea]]), _hoisted_13, _withDirectives(_createElementVNode(\"input\", {\n          id: \"message_area\",\n          \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.message = $event),\n          onKeyup: _cache[3] || (_cache[3] = _withKeys((...args) => $options.sending_message && $options.sending_message(...args), [\"enter\"]))\n        }, null, 544\n        /* HYDRATE_EVENTS, NEED_PATCH */\n        ), [[_vModelText, $data.message]]), _createVNode(_component_b_button, {\n          pill: \"\",\n          id: \"sending\",\n          onClick: $options.sending_message\n        }, {\n          default: _withCtx(() => [_hoisted_14]),\n          _: 1\n          /* STABLE */\n\n        }, 8\n        /* PROPS */\n        , [\"onClick\"])]),\n        _: 1\n        /* STABLE */\n\n      }), _createVNode(_component_b_col, null, {\n        default: _withCtx(() => [_createVNode(_component_b_button, {\n          pill: \"\",\n          id: \"game_start\",\n          onClick: _ctx.game_start\n        }, {\n          default: _withCtx(() => [_createTextVNode(_toDisplayString(this.toggle_game_start), 1\n          /* TEXT */\n          )]),\n          _: 1\n          /* STABLE */\n\n        }, 8\n        /* PROPS */\n        , [\"onClick\"])]),\n        _: 1\n        /* STABLE */\n\n      })]),\n      _: 1\n      /* STABLE */\n\n    })]),\n    _: 1\n    /* STABLE */\n\n  });\n}","map":{"version":3,"mappings":"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","names":["id","class","_createElementVNode","_createBlock","_component_b_container","_createVNode","_component_b_row","_component_b_col","_toDisplayString","$route","params","room_name","_createElementBlock","_Fragment","_renderList","Math","ceil","$data","length","i","key","slice","entrans","sm","is_master","_hoisted_4","user_name","onClick","$options","user_key","style","display","background","user_color","$event","disabled","_hoisted_13","onKeyup","_component_b_button","pill","_ctx","toggle_game_start"],"sourceRoot":"","sources":["E:\\web\\alchemists_vue\\alchemists\\src\\components\\game_lobby.vue"],"sourcesContent":["<template>\r\n    <b-container id=\"game_lobby\">\r\n      <b-row>\r\n        <b-col>\r\n          <div id=\"room_title\">\r\n              {{ this.$route.params.room_name }}\r\n          </div>\r\n        </b-col>\r\n      </b-row>\r\n      <b-row>\r\n        <b-col>\r\n          <b-container id=\"room_back\">\r\n            <b-row align-v=\"stretch\" v-for=\"i in Math.ceil(users.length / 2 )\" :key=\"i\">\r\n              <b-col sm=\"6\" v-for=\"entrans in users.slice((i - 1) * 2, i * 2)\" :key=\"entrans\">\r\n                <div>\r\n                  <div class=\"entrans\">\r\n                      <p class=\"inline name\" v-if=\"entrans.is_master === 'true'\">방장</p>\r\n                      <p class=\"inline name\">이름</p>\r\n                      <p class=\"inline user_name\"> {{ entrans.user_name }} </p>\r\n                      \r\n                      <div class=\"choose_color_section\">\r\n                        <p class=\"user_color_announce\"> {{ toggle_color_message }} </p>\r\n                        <div class=\"button_area\">\r\n                          <button class=\"red color\"   v-on:click=\"choose_color('red', entrans.user_name, entrans.user_key)\" v-bind:style=\"{display : color_button }\"></button>\r\n                          <button class=\"blue color\"  v-on:click=\"choose_color('blue', entrans.user_name, entrans.user_key)\" v-bind:style=\"{display : color_button }\"></button>\r\n                          <button class=\"black color\" v-on:click=\"choose_color('black', entrans.user_name, entrans.user_key)\" v-bind:style=\"{display : color_button }\"></button>\r\n                          <button class=\"white color\" v-on:click=\"choose_color('white', entrans.user_name, entrans.user_key)\" v-bind:style=\"{display : color_button }\"></button>\r\n                          <button class=\"back_to_choose_color\" v-on:click=\"back_choose_color\" v-bind:style=\"{display : back_button , background: entrans.user_color }\"></button>\r\n                          <p class=\"announce\" v-bind:style=\"{display : back_button }\"> 한 번 더 누르면 고른 색이 취소됩니다. </p>\r\n                        </div>\r\n                      </div>\r\n                  </div>\r\n                </div>\r\n              </b-col>\r\n            </b-row>\r\n          </b-container>\r\n        </b-col>\r\n      </b-row>\r\n\r\n      <b-row align-h=\"around\">\r\n        <b-col>\r\n          <textarea id=\"chat_area\" v-model=\"textarea\" disabled></textarea>\r\n          <div></div>\r\n          <input id=\"message_area\" v-model=\"message\" v-on:keyup.enter=\"sending_message\"/>\r\n          <b-button pill id=\"sending\" v-on:click=\"sending_message\"> 보내기 </b-button>\r\n        </b-col>\r\n        <b-col>\r\n          <b-button pill id=\"game_start\" v-on:click=\"game_start\"> {{ this.toggle_game_start }} </b-button>\r\n        </b-col>\r\n      </b-row>\r\n    </b-container>\r\n</template>\r\n\r\n<script>\r\nimport io from 'socket.io-client';\r\n\r\n// 다른 곳에서도 쓸 수 있게 전역 선언\r\nvar socket;\r\n\r\nexport default {\r\n  name : 'game_lobby',\r\n  created() {\r\n    //this.$route.params.room_address:this.$route.params.port\r\n    socket = io(`http://192.168.0.102:3000`);\r\n    // console.log(params);\r\n    // console.log(params.nick_name);\r\n    console.log(\"server in\");\r\n    console.log(this.$route.params);\r\n    let msg;\r\n    //마스터 인 입장만 count를 가지고 있으므로\r\n    if ( this.$route.params.is_master === 'true' ) {\r\n      msg = {\r\n        user_name : this.$route.params.nick_name,\r\n        room_pw   : this.$route.params.room_pw,\r\n        count     : this.$route.params.count,\r\n        is_master : this.$route.params.is_master,\r\n        msg       : this.$route.params.nick_name + \" 가 방에 참가하였습니다.\"\r\n      };\r\n      console.log(\"master\");\r\n    } else {\r\n      msg = {\r\n        user_name : this.$route.params.nick_name,\r\n        room_pw   : this.$route.params.room_pw,\r\n        is_master : this.$route.params.is_master,\r\n        msg       : this.$route.params.nick_name + \" 가 방에 참가하였습니다.\"\r\n      }\r\n      console.log(\"entras\");\r\n    }\r\n   \r\n    // 입장했음을 알림\r\n    socket.emit(\"enter\", msg);\r\n\r\n    //다른 채팅이 있는지 확인\r\n    socket.on(\"chat\", (data) => {\r\n      switch ( data.type ) {\r\n        case \"announce\" :\r\n          this.textarea += data.speaker + \" 이(가) \" + data.msg + \"\\n\";\r\n          break;\r\n        case \"normal\" :\r\n          this.textarea += data.speaker + \" : \" + data.msg + \"\\n\";\r\n          break;\r\n      }\r\n      console.log(\"chat :: \");\r\n      console.log(data);\r\n    });\r\n\r\n    // 다른 플레이어가 입장시 / 색깔 선택 시 정보를 받음\r\n    socket.on(\"all_player\", (data) => {\r\n      console.log(data);\r\n      this.users = data;\r\n      for( var i = 0; i < this.users.length ; i++ ) {\r\n        if( this.users[i].user_color != '' ){\r\n          this.color_button = 'none';\r\n          this.back_button = 'inline-block';\r\n          this.toggle_color_message = '고른색';\r\n        }\r\n      }\r\n    });\r\n\r\n    //입장시 방이 가득 찼는지 확인\r\n    socket.on(\"pull_room\", (res) => {\r\n        console.log(res + \"방이 가득 찼습니다.\");\r\n        alert(\"방이 가득 찼습니다. 뒤로 돌아갑니다\");\r\n        // master 면 create 로\r\n        if( this.$route.params.is_master === 'true' ){\r\n          this.$router.push({\r\n            name: 'create_lobby',\r\n            params : {\r\n                count : this.$route.params.count\r\n            }\r\n          });\r\n        }\r\n        // entrans 면 enter 로\r\n        else {\r\n          this.$router.push({\r\n            name: 'enter_lobby',\r\n          });\r\n        }\r\n        \r\n        \r\n    });\r\n\r\n    // 마스터가 아닌데 방이 없는 곳에 들어갈 경우\r\n    socket.on(\"no_room\", () => {\r\n      alert(\"방이 아직 생성되지 않았거나 잘못된 주소입니다. 주소를 확인해주세요\");\r\n      alert(\"뒤로 돌아갑니다.\");\r\n      this.$router.push({\r\n          name: 'enter_lobby'\r\n      });\r\n    })\r\n\r\n    // 비밀번호가 잘못 된 경우\r\n    socket.on(\"wrong_pw\", () => {\r\n      alert(\"비밀번호가 잘못되었습니다. 비밀번호를 확인해주세요\");\r\n      this.$router.push({\r\n        name: 'enter_lobby'\r\n      });\r\n    });\r\n\r\n  },\r\n  data() {\r\n    return  {\r\n      users : '',\r\n      textarea : '',\r\n      message : '',\r\n      my_name : this.$route.params.nick_name,\r\n      color_button : 'inline-block',\r\n      back_button : 'none',\r\n      toggle_color_message : \"색을 골라주세요\",\r\n    }\r\n  },\r\n  methods : {\r\n    // 고른 색을 서버에 알림\r\n    choose_color : function(color, my_name, my_key) {\r\n      this.toggle_color_message = this.toggle_color_message === '색을 골라주세요' ? '고른색' : '색을 골라주세요';\r\n      this.color_button = this.color_button === 'inline-block' ? 'none' : 'inline-block';\r\n      this.back_button = this.back_button === 'none' ? 'inline-block' : 'none';\r\n      let data = {\r\n        user_name   : my_name,\r\n        user_color  : color,\r\n        user_key    : my_key\r\n      }\r\n      //선택한 값을 서버에 전송\r\n      socket.emit(\"edit_color\", data);\r\n    },\r\n\r\n    sending_message : function(){\r\n      if( this.message !== '' ){\r\n        let msg = {\r\n          speaker : this.my_name,\r\n          msg : this.message,\r\n          type : \"normal\"\r\n        }\r\n        console.log(msg);\r\n        this.message = '';\r\n        socket.emit(\"chat\", msg);\r\n      }\r\n    },\r\n\r\n    back_choose_color : function() {\r\n      this.toggle_color_message = this.toggle_color_message === '색을 골라주세요' ? '고른색' : '색을 골라주세요';\r\n      this.color_button = this.color_button === 'inline-block' ? 'none' : 'inline-block';\r\n      this.back_button = this.back_button === 'none' ? 'inline-block' : 'none';\r\n    }\r\n  },\r\n  \r\n  \r\n}\r\n</script>\r\n\r\n<style scoped src=\"@/assets/css/game_lobby.css\"></style>"]},"metadata":{},"sourceType":"module"}