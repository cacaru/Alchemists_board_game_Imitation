{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeStyle as _normalizeStyle, vModelText as _vModelText, withDirectives as _withDirectives, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-6294ced9\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  id: \"game_lobby\"\n};\nconst _hoisted_2 = {\n  id: \"room_title\"\n};\nconst _hoisted_3 = {\n  id: \"room_back\"\n};\n\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"inline name\"\n}, \"이름\", -1\n/* HOISTED */\n));\n\nconst _hoisted_5 = {\n  class: \"inline user_name\"\n};\nconst _hoisted_6 = {\n  class: \"choose_color_section\"\n};\n\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"user_color_announce\"\n}, \" 색을 골라주세요 \", -1\n/* HOISTED */\n));\n\nconst _hoisted_8 = {\n  class: \"button_area\"\n};\nconst _hoisted_9 = [\"onClick\"];\nconst _hoisted_10 = [\"onClick\"];\nconst _hoisted_11 = [\"onClick\"];\nconst _hoisted_12 = [\"onClick\"];\n\nconst _hoisted_13 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", null, null, -1\n/* HOISTED */\n));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, _toDisplayString(this.$route.params.room_name), 1\n  /* TEXT */\n  ), _createElementVNode(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.users, entrans => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"entrans\",\n      key: entrans\n    }, [_hoisted_4, _createElementVNode(\"p\", _hoisted_5, _toDisplayString(entrans.user_name), 1\n    /* TEXT */\n    ), _createElementVNode(\"div\", _hoisted_6, [_hoisted_7, _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"button\", {\n      class: \"red color\",\n      onClick: $event => $options.choose_color('red', entrans.user_name, entrans.user_key),\n      style: _normalizeStyle({\n        display: $data.color_button\n      })\n    }, null, 12\n    /* STYLE, PROPS */\n    , _hoisted_9), _createElementVNode(\"button\", {\n      class: \"blue color\",\n      onClick: $event => $options.choose_color('blue', entrans.user_name, entrans.user_key),\n      style: _normalizeStyle({\n        display: $data.color_button\n      })\n    }, null, 12\n    /* STYLE, PROPS */\n    , _hoisted_10), _createElementVNode(\"button\", {\n      class: \"black color\",\n      onClick: $event => $options.choose_color('black', entrans.user_name, entrans.user_key),\n      style: _normalizeStyle({\n        display: $data.color_button\n      })\n    }, null, 12\n    /* STYLE, PROPS */\n    , _hoisted_11), _createElementVNode(\"button\", {\n      class: \"white color\",\n      onClick: $event => $options.choose_color('white', entrans.user_name, entrans.user_key),\n      style: _normalizeStyle({\n        display: $data.color_button\n      })\n    }, null, 12\n    /* STYLE, PROPS */\n    , _hoisted_12), _createElementVNode(\"button\", {\n      class: \"back_to_choose_color\",\n      onClick: _cache[0] || (_cache[0] = (...args) => _ctx.back_choose_color && _ctx.back_choose_color(...args)),\n      style: _normalizeStyle({\n        display: $data.back_button,\n        backgroundColor: entrans.user_color\n      })\n    }, null, 4\n    /* STYLE */\n    )])])]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))]), _withDirectives(_createElementVNode(\"textarea\", {\n    id: \"chat_area\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.textarea = $event),\n    disabled: \"\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.textarea]]), _hoisted_13, _withDirectives(_createElementVNode(\"input\", {\n    id: \"message_area\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.message = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.message]]), _createElementVNode(\"button\", {\n    id: \"sending\",\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.sending_message && $options.sending_message(...args))\n  }, \" 보내기 \")]);\n}","map":{"version":3,"mappings":"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","names":["id","_createElementVNode","class","_createElementBlock","_toDisplayString","$route","params","room_name","_Fragment","_renderList","$data","entrans","key","_hoisted_4","user_name","_hoisted_7","onClick","$options","user_key","style","display","_ctx","backgroundColor","user_color","$event","disabled","_hoisted_13"],"sourceRoot":"","sources":["E:\\web\\alchemists_vue\\alchemists\\src\\components\\game_lobby.vue"],"sourcesContent":["<template>\r\n    <div id=\"game_lobby\">\r\n        <div id=\"room_title\">\r\n            {{ this.$route.params.room_name }}\r\n        </div>\r\n        <div id=\"room_back\">\r\n          <div class=\"entrans\" v-for=\"entrans in users\" :key=\"entrans\">\r\n              <p class=\"inline name\">이름</p>\r\n              <p class=\"inline user_name\"> {{ entrans.user_name }} </p>\r\n              \r\n              <div class=\"choose_color_section\">\r\n                <p class=\"user_color_announce\"> 색을 골라주세요 </p>\r\n                <div class=\"button_area\">\r\n                  <button class=\"red color\"   v-on:click=\"choose_color('red', entrans.user_name, entrans.user_key)\" v-bind:style=\"{display : color_button }\"></button>\r\n                  <button class=\"blue color\"  v-on:click=\"choose_color('blue', entrans.user_name, entrans.user_key)\" v-bind:style=\"{display : color_button }\"></button>\r\n                  <button class=\"black color\" v-on:click=\"choose_color('black', entrans.user_name, entrans.user_key)\" v-bind:style=\"{display : color_button }\"></button>\r\n                  <button class=\"white color\" v-on:click=\"choose_color('white', entrans.user_name, entrans.user_key)\" v-bind:style=\"{display : color_button }\"></button>\r\n                  <button class=\"back_to_choose_color\" v-on:click=\"back_choose_color\" v-bind:style=\"{display : back_button , backgroundColor: entrans.user_color }\"></button>\r\n                </div>\r\n              </div>\r\n          </div>\r\n        </div>\r\n        <textarea id=\"chat_area\" v-model=\"textarea\" disabled></textarea>\r\n        <div></div>\r\n        <input id=\"message_area\" v-model=\"message\" />\r\n        <button id=\"sending\" v-on:click=\"sending_message\"> 보내기 </button>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport io from 'socket.io-client';\r\n\r\n// 다른 곳에서도 쓸 수 있게 전역 선언\r\nvar socket;\r\n\r\nexport default {\r\n  name : 'game_lobby',\r\n  created() {\r\n    //this.$route.params.room_address:this.$route.params.port\r\n    socket = io(`http://192.168.0.102:3000`)\r\n    // console.log(params);\r\n    // console.log(params.nick_name);\r\n    console.log(\"server in\");\r\n\r\n    let msg = {\r\n        user_name : this.$route.params.nick_name,\r\n        room_pw   : this.$route.params.room_pw,\r\n        count     : this.$route.params.count,\r\n        msg       : this.$route.params.nick_name + \" 가 방에 참가하였습니다.\"\r\n    };\r\n    // 입장했음을 알림\r\n    socket.emit(\"enter\", msg);\r\n\r\n    //다른 채팅이 있는지 확인\r\n    socket.on(\"chat\", (data) => {\r\n      switch ( data.type ) {\r\n        case \"announce\" :\r\n          this.textarea += data.speaker + \" 이(가) \" + data.msg + \"\\n\";\r\n          break;\r\n        case \"normal\" :\r\n          this.textarea += data.speaker + \" : \" + data.msg + \"\\n\";\r\n          break;\r\n      }\r\n      console.log(\"chat :: \");\r\n      console.log(data);\r\n    });\r\n\r\n    // 다른 플레이어가 입장시 / 색깔 선택 시 정보를 받음\r\n    socket.on(\"all_player\", (data) => {\r\n      console.log(\"all player work\");\r\n      console.log(data);\r\n      this.users = data;\r\n    });\r\n\r\n    //입장시 방이 가득 찼는지 확인\r\n    socket.on(\"pull_room\", (res) => {\r\n        console.log(res + \"방이 가득 찼습니다.\");\r\n        this.$router.push({\r\n          name: 'create_lobby',\r\n          params : {\r\n              count : this.$route.params.count\r\n          }\r\n          });\r\n        alert(\"방이 가득 찼습니다. 뒤로 돌아갑니다\");\r\n    });\r\n\r\n  },\r\n  data() {\r\n    return  {\r\n      users : '',\r\n      textarea : '',\r\n      message : '',\r\n      my_name : this.$route.params.nick_name,\r\n      color_button : 'inline-block',\r\n      back_button : 'none'\r\n\r\n    }\r\n  },\r\n  methods : {\r\n    choose_color : function(color, my_name, my_key) {\r\n\r\n      this.color_button = this.color_button === 'inline-block' ? 'none' : 'inline-block';\r\n      this.back_button = this.back_button === 'none' ? 'inline_block' : 'none';\r\n      let data = {\r\n        user_name   : my_name,\r\n        user_color  : color,\r\n        user_key    : my_key\r\n      }\r\n      //선택한 값을 서버에 전송\r\n      socket.emit(\"edit_color\", data);\r\n    },\r\n\r\n    sending_message : function(){\r\n      console.log(this.my_name);\r\n      let msg = {\r\n        speaker : this.my_name,\r\n        msg : this.message,\r\n        type : \"normal\"\r\n      }\r\n      console.log(msg);\r\n      this.message = '';\r\n      socket.emit(\"chat\", msg);\r\n    }\r\n  },\r\n  \r\n  \r\n}\r\n</script>\r\n\r\n<style scoped src=\"@/assets/css/game_lobby.css\"></style>"]},"metadata":{},"sourceType":"module"}