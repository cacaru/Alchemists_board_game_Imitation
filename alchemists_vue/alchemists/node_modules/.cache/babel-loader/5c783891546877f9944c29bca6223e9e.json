{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport { socket } from '@/components/room_list.vue';\nimport { default as modal_area } from '@/components/modal_area.vue';\nimport { default as personal_game_data } from '@/components/personal_game_data.vue';\nimport { default as adventurer_selling } from '@/components/adventurer_selling.vue';\nimport { default as favor_card_use } from '@/components/favor_card_use.vue';\nexport default {\n  name: 'game_board',\n  components: {\n    Modal_component: modal_area,\n    Personal_game_data: personal_game_data,\n    Adventurer_selling: adventurer_selling,\n    Favor_card_use: favor_card_use\n  },\n\n  created() {\n    // 게임 초기화 & 시작 트리거\n    socket.emit(\"created_data_announce\", this.$route.params.room_name);\n    this.my_key = socket.id;\n  },\n\n  mounted() {\n    //최초 분배된 기본 재료 수령\n    socket.on(\"get_ingame_data\", data => {\n      this.user_data = data;\n\n      for (let i = 0; i < data.length; i++) {\n        if (data[i].is_master === 'true') {\n          this.room_owner = data[i].user_name;\n        }\n\n        if (data[i].user_key == this.my_key) {\n          this.my_data = data[i];\n          this.my_name = data[i].user_name;\n          this.my_color = data[i].user_color;\n        }\n      } // adventurer_selling_modal에 정보 전송\n\n\n      this.$refs.adventurer_selling_modal.set_my_data(this.my_data);\n      this.$refs.adventurer_selling_modal.set_my_key(this.my_key);\n      setTimeout(() => {\n        let msg = {\n          speaker: this.my_name,\n          msg: \"방에 입장하였습니다.\",\n          type: 'announce',\n          room_name: this.room_name\n        };\n        socket.emit(\"chat\", msg);\n      }, 500);\n    }); //채팅 on\n\n    socket.on(\"chat\", data => {\n      // console.log(\"서버에서 받아온 데이터\");\n      // console.log(data);\n      // console.log(\"받아오기 끝\");\n      switch (data.type) {\n        case \"announce\":\n          this.textarea += data.speaker + \" 이(가) \" + data.msg + \"\\n\";\n          break;\n\n        case \"normal\":\n          this.textarea += data.speaker + \" : \" + data.msg + \"\\n\";\n          break;\n      } // 스크롤을 자동으로 내림\n\n\n      this.$refs.show_chat.scrollTop = this.$refs.show_chat.scrollHeight;\n    }); // 선택할 수 있는 카드 공개\n\n    socket.on(\"ingredient_select_card_open\", data => {\n      //console.log(data);\n      this.ingredient_card_selected = data;\n    }); // 호의 카드 사용 함수\n\n    socket.on(\"show_favor_modal\", data => {\n      // 받는 정보\n      // data :: \n      // card_kind : 어떤 호의카드를 사용했는지\n      // temp_used_favor_card_list : 누가 해당 호의카드를 사용했는지\n      console.log(\"show_favor_modal\");\n      console.log(data);\n      this.card_kind = data.card_kind;\n      this.temp_used_favor_card_list = data.temp_used_favor_card_list; // 내가 호의카드 썻는지 확인하기\n\n      let im_used = false; // 호의카드 번호\n\n      let card_num = 0;\n\n      switch (this.card_kind) {\n        case 'assistent':\n          card_num = 1;\n          break;\n\n        case 'bar_owner':\n          card_num = 2;\n          break;\n\n        case 'big_man':\n          card_num = 3;\n          break;\n\n        case 'caretaker':\n          card_num = 4;\n          break;\n\n        case 'herbalist':\n          card_num = 5;\n          break;\n\n        case 'merchant':\n          card_num = 6;\n          break;\n\n        case 'shopkeeper':\n          card_num = 7;\n          break;\n\n        case 'wise_man':\n          card_num = 8;\n          break;\n      }\n\n      for (let i = 0; i < 4; i++) {\n        if (this.my_key == data.temp_used_favor_card_list[card_num][i].user_key) {\n          im_used = true;\n          break;\n        }\n      }\n\n      if (im_used == true) {\n        // 모달 on\n        this.$refs.favor_card_use_check_modal.favor_modal_open(this.card_kind);\n      }\n    }); // 호의 카드 사용 성공 알림\n\n    socket.on(\"use_favor_card_alert\", () => {\n      this.favor_card_use_key_val += 1; // 모달 off\n\n      this.$refs.favor_card_use_check_modal.favor_modal_close();\n    }); // 이번 게임에서 사용할 용병 리스트\n\n    socket.on(\"adv_list_setting\", data => {\n      this.random_adv_list = data; //console.log(this.random_adv_list);\n    }); // 용병에게 판매 가능한 물약 리스트\n\n    socket.on(\"adv_sell_potion_list\", data => {\n      this.$refs.adventurer_selling_modal.adventurer_card_data_change(data); // console.log(this.data);\n    });\n    socket.on(\"adv_sell_potion_ori_list\", data => {\n      this.adventurer_card_ori_data = data;\n      console.log(data);\n    }); // 용병에게 할인카드 제시가 끝났음을 받는 함수\n\n    socket.on(\"end_adv_dis_step\", data => {\n      this.discount_coin_list = data;\n      this.is_end_discount = true; // console.log(this.discount_coin_list);\n    }); // 용병에게 판매할 물약의 값을 결정되었음을 받는 함수\n\n    socket.on(\"selling_start\", data => {\n      // 물약 생성 모달 on \n      this.$refs.adventurer_selling_modal.make_potion_modal_open(data);\n    }); // 용병에게 물약 판매가 끝났음을 알리는 함수\n\n    socket.on(\"selling_potion_end\", data => {\n      // 물약 판매 모달 닫기\n      //console.log(\"selling_potion_end\");\n      //console.log(data);\n      this.$refs.adventurer_selling_modal.make_potion_modal_close();\n      this.adventurer_selling_key_val += 1;\n      this.selling_end_modal = true;\n\n      if (data.user_key == this.my_key) {\n        this.sell_potion_turn = false;\n      }\n\n      this.selling_user_color = data.user_color;\n      this.selling_success = data.selling_success;\n      this.selling_potion_kind = data.potion; // 3초 지연 후 자동 모달 끄기\n\n      setTimeout(() => {\n        this.selling_end_modal = false; // 정보 초기화\n\n        this.selling_success = false;\n        this.selling_potion_kind = '';\n      }, 3000);\n    }); // 용병에게 물약판매 순서를 받는 함수\n\n    socket.on(\"change_selling_turn\", data => {\n      this.selling_turn = data;\n    }); // 변경된 게임 데이터를 받는 함수\n\n    socket.on(\"change_user_data\", data => {\n      this.user_data = data;\n      this.my_data = '';\n\n      for (let i = 0; i < data.length; i++) {\n        if (data[i].user_key == this.my_key) {\n          this.my_data = data[i];\n          break;\n        }\n      } // adventurer_selling에 my_data 등록\n\n\n      this.$refs.adventurer_selling_modal.set_my_data(this.my_data); //console.log(this.user_data);\n    }); // 변경된 final_round_order를 데이터를 받는 함수 \n\n    socket.on(\"change_final_round_order\", data => {\n      this.final_round_order = data; //console.log(this.final_round_order);\n    }); // 변경된 result_table : 추리 테이블 데이터를 받는 함수\n\n    socket.on(\"change_result_table\", data => {\n      this.result_table = data; //console.log(this.result_table);\n    }); // 몇 라운드 인지 받기\n\n    socket.on(\"change_round\", data => {\n      this.round_cont = data; // console.log(this.round_cont);\n    }); // 논문 관련 데이터 받기\n\n    socket.on(\"change_theory_data\", data => {\n      this.theory_data = data; // console.log(this.theory_data);\n    }); // 물약 전시회 데이터 받기\n\n    socket.on(\"change_exhibition_data\", data => {\n      this.exhibition_result = data; // console.log(this.exhibition_result);\n    }); // 게임 순서를 정하는 순서의 정보 받는 함수\n\n    socket.on(\"round_order_setting_before\", data => {\n      //console.log(data);\n      let as = [];\n\n      for (let i = 0; i < data.length; i++) {\n        for (let j = 0; j < this.user_data.length; j++) {\n          if (data[i] == this.user_data[j].user_key) {\n            let choice_data = {\n              user_key: this.user_data[j].user_key,\n              user_name: this.user_data[j].user_name\n            };\n            as.push(choice_data);\n            choice_data = '';\n          }\n        }\n      }\n\n      this.round_setting_order = as; //console.log(this.round_setting_order[0].user_key);\n      //console.log(this.round_order[this.round_order_selecter].user_key);\n    }); // 게임 순서를 정하는 순서를 정하는 변수를 받는 함수 \n\n    socket.on(\"decide_round_setting_order_counter_send\", data => {\n      this.round_setting_order_counter = data;\n    }); // 라운드 진행 순서를 고른 정보를 받는 함수\n\n    socket.on(\"select_round_order_recive\", data => {\n      let btn_ele = '';\n      let btn_before_ele = '';\n\n      for (let i = 0; i < data.length; i++) {\n        // 순서에 맞는 element를 선택\n        switch (data[i].order) {\n          case 1:\n            btn_ele = this.$refs.btn_1;\n            break;\n\n          case 2:\n            btn_ele = this.$refs.btn_2;\n            break;\n\n          case 3:\n            btn_ele = this.$refs.btn_3;\n            break;\n\n          case 4:\n            btn_ele = this.$refs.btn_4;\n            break;\n\n          case 5:\n            btn_ele = this.$refs.btn_5;\n            break;\n\n          case 6:\n            btn_ele = this.$refs.btn_6;\n            break;\n\n          case 7:\n            btn_ele = this.$refs.btn_7;\n            break;\n\n          case 8:\n            btn_ele = this.$refs.btn_8;\n            break;\n        }\n\n        switch (data[i].before_order) {\n          case 1:\n            btn_before_ele = this.$refs.btn_1;\n            break;\n\n          case 2:\n            btn_before_ele = this.$refs.btn_2;\n            break;\n\n          case 3:\n            btn_before_ele = this.$refs.btn_3;\n            break;\n\n          case 4:\n            btn_before_ele = this.$refs.btn_4;\n            break;\n\n          case 5:\n            btn_before_ele = this.$refs.btn_5;\n            break;\n\n          case 6:\n            btn_before_ele = this.$refs.btn_6;\n            break;\n\n          case 7:\n            btn_before_ele = this.$refs.btn_7;\n            break;\n\n          case 8:\n            btn_before_ele = this.$refs.btn_8;\n            break;\n        } //console.log(btn_ele[0].className);\n        // 기존의 것이 있으면 기존 색 class 제거\n\n\n        if (btn_before_ele != '') {\n          let num = btn_before_ele[0].className.indexOf(data[i].user_color); // 문구 검색 결과가 있으면 제거 \n\n          if (num > 0) {\n            let str = btn_before_ele[0].className.substring(0, num - 1);\n            btn_before_ele[0].className = str;\n          } // 결과가 음수면 없는 것이므로 넘김\n\n        } // 기존의 것을 없앤 완전 초기화 상태이므로  기존의 것과 중복 되더라도 그냥 진행 가능\n        // 기존 : 5 신규 5 일 경우 위에서 이미 검사하지 않고 지웠으므로\n        // 신규 5를 다시 칠함\n        // 두 함수에서 모두 if로 구분하여 ifif중복하기 귀찮아서 그냥 무조건 지우고 무조건 색칠\n\n\n        if (btn_ele != '') {\n          btn_ele[0].className += ' ' + data[i].user_color; //console.log(btn_ele[0].className);\n        } // 변수 초기화\n\n\n        btn_before_ele = '';\n        btn_ele = '';\n      } // 내부 변수에도 값을 적용\n\n\n      this.final_round_order = data; //console.log(data);\n    }); // 라운드 진행 순서를 고르는 것이 끝났다는 알림을 받는 함수 \n\n    socket.on(\"decide_round_setting_order_end\", data => {\n      this.decide_order = !this.decide_order; // final_round_order을 고른 order에 맞게 재정렬한 값으로 재전송 받음\n\n      this.final_round_order = data;\n    }); // 현재 라운드의 큐브 순서 받기\n\n    socket.on(\"change_user_cube_data\", data => {\n      this.user_cube_data = data; //console.log(this.user_cube_data);\n    }); // 판매하는 아티펙트 정보를 받는 함수\n\n    socket.on(\"can_buy_artifacts_list\", data => {\n      this.can_buy_artifacts = data; //console.log(this.can_buy_artifacts);\n    }); // 큐브 선택시 사용 가능 큐브가 없을 때\n\n    socket.on(\"cant_use_cube\", data => {\n      alert(data.say);\n    }); // 논문 반박 성공시 모달 오픈 함수\n\n    socket.on(\"open_stamp_modal\", data => {\n      this.reciving_data = data;\n      this.success_refute_modal_onoff = true;\n    }); // 전시회 실패시 받을 함수\n\n    socket.on(\"show_exhibition\", data => {\n      this.exhibition_result_user = data.user_name;\n      this.exhibit_result = data.result;\n      this.exhibit_on_cube_success = data.get_cube_success;\n      this.exhibition_result_modal = true; // 3초 뒤 모달 off\n\n      setTimeout(() => {\n        this.exhibition_result_modal = false;\n      }, 5000);\n    }); // 보드 순서 시작\n\n    socket.on(\"board_start\", start_board => {\n      // 모두 false로 만들고 선택된 보드만 true로 변경\n      this.board_1_selected = false;\n      this.board_2_selected = false;\n      this.board_3_selected = false;\n      this.board_4_selected = false;\n      this.board_5_selected = false;\n      this.board_6_selected = false;\n      this.board_7_selected = false;\n      this.board_8_selected = false; // 다른 보드 의 모달 끄기\n\n      this.sell_ingredient_modal_onoff = false;\n      this.test_ingredient_modal_onoff = false;\n      this.reasoning_table_onoff = false;\n      this.presentation_of_theories_modal = false;\n      this.ingre_presentation_modal_onoff = false;\n      this.success_refute_modal_onoff = false;\n      this.board_order = 0;\n      this.$refs.adventurer_selling_modal.sell_potion_to_adv_modal_close();\n      this.$refs.adventurer_selling_modal.make_potion_modal_close(); // 보드 순서 끄기\n\n      this.my_turn = false;\n\n      switch (start_board) {\n        case 1:\n          //재료 선택\n          this.board_1_selected = true;\n          break;\n\n        case 2:\n          //재료 판매\n          this.board_2_selected = true;\n          this.sell_ingredient_modal_onoff = true;\n          break;\n\n        case 3:\n          // 용병에게 뭉약 판매\n          this.board_3_selected = true;\n          this.$refs.adventurer_selling_modal.sell_potion_to_adv_modal_open();\n          break;\n\n        case 4:\n          //아티펙트 구매\n          this.board_4_selected = true;\n          break;\n\n        case 5:\n          // 논문 반박\n          this.board_5_selected = true;\n          this.presentation_of_theories_modal = true;\n          break;\n\n        case 6:\n          //논문 발표\n          this.board_6_selected = true;\n          this.presentation_of_theories_modal = true;\n          break;\n\n        case 7:\n          //학생에게 실험\n          this.board_7_selected = true;\n          this.test_ingredient_modal_onoff = true;\n          break;\n\n        case 8:\n          //교수에게 실험\n          this.board_8_selected = true;\n          this.test_ingredient_modal_onoff = true;\n          break;\n\n        case 9:\n          // 물약 발표회\n          this.board_end_selected = true;\n          this.last_round_modal_onoff = true;\n          break;\n\n        default:\n          console.log(\"start_board_val_err \" + start_board);\n          break;\n      } // 선택되지 못한 보드가 눌렸을 경우 현재 선택된 보드만 누르게 경고를 띄워야함\n\n    }); // 호의 카드 <관리인> 사용 시 스스로 물약 마시기 모달 open\n\n    socket.on(\"caretaker_board_start\", data => {\n      // 관리인 카드 사용!\n      this.caretaker_used = true;\n      this.using_user_num = data.using_user_num; // 모두 false로 만들고 선택된 보드만 true로 변경\n\n      this.board_1_selected = false;\n      this.board_2_selected = false;\n      this.board_3_selected = false;\n      this.board_4_selected = false;\n      this.board_5_selected = false;\n      this.board_6_selected = false;\n      this.board_7_selected = false;\n      this.board_8_selected = false;\n      this.board_end_selected = false; // 다른 보드 의 모달 끄기\n\n      this.sell_ingredient_modal_onoff = false;\n      this.test_ingredient_modal_onoff = false;\n      this.reasoning_table_onoff = false;\n      this.presentation_of_theories_modal = false;\n      this.ingre_presentation_modal_onoff = false;\n      this.success_refute_modal_onoff = false;\n      this.board_order = 0;\n      this.$refs.adventurer_selling_modal.sell_potion_to_adv_modal_close();\n      this.$refs.adventurer_selling_modal.make_potion_modal_close(); // 보드 순서 끄기\n\n      this.my_turn = false; // 스스로 물약 마시기 보드 on\n\n      this.board_8_selected = true;\n      this.test_ingredient_modal_onoff = true; // 누가 사용 했는지 확인해 my_turn 넘기기\n\n      if (data.temp_used_favor_card_list[4][data.using_user_num].user_key == this.my_key) {\n        // 먼저 사용한 유저부터 사용 되게 될 꺼임\n        this.my_trun = true;\n      } else {\n        this.my_turn = false;\n      }\n    }); //보드 진행 시 순서 관련 변수 업데이트\n\n    socket.on(\"change_board_order_val\", data => {\n      this.board_order = data.board_order;\n      this.board_cube_order = data.board_cube_order; // 보드 순서 일 때 변수 입력\n\n      if (this.board_2_selected == true || // 재료 판매\n      this.board_5_selected == true || // 논문 반박\n      this.board_6_selected == true || // 논문 발표\n      this.board_7_selected == true || // 학생에게 실험\n      this.board_8_selected == true || // 본인에게 실험\n      this.board_end_selected == true // 물약 전시회\n      ) {\n        if (this.final_round_order[this.board_order].user_key == this.my_key) {\n          this.my_turn = true;\n        } else {\n          this.my_turn = false;\n        }\n      } //console.log(this.my_turn);\n      // 물약 판매 순서일 경우 판매하는 모든 사람들이 동시에 진행할 수 있어야함\n\n\n      if (this.board_3_selected == true) {\n        for (let i = 0; i < this.final_round_order.length; i++) {\n          // 내 차례가 있으면 그냥 보여주기\n          if (this.user_cube_data[3][i].user_key == this.my_key) {\n            if (this.user_cube_data[3][i].cube[1].is_select == true) {\n              this.sell_potion_turn = true;\n              break;\n            }\n\n            break;\n          }\n        }\n      }\n    });\n    socket.on(\"round_end\", () => {\n      // 모든 보드 포인터 끄기\n      this.board_1_selected = false;\n      this.board_2_selected = false;\n      this.board_3_selected = false;\n      this.board_4_selected = false;\n      this.board_5_selected = false;\n      this.board_6_selected = false;\n      this.board_7_selected = false;\n      this.board_8_selected = false; // 모든 모달 끄기\n\n      this.sell_ingredient_modal_onoff = false;\n      this.test_ingredient_modal_onoff = false;\n      this.reasoning_table_onoff = false;\n      this.presentation_of_theories_modal = false;\n      this.ingre_presentation_modal_onoff = false;\n      this.success_refute_modal_onoff = false;\n      this.last_round_modal_onoff = false;\n      this.exhibition_check_modal_onoff = false;\n      this.$refs.adventurer_selling_modal.sell_potion_to_adv_modal_close();\n      this.$refs.adventurer_selling_modal.make_potion_modal_close(); // 보드 칸 순서 끄기\n\n      this.my_turn = false; // 용병에게 물약 판매 초기환\n\n      this.my_selling_price = -1;\n      this.selling_turn = 0;\n      this.discount_coin_list = [];\n      this.before_adv_discount_select_num = -1; // overlay 켜서 다시 순서 정하기 시작\n\n      this.decide_order = !this.decide_order;\n      this.final_round_order = '';\n    });\n    socket.on(\"test_ingredient_result\", data => {\n      let user_num = -1;\n\n      for (let i = 0; i < this.user_data.length; i++) {\n        if (this.user_data[i].user_key == data.user_key) {\n          user_num = i;\n        }\n      }\n\n      this.open_result_user = this.user_data[user_num].user_name;\n      this.open_result = data.test_result;\n      this.open_result_modal = true; // 3초 지연 후 자동 모달 끄기\n\n      setTimeout(() => {\n        this.open_result_modal = false;\n      }, 3000);\n    }); // 게임 종료\n\n    socket.on(\"game_end_event\", data => {\n      console.log(data); // 게임이 종료된것을 알리는 모달을 호출\n      // 모달에서 완료하기 를 누르면 end_page로 넘어가는 형식으로 변경\n\n      /*\r\n      \r\n      this.$router.push({\r\n              name : 'end_page',\r\n              params : {\r\n                  game_result : JSON.stringify(data),\r\n                  name : this.my_name,\r\n                  room_name : this.room_name,\r\n              }\r\n          });\r\n      */\n\n      this.game_end_data = data;\n      this.game_end_alert_modal = true;\n    });\n  },\n\n  data() {\n    return {\n      // component forceUpdate를 위한 key변수\n      adventurer_selling_key_val: 0,\n      favor_card_use_key_val: 0,\n      user_data: '',\n      room_name: this.$route.params.room_name,\n      my_key: '',\n      my_data: '',\n      my_name: '',\n      my_color: '',\n      room_owner: '',\n      total_dicount_adventruer: 4,\n      textarea: '',\n      message: '',\n      ingredient_card_selected: '',\n      // overlay\n      decide_order: false,\n      // overlay 완료버튼으로 나오는 modal\n      decide_order_modal: false,\n      // 현재 라운드\n      round_cont: 0,\n      // 라운드 순서를 정하는 순서 정보\n      round_setting_order: '',\n      // 라운드 순서를 정하는 순서 \n      round_setting_order_counter: 0,\n      // 해당 라운드의 순서 결정완료 후 순서\n      final_round_order: [],\n      // 해당 라운드의 큐브 순서\n      user_cube_data: [],\n      // 라운드 준비 완료 확인 모달\n      round_order_check: false,\n      // 구매 가능한 아티펙트 변수\n      can_buy_artifacts: '',\n      // 재료조합 추리 및 결과 테이블\n      result_table: [],\n      // board 선택을 위한 변수 8개\n      board_1_selected: false,\n      board_2_selected: false,\n      board_3_selected: false,\n      board_4_selected: false,\n      board_5_selected: false,\n      board_6_selected: false,\n      board_7_selected: false,\n      board_8_selected: false,\n      // 매 보드마다 순서를 정할 변수\n      board_order: 0,\n      // 큐브 순서를 정할 변수\n      board_cube_order: 1,\n      // 2번째 보드 modal\n      sell_ingredient_modal_onoff: false,\n      // 보드의 현재 순서가 자신인지 확인하는 변수\n      my_turn: false,\n      // 호의 카드 종류\n      card_kind: '',\n      // 호의 카드 사용 여부 통합 변수\n      temp_used_favor_card_list: '',\n      // 관리인 카드가 사용 되었다는 것을 알릴 변수\n      caretaker_used: false,\n      // 관리인 카드 사용 번호\n      using_user_num: '',\n      // 용병에게 물약 판매 차례를 진행할 사람들만 표기할 변수\n      sell_potion_turn: false,\n      // 용병 순서 변수\n      random_adv_list: [],\n      // 판매할 물약 변수 원형\n      adventurer_card_ori_data: '',\n      // 할인 포인트 제시 여부\n      get_discount_coin: false,\n      // 선택한 할인 카드 저장 변수\n      before_adv_discount_select_num: -1,\n      // 제시한 할인 카드 를 저장할 변수\n      discount_coin_list: [],\n      // 할인제시 스텝이 끝났는지 안끝났는지 알려줄 변수\n      is_end_discount: false,\n      // 나의 할인 스텝이 끝났을 때 기다리기 위한 변수\n      im_end_discount: false,\n      // 내 판매가\n      my_selling_price: 0,\n      // 판매 차례\n      selling_turn: 0,\n      // 판매할 물약 종류 설정\n      what_kind_sell_potion: '',\n      // 판매 성공/실패 모달 \n      selling_end_modal: false,\n      // 판매 성공/실패 변수\n      selling_success: false,\n      // 판매 성공/실패한 유저의 색\n      selling_user_color: '',\n      // 판매한 물약\n      selling_potion_kind: '',\n      // 실험할 재료를 저장해둘 변수\n      test_ingredient_list: [],\n      // 실험 모달\n      test_ingredient_modal_onoff: false,\n      // 추리 테이블 모달\n      my_reasoning_table_modal: false,\n      // 추리 테이블 관련 변수\n      icon_data: {\n        0: require('@/assets/img/material_card/ingredient_1.png'),\n        1: require('@/assets/img/material_card/ingredient_2.png'),\n        2: require('@/assets/img/material_card/ingredient_3.png'),\n        3: require('@/assets/img/material_card/ingredient_4.png'),\n        4: require('@/assets/img/material_card/ingredient_5.png'),\n        5: require('@/assets/img/material_card/ingredient_6.png'),\n        6: require('@/assets/img/material_card/ingredient_7.png'),\n        7: require('@/assets/img/material_card/ingredient_8.png')\n      },\n      reasoning_data: {\n        0: require('@/assets/img/stamp/rgbl010.png'),\n        1: require('@/assets/img/stamp/rgbl101.png'),\n        2: require('@/assets/img/stamp/rglb100.png'),\n        3: require('@/assets/img/stamp/rglb011.png'),\n        4: require('@/assets/img/stamp/rlgb001.png'),\n        5: require('@/assets/img/stamp/rlgb110.png'),\n        6: require('@/assets/img/stamp/rlglbl000.png'),\n        7: require('@/assets/img/stamp/rlglbl111.png')\n      },\n      black_stamp_data: {\n        0: require('@/assets/img/stamp/stamp_black_5.png'),\n        1: require('@/assets/img/stamp/stamp_black_5.png'),\n        2: require('@/assets/img/stamp/stamp_black_3.png'),\n        3: require('@/assets/img/stamp/stamp_black_3.png'),\n        4: require('@/assets/img/stamp/stamp_black_3.png'),\n        5: require('@/assets/img/stamp/stamp_black_red.png'),\n        6: require('@/assets/img/stamp/stamp_black_red.png'),\n        7: require('@/assets/img/stamp/stamp_black_green.png'),\n        8: require('@/assets/img/stamp/stamp_black_green.png'),\n        9: require('@/assets/img/stamp/stamp_black_blue.png'),\n        10: require('@/assets/img/stamp/stamp_black_blue.png')\n      },\n      blue_stamp_data: {\n        0: require('@/assets/img/stamp/stamp_blue_5.png'),\n        1: require('@/assets/img/stamp/stamp_blue_5.png'),\n        2: require('@/assets/img/stamp/stamp_blue_3.png'),\n        3: require('@/assets/img/stamp/stamp_blue_3.png'),\n        4: require('@/assets/img/stamp/stamp_blue_3.png'),\n        5: require('@/assets/img/stamp/stamp_blue_red.png'),\n        6: require('@/assets/img/stamp/stamp_blue_red.png'),\n        7: require('@/assets/img/stamp/stamp_blue_green.png'),\n        8: require('@/assets/img/stamp/stamp_blue_green.png'),\n        9: require('@/assets/img/stamp/stamp_blue_blue.png'),\n        10: require('@/assets/img/stamp/stamp_blue_blue.png')\n      },\n      red_stamp_data: {\n        0: require('@/assets/img/stamp/stamp_red_5.png'),\n        1: require('@/assets/img/stamp/stamp_red_5.png'),\n        2: require('@/assets/img/stamp/stamp_red_3.png'),\n        3: require('@/assets/img/stamp/stamp_red_3.png'),\n        4: require('@/assets/img/stamp/stamp_red_3.png'),\n        5: require('@/assets/img/stamp/stamp_red_red.png'),\n        6: require('@/assets/img/stamp/stamp_red_red.png'),\n        7: require('@/assets/img/stamp/stamp_red_green.png'),\n        8: require('@/assets/img/stamp/stamp_red_green.png'),\n        9: require('@/assets/img/stamp/stamp_red_blue.png'),\n        10: require('@/assets/img/stamp/stamp_red_blue.png')\n      },\n      white_stamp_data: {\n        0: require('@/assets/img/stamp/stamp_white_5.png'),\n        1: require('@/assets/img/stamp/stamp_white_5.png'),\n        2: require('@/assets/img/stamp/stamp_white_3.png'),\n        3: require('@/assets/img/stamp/stamp_white_3.png'),\n        4: require('@/assets/img/stamp/stamp_white_3.png'),\n        5: require('@/assets/img/stamp/stamp_white_red.png'),\n        6: require('@/assets/img/stamp/stamp_white_red.png'),\n        7: require('@/assets/img/stamp/stamp_white_green.png'),\n        8: require('@/assets/img/stamp/stamp_white_green.png'),\n        9: require('@/assets/img/stamp/stamp_white_blue.png'),\n        10: require('@/assets/img/stamp/stamp_white_blue.png')\n      },\n      ele_core_data: {\n        0: require('@/assets/img/game_icon/red_origin.png'),\n        1: require('@/assets/img/game_icon/green_origin.png'),\n        2: require('@/assets/img/game_icon/blue_origin.png')\n      },\n      picked: -1,\n      reasoning_table_onoff: false,\n      // 실험 결과를 모두에게 보여주는 변수\n      open_result: '',\n      open_result_user: '',\n      open_result_modal: false,\n      // 논문 발표/ 반박 시 발표된 정보 저장\n      theory_data: '',\n      // 논문 발표/ 반박 모달\n      presentation_of_theories_modal: false,\n      ingre_presentation_modal_onoff: false,\n      // 논문 발표/반박 원소 선택 관련 변소\n      before_theory_ele_select_num: 0,\n      before_theory_stm_select_num: 0,\n      now_select_ingre: 0,\n      before_refute_ori_select_num: 0,\n      // 논문 반박 성공 시 열릴 모달 \n      success_refute_modal_onoff: false,\n      // 반박 성공시 보여줄 인장들\n      reciving_data: '',\n      // 마지막 라운드 모달\n      last_round_modal_onoff: false,\n      // 마자믹 라운드 보드 켜기\n      board_end_selected: false,\n      // 잘 발표된 물약 표기\n      exhibition_result: '',\n      // 발표하기 위한 모달\n      exhibition_check_modal_onoff: false,\n      exhibition_potion_num: -1,\n      // 전시 결과 모달\n      exhibition_result_modal: false,\n      // 전시 결과창 - 전시자\n      exhibition_result_user: '',\n      // 전시 결과창 - 결과\n      exhibit_result: '',\n      // 전시 가능한 여부 변수\n      exhibit_on_cube_success: false,\n      // 게임 종료 알림 모달\n      game_end_alert_modal: false,\n      // 게임 종료 정보\n      game_end_data: ''\n    };\n  },\n\n  methods: {\n    use_chat: function () {\n      if (this.message !== '') {\n        let msg = {\n          speaker: this.my_name,\n          msg: this.message,\n          type: \"normal\",\n          room_name: this.room_name\n        }; //   console.log(\"서버에 보낼 데이터\");\n        //   console.log(msg);\n        //   console.log(\"보낼준비 끝\");\n\n        this.message = '';\n        socket.emit(\"chat\", msg);\n      }\n    },\n    draw_ingredient_card: function (cnt) {\n      let data = {\n        cnt: cnt,\n        my_key: this.my_key\n      };\n      socket.emit(\"draw_ingredient_card\", data);\n    },\n    // 인게임 라운드 진행 준비 완료를 알리는 함수\n    round_ready: function () {\n      this.round_order_check = true;\n    },\n    round_order_setting_end: function () {\n      this.round_order_check = false;\n      let send_data = {\n        user_key: this.my_key,\n        room_name: this.room_name\n      };\n      socket.emit(\"round_ready_on\", send_data);\n    },\n    round_order_setting_close: function () {\n      this.round_order_check = false;\n    },\n    // decide_order overlay의 완료 버튼\n    decide_order_modal_open: function () {\n      // 선택 순서에 따라 클릭 막기\n      if (this.round_setting_order[this.round_setting_order_counter].user_key != this.my_key) {\n        alert(\"지금은 내 선택 순서가 아닙니다! 조금만 기다려주세용\");\n        return;\n      }\n\n      this.decide_order_modal = !this.decide_order_modal;\n    },\n    // decide_order_modal 의 결정 버튼\n    decide_order_setting_end: function () {\n      let is_select_order = false;\n\n      for (let i = 0; i < this.final_round_order.length; i++) {\n        if (this.final_round_order[i].user_key == this.my_key) {\n          is_select_order = true;\n          break;\n        }\n      }\n\n      if (!is_select_order) {\n        alert(\"순서를 고르고 결정을 눌러주세요\");\n        this.decide_order_modal = false;\n        return;\n      }\n\n      let send_data = {\n        room_name: this.room_name\n      }; //위 if문에 안걸리면 선택한 순서가 있다는 것 이므로 진행\n      // 게임 결정 순서를 공유해야 하므로 서버에 값을 증가시키라고 전송\n\n      socket.emit(\"decide_round_setting_order_counter_incre\", send_data);\n      this.decide_order_modal = false;\n    },\n    select_order_btn: function (val) {\n      // 선택 순서에 따라 클릭 막기\n      if (this.round_setting_order[this.round_setting_order_counter].user_key != this.my_key) {\n        alert(\"지금은 내 선택 순서가 아닙니다! 조금만 기다려주세용\");\n        return;\n      } // 마지막 순서는 벌칙 존이므로 선택할 수 없다!\n\n\n      if (val == 8) {\n        alert(\"벌칙 존이라서 선택할 수 없습니다. 다른 순서를 선택해주세요.\");\n        return;\n      }\n\n      if (this.final_round_order != '') {\n        for (let i = 0; i < this.final_round_order.length; i++) {\n          if (this.final_round_order[i].user_key != this.my_key) {\n            if (val == this.final_round_order[i].order) {\n              alert(\"다른 사람이 선택한 순서는 선택 할 수 없습니다.\");\n              return;\n            }\n          }\n        }\n      }\n\n      let round_order_data = {\n        user_key: this.my_key,\n        order: val,\n        room_name: this.room_name\n      }; // 버튼 선택 결과 전송\n\n      socket.emit(\"select_round_order\", round_order_data);\n    },\n    // 큐브로 순서를 선택할 때 반응\n    click_order_btn: function (n, u, user_key) {\n      for (let i = 0; i < this.user_data.length; i++) {\n        if (this.user_data[i].user_key == user_key) {\n          if (this.user_data[i].is_ready == true) {\n            alert(\"준비 완료 후에는 선택할 수 없습니다!\");\n            return;\n          }\n        }\n      }\n\n      if (user_key != this.my_key) {\n        alert(\"본인의 색으로 구분된 버튼만 골라주세요!\");\n        return;\n      } // 라운드가 진행중이면 클릭되선 안됨\n\n\n      for (let i = 0; i < this.user_data.length; i++) {\n        if (this.user_data[i].user_key == this.my_key) {\n          if (this.user_data[i].is_ingame == true) {\n            alert(\"라운드 진행 중에는 클릭 할 수 없습니다!\");\n            return;\n          }\n        }\n      } // 1라운드에는 용병에게 물약 판매 / 논문 발표 / 반박을 할 수 없다\n\n\n      if (this.round_cont == 1 && (n == 3 || n == 5 || n == 6)) {\n        alert(\"1라운드에는 해당 보드의 행동을 할 수 없습니다!\\n 다른 보드를 선택해주세요\");\n        return;\n      } // n :: user_cube_data[n] :: 보드 번호\n      // u :: user_cube_data[n][유저번호].cube[u] :: 보드 의 큐브 번호\n\n\n      let send_data = {\n        user_key: user_key,\n        board_num: n,\n        button_order_num: u,\n        room_name: this.room_name\n      };\n      console.log(send_data); //버튼 선택 결과 전송\n\n      socket.emit(\"select_cube\", send_data);\n    },\n    // 추리테이블 눌렀을 때 반응\n    click_reasoning_ele: function (index, key) {\n      let reasoning_data = {\n        user_key: this.my_key,\n        x: index,\n        y: key,\n        change_val: this.picked,\n        room_name: this.room_name\n      };\n      socket.emit(\"reasoning_table_change\", reasoning_data); //console.log(reasoning_data);\n\n      this.picked = -1;\n      this.reasoning_table_onoff = false;\n    },\n    reasoning_table_open: function () {\n      this.my_reasoning_table_modal = !this.my_reasoning_table_modal;\n    },\n    open_reasoning_table_modal: function (index, key) {\n      this.$refs.index_val.innerText = index;\n      this.$refs.key_val.innerText = key; //console.log(this.$refs.index_val.innerText);\n      //console.log(index + \" \" + key);\n\n      this.reasoning_table_onoff = true;\n    },\n    reset_val: function () {\n      this.picked = -1;\n    },\n    // 카드 클릭해서 모달 열기\n    favor_card_modal_on: function (card_kind) {\n      this.$refs.favor_card_use_check_modal.favor_modal_open(card_kind);\n    },\n    // 호의 카드 사용하기\n    favor_card_use_check: function (data) {\n      // 호의 카드를 사용한다고 서버에 알리고 효과 적용받기\n      let send_data = '';\n\n      if (data.card_name == 'big_man') {\n        send_data = {\n          user_key: this.my_key,\n          room_name: this.room_name,\n          favor_card: data.card_name,\n          select_board_num: data.select_board_num\n        };\n      } else if (data.card_name == 'herbalist') {\n        send_data = {\n          user_key: this.my_key,\n          room_name: this.room_name,\n          favor_card: data.card_name,\n          ingre_list: data.ingre_list\n        };\n      } else {\n        send_data = {\n          user_key: this.my_key,\n          room_name: this.room_name,\n          favor_card: data.card_name\n        };\n      }\n\n      console.log(send_data);\n      socket.emit(\"favor_card_use_confirm\", send_data);\n    },\n    // 재료카드 선택 이벤트\n    pick_ingredient: function (data, index) {\n      if (this.board_1_selected == false || this.user_cube_data[1][this.board_order].user_key != this.my_key) {\n        alert(\"아직 재료를 고를 수 없습니다.\");\n        return;\n      } // 재료 카드 선택 이벤트는 무조건 0번에 존재하므로\n\n\n      if (this.user_cube_data[1][this.board_order].cube[this.board_cube_order].is_select == true && this.user_cube_data[1][this.board_order].user_key == this.my_key) {\n        switch (index) {\n          case \"card_1\":\n            index = 0;\n            break;\n\n          case \"card_2\":\n            index = 1;\n            break;\n\n          case \"card_3\":\n            index = 2;\n            break;\n\n          case \"card_4\":\n            index = 3;\n            break;\n\n          case \"card_5\":\n            index = 4;\n            break;\n        } // 위의 변수를 뚫고 내려오면 현재 내가 고를 상태가 맞는것\n\n\n        let send_data = {\n          user_key: this.my_key,\n          pick_item: data,\n          cube_order: this.board_cube_order,\n          board_order: this.board_order,\n          ingredient_select_arr_order: index,\n          room_name: this.room_name\n        }; //console.log(send_data);\n\n        socket.emit(\"pick_ingredient\", send_data);\n      }\n    },\n    // 판매 재료카드 선택 이벤트\n    click_sell_ingredient_check: function (name) {\n      //console.log(name);\n      let num = -1; // 원래 선택되어 있는지 확인하고 전부 해제 \n\n      for (let i = 0; i < this.user_data.length; i++) {\n        if (this.user_data[i].user_key == this.my_key) {\n          if (this.user_data[i].user_ingame_data.ingredient.card_1 > 0) {\n            num = this.$refs.sell_card_1[0].className.indexOf('sell_border');\n\n            if (num > 0) {\n              let str = this.$refs.sell_card_1[0].className.substring(0, num - 1);\n              this.$refs.sell_card_1[0].className = str;\n            }\n          }\n\n          if (this.user_data[i].user_ingame_data.ingredient.card_2 > 0) {\n            num = this.$refs.sell_card_2[0].className.indexOf('sell_border');\n\n            if (num > 0) {\n              let str = this.$refs.sell_card_2[0].className.substring(0, num - 1);\n              this.$refs.sell_card_2[0].className = str;\n            }\n          }\n\n          if (this.user_data[i].user_ingame_data.ingredient.card_3 > 0) {\n            num = this.$refs.sell_card_3[0].className.indexOf('sell_border');\n\n            if (num > 0) {\n              let str = this.$refs.sell_card_3[0].className.substring(0, num - 1);\n              this.$refs.sell_card_3[0].className = str;\n            }\n          }\n\n          if (this.user_data[i].user_ingame_data.ingredient.card_4 > 0) {\n            num = this.$refs.sell_card_4[0].className.indexOf('sell_border');\n\n            if (num > 0) {\n              let str = this.$refs.sell_card_4[0].className.substring(0, num - 1);\n              this.$refs.sell_card_4[0].className = str;\n            }\n          }\n\n          if (this.user_data[i].user_ingame_data.ingredient.card_5 > 0) {\n            num = this.$refs.sell_card_5[0].className.indexOf('sell_border');\n\n            if (num > 0) {\n              let str = this.$refs.sell_card_5[0].className.substring(0, num - 1);\n              this.$refs.sell_card_5[0].className = str;\n            }\n          }\n\n          if (this.user_data[i].user_ingame_data.ingredient.card_6 > 0) {\n            num = this.$refs.sell_card_6[0].className.indexOf('sell_border');\n\n            if (num > 0) {\n              let str = this.$refs.sell_card_6[0].className.substring(0, num - 1);\n              this.$refs.sell_card_6[0].className = str;\n            }\n          }\n\n          if (this.user_data[i].user_ingame_data.ingredient.card_7 > 0) {\n            num = this.$refs.sell_card_7[0].className.indexOf('sell_border');\n\n            if (num > 0) {\n              let str = this.$refs.sell_card_7[0].className.substring(0, num - 1);\n              this.$refs.sell_card_7[0].className = str;\n            }\n          }\n\n          if (this.user_data[i].user_ingame_data.ingredient.card_8 > 0) {\n            num = this.$refs.sell_card_8[0].className.indexOf('sell_border');\n\n            if (num > 0) {\n              let str = this.$refs.sell_card_8[0].className.substring(0, num - 1);\n              this.$refs.sell_card_8[0].className = str;\n            }\n          }\n\n          break;\n        }\n      } // 전부 해제한 후 선택한 것을 선택표시\n\n\n      let ref_str = '';\n\n      switch (name) {\n        case 'card_1':\n          ref_str = this.$refs.sell_card_1;\n          break;\n\n        case 'card_2':\n          ref_str = this.$refs.sell_card_2;\n          break;\n\n        case 'card_3':\n          ref_str = this.$refs.sell_card_3;\n          break;\n\n        case 'card_4':\n          ref_str = this.$refs.sell_card_4;\n          break;\n\n        case 'card_5':\n          ref_str = this.$refs.sell_card_5;\n          break;\n\n        case 'card_6':\n          ref_str = this.$refs.sell_card_6;\n          break;\n\n        case 'card_7':\n          ref_str = this.$refs.sell_card_7;\n          break;\n\n        case 'card_8':\n          ref_str = this.$refs.sell_card_8;\n          break;\n      }\n\n      ref_str[0].className += \" sell_border\";\n    },\n    // 재료 판매 이벤트\n    click_sell_ingredient: function () {\n      let num = -1;\n      let sell_item_num = 0; // 선택된 것을 확인하고 번호를 저장\n      // 반드시 한 카드의 클래스에먼 sell_border가 있을것이므로 가능\n\n      for (let i = 0; i < this.user_data.length; i++) {\n        if (this.user_data[i].user_key == this.my_key) {\n          if (this.user_data[i].user_ingame_data.ingredient.card_1 > 0) {\n            num = this.$refs.sell_card_1[0].className.indexOf('sell_border');\n\n            if (num > 0) {\n              sell_item_num = 1;\n              this.$refs.sell_card_1[0].className = this.$refs.sell_card_1[0].className.substring(0, num - 1);\n            }\n          }\n\n          num = 0;\n\n          if (this.user_data[i].user_ingame_data.ingredient.card_2 > 0) {\n            num = this.$refs.sell_card_2[0].className.indexOf('sell_border');\n\n            if (num > 0) {\n              sell_item_num = 2;\n              this.$refs.sell_card_2[0].className = this.$refs.sell_card_2[0].className.substring(0, num - 1);\n            }\n          }\n\n          num = 0;\n\n          if (this.user_data[i].user_ingame_data.ingredient.card_3 > 0) {\n            num = this.$refs.sell_card_3[0].className.indexOf('sell_border');\n\n            if (num > 0) {\n              sell_item_num = 3;\n              this.$refs.sell_card_3[0].className = this.$refs.sell_card_3[0].className.substring(0, num - 1);\n            }\n          }\n\n          num = 0;\n\n          if (this.user_data[i].user_ingame_data.ingredient.card_4 > 0) {\n            num = this.$refs.sell_card_4[0].className.indexOf('sell_border');\n\n            if (num > 0) {\n              sell_item_num = 4;\n              this.$refs.sell_card_4[0].className = this.$refs.sell_card_4[0].className.substring(0, num - 1);\n            }\n          }\n\n          num = 0;\n\n          if (this.user_data[i].user_ingame_data.ingredient.card_5 > 0) {\n            num = this.$refs.sell_card_5[0].className.indexOf('sell_border');\n\n            if (num > 0) {\n              sell_item_num = 5;\n              this.$refs.sell_card_5[0].className = this.$refs.sell_card_5[0].className.substring(0, num - 1);\n            }\n          }\n\n          num = 0;\n\n          if (this.user_data[i].user_ingame_data.ingredient.card_6 > 0) {\n            num = this.$refs.sell_card_6[0].className.indexOf('sell_border');\n\n            if (num > 0) {\n              sell_item_num = 6;\n              this.$refs.sell_card_6[0].className = this.$refs.sell_card_6[0].className.substring(0, num - 1);\n            }\n          }\n\n          num = 0;\n\n          if (this.user_data[i].user_ingame_data.ingredient.card_7 > 0) {\n            num = this.$refs.sell_card_7[0].className.indexOf('sell_border');\n\n            if (num > 0) {\n              sell_item_num = 7;\n              this.$refs.sell_card_7[0].className = this.$refs.sell_card_7[0].className.substring(0, num - 1);\n            }\n          }\n\n          num = 0;\n\n          if (this.user_data[i].user_ingame_data.ingredient.card_8 > 0) {\n            num = this.$refs.sell_card_8[0].className.indexOf('sell_border');\n\n            if (num > 0) {\n              sell_item_num = 8;\n              this.$refs.sell_card_8[0].className = this.$refs.sell_card_8[0].className.substring(0, num - 1);\n            }\n          }\n\n          num = 0;\n          break;\n        }\n      } //판매할 데이터를 묶어 보냄\n\n\n      let send_data = {\n        user_key: this.my_key,\n        sell_item_num: sell_item_num,\n        board_order: this.board_order,\n        cube_order: this.board_cube_order,\n        room_name: this.room_name\n      }; //console.log(send_data);\n\n      socket.emit(\"sell_item_confirm\", send_data);\n    },\n    // 재료 판매 포기 이벤트\n    end_selling_ingredient: function () {\n      let send_data = {\n        user_key: this.my_key,\n        board_num: this.board_num,\n        cube_order: this.board_cube_order,\n        room_name: this.room_name\n      };\n      socket.emit(\"cancel_selling_ingre\", send_data);\n    },\n    // 아티팩트 구매 가능 여부 확인 및 구매\n    buy_artifact_confirm: function (data) {\n      if (this.final_round_order[this.board_order].user_key != this.my_key || this.board_4_selected == false) {\n        alert(\"자신의 순서에만 구매할 수 있습니다\\n큐브를 두고 해당 보드의 순서가 되면 구매해 주세요\");\n        return;\n      }\n\n      let send_data = {\n        board_order: this.board_order,\n        cube_order: this.board_cube_order,\n        rank: data.rank,\n        arti_num: data.num,\n        user_key: this.my_key,\n        room_name: this.room_name\n      };\n      socket.emit(\"buy_artifact_confirm\", send_data);\n    },\n    // 실험 재료 2개 고르기\n    click_test_ingredient_check: function (name) {\n      let same_name = false; // 이미 2가지가 선택되어 있으면 가장 먼저 들어온 1개를 제거하고 마지막에 들어온 한개를 진행\n\n      if (this.test_ingredient_list.length == 2) {\n        // 공용 변수 - test_border를 제거할 변수 이름\n        let before_name = '';\n        let num = 0; // 같은 카드가 이미 있는지 검사\n\n        same_name = this.test_ingredient_list.includes(name); //console.log(same_name);\n\n        if (same_name == true) {\n          // 같은걸 제거\n          let same_num = this.test_ingredient_list.indexOf(name);\n          this.test_ingredient_list.splice(same_num, 1);\n          before_name = name;\n        } else {\n          // 먼저 들어온 1개를 제거\n          before_name = this.test_ingredient_list.shift();\n        }\n\n        switch (before_name) {\n          case 'card_1':\n            num = this.$refs.test_card_1[0].className.indexOf('test_border');\n\n            if (num > 0) {\n              this.$refs.test_card_1[0].className = this.$refs.test_card_1[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case 'card_2':\n            num = this.$refs.test_card_2[0].className.indexOf('test_border');\n\n            if (num > 0) {\n              this.$refs.test_card_2[0].className = this.$refs.test_card_2[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case 'card_3':\n            num = this.$refs.test_card_3[0].className.indexOf('test_border');\n\n            if (num > 0) {\n              this.$refs.test_card_3[0].className = this.$refs.test_card_3[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case 'card_4':\n            num = this.$refs.test_card_4[0].className.indexOf('test_border');\n\n            if (num > 0) {\n              this.$refs.test_card_4[0].className = this.$refs.test_card_4[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case 'card_5':\n            num = this.$refs.test_card_5[0].className.indexOf('test_border');\n\n            if (num > 0) {\n              this.$refs.test_card_5[0].className = this.$refs.test_card_5[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case 'card_6':\n            num = this.$refs.test_card_6[0].className.indexOf('test_border');\n\n            if (num > 0) {\n              this.$refs.test_card_6[0].className = this.$refs.test_card_6[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case 'card_7':\n            num = this.$refs.test_card_7[0].className.indexOf('test_border');\n\n            if (num > 0) {\n              this.$refs.test_card_7[0].className = this.$refs.test_card_7[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case 'card_8':\n            num = this.$refs.test_card_8[0].className.indexOf('test_border');\n\n            if (num > 0) {\n              this.$refs.test_card_8[0].className = this.$refs.test_card_8[0].className.substring(0, num - 1);\n            }\n\n            break;\n        }\n      }\n\n      if (same_name == false) {\n        // 변수에 추가\n        this.test_ingredient_list.push(name);\n        let ref_str = '';\n\n        switch (name) {\n          case 'card_1':\n            ref_str = this.$refs.test_card_1;\n            break;\n\n          case 'card_2':\n            ref_str = this.$refs.test_card_2;\n            break;\n\n          case 'card_3':\n            ref_str = this.$refs.test_card_3;\n            break;\n\n          case 'card_4':\n            ref_str = this.$refs.test_card_4;\n            break;\n\n          case 'card_5':\n            ref_str = this.$refs.test_card_5;\n            break;\n\n          case 'card_6':\n            ref_str = this.$refs.test_card_6;\n            break;\n\n          case 'card_7':\n            ref_str = this.$refs.test_card_7;\n            break;\n\n          case 'card_8':\n            ref_str = this.$refs.test_card_8;\n            break;\n        }\n\n        ref_str[0].className += \" test_border\";\n      }\n    },\n    click_test_ingredient: function () {\n      if (this.test_ingredient_list.length != 2) {\n        alert(\"재료카드를 2장 선택해주세요!!!\");\n        return;\n      } // test_ingredient_list의 길이가 2이면 서버에게 보내고\n      // 고른 재료 차감 / 변수 초기화 / 결과는 모두에게 전송\n      // / -> 유물 카드 에 따른 효과 발동 할 부분 추가할 것 계산\n      else {\n        let board_is = 0;\n\n        if (this.board_7_selected == true) {\n          board_is = 7;\n        } else if (this.board_8_selected == true) {\n          board_is = 8;\n        } // 호의카드 사용 여부에 따라 추가적인 정보 전송\n\n\n        let send_data = '';\n\n        if (this.caretaker_used == true) {\n          send_data = {\n            user_key: this.my_key,\n            card_list: this.test_ingredient_list,\n            caretaker_used: true,\n            using_user_num: this.using_user_num,\n            board_is: board_is,\n            room_name: this.room_name\n          };\n        } else {\n          send_data = {\n            user_key: this.my_key,\n            card_list: this.test_ingredient_list,\n            caretaker_used: false,\n            board_order: this.board_order,\n            cube_order: this.board_cube_order,\n            board_is: board_is,\n            room_name: this.room_name\n          };\n        } //console.log(send_data);\n\n\n        socket.emit(\"test_ingredient_confirm\", send_data); // 선택한 카드 test_border 지우기\n\n        let num = 0;\n\n        for (let i = 0; i < 2; i++) {\n          switch (this.test_ingredient_list[i]) {\n            case 'card_1':\n              num = this.$refs.test_card_1[0].className.indexOf('test_border');\n\n              if (num > 0) {\n                this.$refs.test_card_1[0].className = this.$refs.test_card_1[0].className.substring(0, num - 1);\n              }\n\n              break;\n\n            case 'card_2':\n              num = this.$refs.test_card_2[0].className.indexOf('test_border');\n\n              if (num > 0) {\n                this.$refs.test_card_2[0].className = this.$refs.test_card_2[0].className.substring(0, num - 1);\n              }\n\n              break;\n\n            case 'card_3':\n              num = this.$refs.test_card_3[0].className.indexOf('test_border');\n\n              if (num > 0) {\n                this.$refs.test_card_3[0].className = this.$refs.test_card_3[0].className.substring(0, num - 1);\n              }\n\n              break;\n\n            case 'card_4':\n              num = this.$refs.test_card_4[0].className.indexOf('test_border');\n\n              if (num > 0) {\n                this.$refs.test_card_4[0].className = this.$refs.test_card_4[0].className.substring(0, num - 1);\n              }\n\n              break;\n\n            case 'card_5':\n              num = this.$refs.test_card_5[0].className.indexOf('test_border');\n\n              if (num > 0) {\n                this.$refs.test_card_5[0].className = this.$refs.test_card_5[0].className.substring(0, num - 1);\n              }\n\n              break;\n\n            case 'card_6':\n              num = this.$refs.test_card_6[0].className.indexOf('test_border');\n\n              if (num > 0) {\n                this.$refs.test_card_6[0].className = this.$refs.test_card_6[0].className.substring(0, num - 1);\n              }\n\n              break;\n\n            case 'card_7':\n              num = this.$refs.test_card_7[0].className.indexOf('test_border');\n\n              if (num > 0) {\n                this.$refs.test_card_7[0].className = this.$refs.test_card_7[0].className.substring(0, num - 1);\n              }\n\n              break;\n\n            case 'card_8':\n              num = this.$refs.test_card_8[0].className.indexOf('test_border');\n\n              if (num > 0) {\n                this.$refs.test_card_8[0].className = this.$refs.test_card_8[0].className.substring(0, num - 1);\n              }\n\n              break;\n          }\n        }\n\n        this.test_ingredient_list = [];\n      }\n    },\n    open_result_modal_close: function () {\n      this.open_result_modal = false;\n    },\n    // 용병에게 물약 판매 전 코인 제시\n    select_adv_dis_coin: function (n) {\n      // 선택된 다른 코인은 표기 해제\n      let num = 0;\n\n      if (this.before_adv_discount_select_num > 0) {\n        switch (this.before_adv_discount_select_num) {\n          case '0':\n            num = this.$refs.ad_0_ico[0].className.indexOf('selected');\n\n            if (num > 0) {\n              this.$refs.ad_0_ico[0].className = this.$refs.ad_0_ico[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case '1':\n            num = this.$refs.ad_1_ico[0].className.indexOf('selected');\n\n            if (num > 0) {\n              this.$refs.ad_1_ico[0].className = this.$refs.ad_1_ico[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case '2':\n            num = this.$refs.ad_2_ico[0].className.indexOf('selected');\n\n            if (num > 0) {\n              this.$refs.ad_2_ico[0].className = this.$refs.ad_2_ico[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case '3':\n            num = this.$refs.ad_3_ico[0].className.indexOf('selected');\n\n            if (num > 0) {\n              this.$refs.ad_3_ico[0].className = this.$refs.ad_3_ico[0].className.substring(0, num - 1);\n            }\n\n            break;\n        }\n      } // 선택한 코인 표기\n\n\n      let ref_str = '';\n\n      switch (n) {\n        case '0':\n          ref_str = this.$refs.ad_0_ico;\n          break;\n\n        case '1':\n          ref_str = this.$refs.ad_1_ico;\n          break;\n\n        case '2':\n          ref_str = this.$refs.ad_2_ico;\n          break;\n\n        case '3':\n          ref_str = this.$refs.ad_3_ico;\n          break;\n      }\n\n      ref_str[0].className += \" selected\";\n      this.before_adv_discount_select_num = n;\n    },\n    // 용병에게 할인 카드 제시 결정 \n    adv_dis_confirm: function () {\n      // 보낼 데이터\n      // 유저키 , 유저색\n      // 내가 선택한 할인 제시 코인 번호 -> 유저데이터의 제시카드 false로 변경 -> 겜당 1회밖에 못쓰기 때문\n      if (this.before_adv_discount_select_num < 0) {\n        alert(\"제시카드가 선택되지 않았습니다!\\n제시카드를 선택해야합니다.\");\n        return;\n      }\n\n      let send_data = {\n        user_key: this.my_key,\n        color: this.my_color,\n        dis_coin_num: this.before_adv_discount_select_num,\n        room_name: this.room_name\n      };\n      socket.emit(\"adv_dis_confirm\", send_data); // 할인카드를 제시했으므로 변수 변경\n\n      this.im_end_discount = true;\n    },\n    // 용병에게 팔 물약의 값 선택하기\n    sell_potion_set_price: function (n) {\n      this.my_selling_price = n;\n    },\n    // 용병에게 팔 금액 홀드하기\n    decision_sell_potion_price: function () {\n      //내 차례가 아니면 진행 불가\n      if (this.my_key != this.discount_coin_list[this.selling_turn].user_key) {\n        alert(\"내 차례가 아니면 확정할 수 없습니다\\n 조금 더 기다려주세요\");\n        return;\n      }\n\n      let send_data = {\n        user_key: this.my_key,\n        sell_price: this.my_selling_price,\n        room_name: this.room_name\n      };\n      this.im_end_discount = false;\n      this.is_end_discount = false;\n      socket.emit(\"sell_price_confirm\", send_data);\n    },\n    // 용병에게 팔 물약 고르기\n    select_sell_potion_kind: function (kind) {\n      this.what_kind_sell_potion = kind;\n    },\n    // 물약 조제하기 :: \n    make_potion_preparation: function (data) {\n      // test_ingredient_list 의 2가지 재료를 사용 --> 서버에서 재료 제거\n      // what_kind_sell_potion -> 보내서 정답과 비교(red_1,0/ green_1/0, blue_1/0)\n      // user_key , \n      let send_data = {\n        user_key: this.my_key,\n        user_color: this.my_color,\n        card_list: data,\n        what_kind_sell_potion: this.what_kind_sell_potion,\n        selling_turn: this.selling_turn,\n        room_name: this.room_name\n      };\n      this.what_kind_sell_potion = '';\n      socket.emit(\"sell_to_adv_potion\", send_data);\n    },\n    // 용병에게 물약을 판매하는 변수에 값 넣기\n    hold_before_adv_discount_num: function (data) {\n      this.before_adv_discount_select_num = data;\n    },\n    // 논문 발표에서 원소를 선택할 함수.\n    theory_element_select: function (n) {\n      // 이미 선택된 다른 것이 있다면 해제하고 새로 고른 것을 선택해야함\n      let num = 0;\n\n      if (this.before_theory_ele_select_num > 0) {\n        switch (this.before_theory_ele_select_num) {\n          case 1:\n            num = this.$refs.ele_1[0].className.indexOf('selected');\n\n            if (num > 0) {\n              this.$refs.ele_1[0].className = this.$refs.ele_1[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case 2:\n            num = this.$refs.ele_2[0].className.indexOf('selected');\n\n            if (num > 0) {\n              this.$refs.ele_2[0].className = this.$refs.ele_2[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case 3:\n            num = this.$refs.ele_3[0].className.indexOf('selected');\n\n            if (num > 0) {\n              this.$refs.ele_3[0].className = this.$refs.ele_3[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case 4:\n            num = this.$refs.ele_4[0].className.indexOf('selected');\n\n            if (num > 0) {\n              this.$refs.ele_4[0].className = this.$refs.ele_4[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case 5:\n            num = this.$refs.ele_5[0].className.indexOf('selected');\n\n            if (num > 0) {\n              this.$refs.ele_5[0].className = this.$refs.ele_5[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case 6:\n            num = this.$refs.ele_6[0].className.indexOf('selected');\n\n            if (num > 0) {\n              this.$refs.ele_6[0].className = this.$refs.ele_6[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case 7:\n            num = this.$refs.ele_7[0].className.indexOf('selected');\n\n            if (num > 0) {\n              this.$refs.ele_7[0].className = this.$refs.ele_7[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case 8:\n            num = this.$refs.ele_8[0].className.indexOf('selected');\n\n            if (num > 0) {\n              this.$refs.ele_8[0].className = this.$refs.ele_8[0].className.substring(0, num - 1);\n            }\n\n            break;\n        }\n      } // 현재 선택된 값을 수정\n\n\n      let ref_str = '';\n\n      switch (n) {\n        case 1:\n          ref_str = this.$refs.ele_1;\n          break;\n\n        case 2:\n          ref_str = this.$refs.ele_2;\n          break;\n\n        case 3:\n          ref_str = this.$refs.ele_3;\n          break;\n\n        case 4:\n          ref_str = this.$refs.ele_4;\n          break;\n\n        case 5:\n          ref_str = this.$refs.ele_5;\n          break;\n\n        case 6:\n          ref_str = this.$refs.ele_6;\n          break;\n\n        case 7:\n          ref_str = this.$refs.ele_7;\n          break;\n\n        case 8:\n          ref_str = this.$refs.ele_8;\n          break;\n      } // 현재 변수 저장\n\n\n      this.before_theory_ele_select_num = n;\n      ref_str[0].className += \" selected\";\n    },\n    //논문 발표에서 고를 인자를 선택하는 함수\n    theory_stamp_select: function (n) {\n      // 이미 선택된 것이 있다면 해제하고 새로 고른 것을 선택해야 함\n      // 나의 색에 따라 나와야하는 stamp의 모양이 달라야함...!\n      let num = 0;\n\n      if (this.before_theory_stm_select_num > 0) {\n        switch (this.before_theory_stm_select_num) {\n          case 1:\n            num = this.$refs.stm_1[0].className.indexOf('selected');\n\n            if (num > 0) {\n              this.$refs.stm_1[0].className = this.$refs.stm_1[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case 2:\n            num = this.$refs.stm_2[0].className.indexOf('selected');\n\n            if (num > 0) {\n              this.$refs.stm_2[0].className = this.$refs.stm_2[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case 3:\n            num = this.$refs.stm_3[0].className.indexOf('selected');\n\n            if (num > 0) {\n              this.$refs.stm_3[0].className = this.$refs.stm_3[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case 4:\n            num = this.$refs.stm_4[0].className.indexOf('selected');\n\n            if (num > 0) {\n              this.$refs.stm_4[0].className = this.$refs.stm_4[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case 5:\n            num = this.$refs.stm_5[0].className.indexOf('selected');\n\n            if (num > 0) {\n              this.$refs.stm_5[0].className = this.$refs.stm_5[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case 6:\n            num = this.$refs.stm_6[0].className.indexOf('selected');\n\n            if (num > 0) {\n              this.$refs.stm_6[0].className = this.$refs.stm_6[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case 7:\n            num = this.$refs.stm_7[0].className.indexOf('selected');\n\n            if (num > 0) {\n              this.$refs.stm_7[0].className = this.$refs.stm_7[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case 8:\n            num = this.$refs.stm_8[0].className.indexOf('selected');\n\n            if (num > 0) {\n              this.$refs.stm_8[0].className = this.$refs.stm_8[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case 9:\n            num = this.$refs.stm_9[0].className.indexOf('selected');\n\n            if (num > 0) {\n              this.$refs.stm_9[0].className = this.$refs.stm_9[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case 10:\n            num = this.$refs.stm_10[0].className.indexOf('selected');\n\n            if (num > 0) {\n              this.$refs.stm_10[0].className = this.$refs.stm_10[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case 11:\n            num = this.$refs.stm_11[0].className.indexOf('selected');\n\n            if (num > 0) {\n              this.$refs.stm_11[0].className = this.$refs.stm_11[0].className.substring(0, num - 1);\n            }\n\n            break;\n        }\n      } // 현재 선택된 값을 수정\n\n\n      let ref_str = '';\n\n      switch (n) {\n        case 1:\n          ref_str = this.$refs.stm_1;\n          break;\n\n        case 2:\n          ref_str = this.$refs.stm_2;\n          break;\n\n        case 3:\n          ref_str = this.$refs.stm_3;\n          break;\n\n        case 4:\n          ref_str = this.$refs.stm_4;\n          break;\n\n        case 5:\n          ref_str = this.$refs.stm_5;\n          break;\n\n        case 6:\n          ref_str = this.$refs.stm_6;\n          break;\n\n        case 7:\n          ref_str = this.$refs.stm_7;\n          break;\n\n        case 8:\n          ref_str = this.$refs.stm_8;\n          break;\n\n        case 9:\n          ref_str = this.$refs.stm_9;\n          break;\n\n        case 10:\n          ref_str = this.$refs.stm_10;\n          break;\n\n        case 11:\n          ref_str = this.$refs.stm_11;\n          break;\n      } // 현재 변수 저장\n\n\n      this.before_theory_stm_select_num = n;\n      ref_str[0].className += \" selected\";\n    },\n    // 논문 반박/발표 모달에서 발표/반박할 재료를 고르는 함수\n    theory_presentation: function (n) {\n      this.now_select_ingre = n;\n      this.ingre_presentation_modal_onoff = true;\n    },\n    // 발표하기 버튼으로 실행될 함수\n    theory_confirm: function () {\n      let num = 0; //발표 \n\n      if (this.board_6_selected == true) {\n        // 넘겨야 하는 정보\n        // 재료번호(ingre), 원소번호(ele), 스탬프 번호(stm), 유저키, 유저색 ,큐브순서, 보드순서\n        let send_data = {\n          element: this.before_theory_ele_select_num,\n          ingre: this.now_select_ingre,\n          user_key: this.my_key,\n          user_color: this.my_color,\n          stamp: this.before_theory_stm_select_num,\n          cube_order: this.board_cube_order,\n          board_order: this.board_order,\n          room_name: this.room_name\n        };\n        socket.emit(\"presentation_theory\", send_data); // 선택된 재료의 selected 초기화\n\n        switch (this.before_theory_ele_select_num) {\n          case 1:\n            num = this.$refs.ele_1[0].className.indexOf('selected');\n\n            if (num > 0) {\n              this.$refs.ele_1[0].className = this.$refs.ele_1[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case 2:\n            num = this.$refs.ele_2[0].className.indexOf('selected');\n\n            if (num > 0) {\n              this.$refs.ele_2[0].className = this.$refs.ele_2[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case 3:\n            num = this.$refs.ele_3[0].className.indexOf('selected');\n\n            if (num > 0) {\n              this.$refs.ele_3[0].className = this.$refs.ele_3[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case 4:\n            num = this.$refs.ele_4[0].className.indexOf('selected');\n\n            if (num > 0) {\n              this.$refs.ele_4[0].className = this.$refs.ele_4[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case 5:\n            num = this.$refs.ele_5[0].className.indexOf('selected');\n\n            if (num > 0) {\n              this.$refs.ele_5[0].className = this.$refs.ele_5[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case 6:\n            num = this.$refs.ele_6[0].className.indexOf('selected');\n\n            if (num > 0) {\n              this.$refs.ele_6[0].className = this.$refs.ele_6[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case 7:\n            num = this.$refs.ele_7[0].className.indexOf('selected');\n\n            if (num > 0) {\n              this.$refs.ele_7[0].className = this.$refs.ele_7[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case 8:\n            num = this.$refs.ele_8[0].className.indexOf('selected');\n\n            if (num > 0) {\n              this.$refs.ele_8[0].className = this.$refs.ele_8[0].className.substring(0, num - 1);\n            }\n\n            break;\n        }\n\n        switch (this.before_theory_stm_select_num) {\n          case 1:\n            num = this.$refs.stm_1[0].className.indexOf('selected');\n\n            if (num > 0) {\n              this.$refs.stm_1[0].className = this.$refs.stm_1[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case 2:\n            num = this.$refs.stm_2[0].className.indexOf('selected');\n\n            if (num > 0) {\n              this.$refs.stm_2[0].className = this.$refs.stm_2[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case 3:\n            num = this.$refs.stm_3[0].className.indexOf('selected');\n\n            if (num > 0) {\n              this.$refs.stm_3[0].className = this.$refs.stm_3[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case 4:\n            num = this.$refs.stm_4[0].className.indexOf('selected');\n\n            if (num > 0) {\n              this.$refs.stm_4[0].className = this.$refs.stm_4[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case 5:\n            num = this.$refs.stm_5[0].className.indexOf('selected');\n\n            if (num > 0) {\n              this.$refs.stm_5[0].className = this.$refs.stm_5[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case 6:\n            num = this.$refs.stm_6[0].className.indexOf('selected');\n\n            if (num > 0) {\n              this.$refs.stm_6[0].className = this.$refs.stm_6[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case 7:\n            num = this.$refs.stm_7[0].className.indexOf('selected');\n\n            if (num > 0) {\n              this.$refs.stm_7[0].className = this.$refs.stm_7[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case 8:\n            num = this.$refs.stm_8[0].className.indexOf('selected');\n\n            if (num > 0) {\n              this.$refs.stm_8[0].className = this.$refs.stm_8[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case 9:\n            num = this.$refs.stm_9[0].className.indexOf('selected');\n\n            if (num > 0) {\n              this.$refs.stm_9[0].className = this.$refs.stm_9[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case 10:\n            num = this.$refs.stm_10[0].className.indexOf('selected');\n\n            if (num > 0) {\n              this.$refs.stm_10[0].className = this.$refs.stm_10[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case 11:\n            num = this.$refs.stm_11[0].className.indexOf('selected');\n\n            if (num > 0) {\n              this.$refs.stm_11[0].className = this.$refs.stm_11[0].className.substring(0, num - 1);\n            }\n\n            break;\n        } // 선택된 재료 초기화\n\n\n        this.before_theory_ele_select_num = 0;\n        this.before_theory_stm_select_num = 0;\n      } //반박\n      else if (this.board_5_selected == true) {\n        // 넘겨야 하는 정보\n        // 재료번호(ingre), 틀리다고 주장할 원소 색(ori), 유저키(user_key), 큐브순서, 보드순서\n        let send_data = {\n          ingre: this.now_select_ingre,\n          ori: this.before_refute_ori_select_num,\n          user_key: this.my_key,\n          cube_order: this.board_cube_order,\n          board_order: this.board_order,\n          room_name: this.room_name\n        }; //console.log(send_data);\n\n        socket.emit(\"refuting_theory_data\", send_data);\n\n        switch (this.before_refute_ori_select_num) {\n          case 1:\n            num = this.$refs.ele_core_1[0].className.indexOf('selected');\n\n            if (num > 0) {\n              this.$refs.ele_core_1[0].className = this.$refs.ele_core_1[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case 2:\n            num = this.$refs.ele_core_2[0].className.indexOf('selected');\n\n            if (num > 0) {\n              this.$refs.ele_core_2[0].className = this.$refs.ele_core_2[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case 3:\n            num = this.$refs.ele_core_3[0].className.indexOf('selected');\n\n            if (num > 0) {\n              this.$refs.ele_core_3[0].className = this.$refs.ele_core_3[0].className.substring(0, num - 1);\n            }\n\n            break;\n        } // 변수 초기화\n\n\n        this.before_refute_ori_select_num = 0;\n      } // 원소 발표/반박 모달 끄기!\n\n\n      this.ingre_presentation_modal = false;\n    },\n    //논문 반박에서 어떤 원소를 반박할 건지 선택하는 함수\n    theory_origin_select: function (n) {\n      // 이미 선택된 다른 것이 있다면 해제하고 새로 고른 것을 선택해야함\n      let num = 0;\n\n      if (this.before_refute_ori_select_num > 0) {\n        switch (this.before_refute_ori_select_num) {\n          case 1:\n            num = this.$refs.ele_core_1[0].className.indexOf('selected');\n\n            if (num > 0) {\n              this.$refs.ele_core_1[0].className = this.$refs.ele_core_1[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case 2:\n            num = this.$refs.ele_core_2[0].className.indexOf('selected');\n\n            if (num > 0) {\n              this.$refs.ele_core_2[0].className = this.$refs.ele_core_2[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case 3:\n            num = this.$refs.ele_core_3[0].className.indexOf('selected');\n\n            if (num > 0) {\n              this.$refs.ele_core_3[0].className = this.$refs.ele_core_3[0].className.substring(0, num - 1);\n            }\n\n            break;\n        }\n      } // 현재 선택된 값을 수정\n\n\n      let ref_str = '';\n\n      switch (n) {\n        case 1:\n          ref_str = this.$refs.ele_core_1;\n          break;\n\n        case 2:\n          ref_str = this.$refs.ele_core_2;\n          break;\n\n        case 3:\n          ref_str = this.$refs.ele_core_3;\n          break;\n      } // 현재 변수 저장\n\n\n      this.before_refute_ori_select_num = n;\n      ref_str[0].className += \" selected\";\n    },\n    check_refute_info: function () {\n      //서버에 체크 데이터 전송\n      socket.emit(\"check_refute_info\", this.reciving_data); // 변수 초기화\n\n      this.reciving_data = ''; // 반박 성공확인창 끄기\n\n      this.success_refute_modal_onoff = false;\n    },\n    click_exhibition_potion: function (potion_num) {\n      if (this.my_turn != true) {\n        alert(\"내 차례에 전시할 수 있습니다!\\n차례를 기다려주세요!\");\n        return;\n      } // 발표할 원소번호를 저장하고\n\n\n      this.exhibition_potion_num = potion_num; // 발표할 모달을 켜기!\n\n      this.exhibition_check_modal_onoff = true; //console.log(this.my_data);\n    },\n    // 물약 발표회에서 발표할 물약의 재료 2가지를 선택할 함수\n    // name :: card_1~8\n    exhibit_select_ingre: function (name) {\n      // 이미 2가지가 선택되어 있으면 가장 먼저 들어온 1개를 제거하고 마지막에 들어온 한개를 진행\n      if (this.test_ingredient_list.length == 2) {\n        // 먼저 들어온 1개를 제거\n        let before_name = this.test_ingredient_list.shift();\n        let num = 0;\n\n        switch (before_name) {\n          case 'card_1':\n            num = this.$refs.exhibit_card_1[0].className.indexOf('test_border');\n\n            if (num > 0) {\n              this.$refs.exhibit_card_1[0].className = this.$refs.exhibit_card_1[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case 'card_2':\n            num = this.$refs.exhibit_card_2[0].className.indexOf('test_border');\n\n            if (num > 0) {\n              this.$refs.exhibit_card_2[0].className = this.$refs.exhibit_card_2[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case 'card_3':\n            num = this.$refs.exhibit_card_3[0].className.indexOf('test_border');\n\n            if (num > 0) {\n              this.$refs.exhibit_card_3[0].className = this.$refs.exhibit_card_3[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case 'card_4':\n            num = this.$refs.exhibit_card_4[0].className.indexOf('test_border');\n\n            if (num > 0) {\n              this.$refs.exhibit_card_4[0].className = this.$refs.exhibit_card_4[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case 'card_5':\n            num = this.$refs.exhibit_card_5[0].className.indexOf('test_border');\n\n            if (num > 0) {\n              this.$refs.exhibit_card_5[0].className = this.$refs.exhibit_card_5[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case 'card_6':\n            num = this.$refs.exhibit_card_6[0].className.indexOf('test_border');\n\n            if (num > 0) {\n              this.$refs.exhibit_card_6[0].className = this.$refs.exhibit_card_6[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case 'card_7':\n            num = this.$refs.exhibit_card_7[0].className.indexOf('test_border');\n\n            if (num > 0) {\n              this.$refs.exhibit_card_7[0].className = this.$refs.exhibit_card_7[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case 'card_8':\n            num = this.$refs.exhibit_card_8[0].className.indexOf('test_border');\n\n            if (num > 0) {\n              this.$refs.exhibit_card_8[0].className = this.$refs.exhibit_card_8[0].className.substring(0, num - 1);\n            }\n\n            break;\n        }\n      } // 변수에 추가\n\n\n      this.test_ingredient_list.push(name);\n      let ref_str = '';\n\n      switch (name) {\n        case 'card_1':\n          ref_str = this.$refs.exhibit_card_1;\n          break;\n\n        case 'card_2':\n          ref_str = this.$refs.exhibit_card_2;\n          break;\n\n        case 'card_3':\n          ref_str = this.$refs.exhibit_card_3;\n          break;\n\n        case 'card_4':\n          ref_str = this.$refs.exhibit_card_4;\n          break;\n\n        case 'card_5':\n          ref_str = this.$refs.exhibit_card_5;\n          break;\n\n        case 'card_6':\n          ref_str = this.$refs.exhibit_card_6;\n          break;\n\n        case 'card_7':\n          ref_str = this.$refs.exhibit_card_7;\n          break;\n\n        case 'card_8':\n          ref_str = this.$refs.exhibit_card_8;\n          break;\n      }\n\n      ref_str[0].className += \" test_border\";\n    },\n    // 물약 전시회에서 시연할 재료를 고르고 결정버튼을 눌렀을 떄 실행될 함수\n    click_exhibit_ingre: function () {\n      if (this.test_ingredient_list.length != 2) {\n        alert(\"재료카드 2장을 선택해주세요!\");\n        return;\n      }\n\n      let exhibit_potion = '';\n\n      switch (this.exhibition_potion_num) {\n        case '1':\n          exhibit_potion = 'red_1';\n          break;\n\n        case '2':\n          exhibit_potion = 'red_0';\n          break;\n\n        case '3':\n          exhibit_potion = 'green_1';\n          break;\n\n        case '4':\n          exhibit_potion = 'green_0';\n          break;\n\n        case '5':\n          exhibit_potion = 'blue_1';\n          break;\n\n        case '6':\n          exhibit_potion = 'blue_0';\n          break;\n      }\n\n      let send_data = {\n        user_key: this.my_key,\n        user_color: this.my_color,\n        room_name: this.room_name,\n        card_list: this.test_ingredient_list,\n        exhibit_potion: exhibit_potion,\n        board_order: this.board_order,\n        cube_order: this.board_cube_order\n      }; // 발표!\n\n      socket.emit(\"exhibit_ingre\", send_data);\n      let num = 0; // 초기화전 test_boarder 초기화\n\n      for (let i = 0; i < 2; i++) {\n        switch (this.test_ingredient_list[i]) {\n          case 'card_1':\n            num = this.$refs.test_card_1[0].className.indexOf('test_border');\n\n            if (num > 0) {\n              this.$refs.test_card_1[0].className = this.$refs.test_card_1[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case 'card_2':\n            num = this.$refs.test_card_2[0].className.indexOf('test_border');\n\n            if (num > 0) {\n              this.$refs.test_card_2[0].className = this.$refs.test_card_2[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case 'card_3':\n            num = this.$refs.test_card_3[0].className.indexOf('test_border');\n\n            if (num > 0) {\n              this.$refs.test_card_3[0].className = this.$refs.test_card_3[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case 'card_4':\n            num = this.$refs.test_card_4[0].className.indexOf('test_border');\n\n            if (num > 0) {\n              this.$refs.test_card_4[0].className = this.$refs.test_card_4[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case 'card_5':\n            num = this.$refs.test_card_5[0].className.indexOf('test_border');\n\n            if (num > 0) {\n              this.$refs.test_card_5[0].className = this.$refs.test_card_5[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case 'card_6':\n            num = this.$refs.test_card_6[0].className.indexOf('test_border');\n\n            if (num > 0) {\n              this.$refs.test_card_6[0].className = this.$refs.test_card_6[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case 'card_7':\n            num = this.$refs.test_card_7[0].className.indexOf('test_border');\n\n            if (num > 0) {\n              this.$refs.test_card_7[0].className = this.$refs.test_card_7[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case 'card_8':\n            num = this.$refs.test_card_8[0].className.indexOf('test_border');\n\n            if (num > 0) {\n              this.$refs.test_card_8[0].className = this.$refs.test_card_8[0].className.substring(0, num - 1);\n            }\n\n            break;\n        }\n      } // 선택한 재료카드 초기화\n\n\n      this.test_ingredient_list = []; // 발표할 원소번호 초기화\n\n      this.exhibition_potion_num = -1;\n    },\n    // 게임 종료 확인\n    game_end_confirm: function () {\n      // 종료 확인을 서버에 알림\n      let send_data = {\n        room_name: this.room_name\n      };\n      socket.emit(\"game_end_confirm\", send_data);\n      this.$router.push({\n        name: 'end_page',\n        params: {\n          game_result: JSON.stringify(this.game_end_data),\n          name: this.my_name,\n          room_name: this.room_name\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["socket","default","modal_area","personal_game_data","adventurer_selling","favor_card_use","name","components","Modal_component","Personal_game_data","Adventurer_selling","Favor_card_use","created","emit","$route","params","room_name","my_key","id","mounted","on","data","user_data","i","length","is_master","room_owner","user_name","user_key","my_data","my_name","my_color","user_color","$refs","adventurer_selling_modal","set_my_data","set_my_key","setTimeout","msg","speaker","type","textarea","show_chat","scrollTop","scrollHeight","ingredient_card_selected","console","log","card_kind","temp_used_favor_card_list","im_used","card_num","favor_card_use_check_modal","favor_modal_open","favor_card_use_key_val","favor_modal_close","random_adv_list","adventurer_card_data_change","adventurer_card_ori_data","discount_coin_list","is_end_discount","make_potion_modal_open","make_potion_modal_close","adventurer_selling_key_val","selling_end_modal","sell_potion_turn","selling_user_color","selling_success","selling_potion_kind","potion","selling_turn","final_round_order","result_table","round_cont","theory_data","exhibition_result","as","j","choice_data","push","round_setting_order","round_setting_order_counter","btn_ele","btn_before_ele","order","btn_1","btn_2","btn_3","btn_4","btn_5","btn_6","btn_7","btn_8","before_order","num","className","indexOf","str","substring","decide_order","user_cube_data","can_buy_artifacts","alert","say","reciving_data","success_refute_modal_onoff","exhibition_result_user","exhibit_result","result","exhibit_on_cube_success","get_cube_success","exhibition_result_modal","start_board","board_1_selected","board_2_selected","board_3_selected","board_4_selected","board_5_selected","board_6_selected","board_7_selected","board_8_selected","sell_ingredient_modal_onoff","test_ingredient_modal_onoff","reasoning_table_onoff","presentation_of_theories_modal","ingre_presentation_modal_onoff","board_order","sell_potion_to_adv_modal_close","my_turn","sell_potion_to_adv_modal_open","board_end_selected","last_round_modal_onoff","caretaker_used","using_user_num","my_trun","board_cube_order","cube","is_select","exhibition_check_modal_onoff","my_selling_price","before_adv_discount_select_num","user_num","open_result_user","open_result","test_result","open_result_modal","game_end_data","game_end_alert_modal","total_dicount_adventruer","message","decide_order_modal","round_order_check","get_discount_coin","im_end_discount","what_kind_sell_potion","test_ingredient_list","my_reasoning_table_modal","icon_data","require","reasoning_data","black_stamp_data","blue_stamp_data","red_stamp_data","white_stamp_data","ele_core_data","picked","before_theory_ele_select_num","before_theory_stm_select_num","now_select_ingre","before_refute_ori_select_num","exhibition_potion_num","methods","use_chat","draw_ingredient_card","cnt","round_ready","round_order_setting_end","send_data","round_order_setting_close","decide_order_modal_open","decide_order_setting_end","is_select_order","select_order_btn","val","round_order_data","click_order_btn","n","u","is_ready","is_ingame","board_num","button_order_num","click_reasoning_ele","index","key","x","y","change_val","reasoning_table_open","open_reasoning_table_modal","index_val","innerText","key_val","reset_val","favor_card_modal_on","favor_card_use_check","card_name","favor_card","select_board_num","ingre_list","pick_ingredient","pick_item","cube_order","ingredient_select_arr_order","click_sell_ingredient_check","user_ingame_data","ingredient","card_1","sell_card_1","card_2","sell_card_2","card_3","sell_card_3","card_4","sell_card_4","card_5","sell_card_5","card_6","sell_card_6","card_7","sell_card_7","card_8","sell_card_8","ref_str","click_sell_ingredient","sell_item_num","end_selling_ingredient","buy_artifact_confirm","rank","arti_num","click_test_ingredient_check","same_name","before_name","includes","same_num","splice","shift","test_card_1","test_card_2","test_card_3","test_card_4","test_card_5","test_card_6","test_card_7","test_card_8","click_test_ingredient","board_is","card_list","open_result_modal_close","select_adv_dis_coin","ad_0_ico","ad_1_ico","ad_2_ico","ad_3_ico","adv_dis_confirm","color","dis_coin_num","sell_potion_set_price","decision_sell_potion_price","sell_price","select_sell_potion_kind","kind","make_potion_preparation","hold_before_adv_discount_num","theory_element_select","ele_1","ele_2","ele_3","ele_4","ele_5","ele_6","ele_7","ele_8","theory_stamp_select","stm_1","stm_2","stm_3","stm_4","stm_5","stm_6","stm_7","stm_8","stm_9","stm_10","stm_11","theory_presentation","theory_confirm","element","ingre","stamp","ori","ele_core_1","ele_core_2","ele_core_3","ingre_presentation_modal","theory_origin_select","check_refute_info","click_exhibition_potion","potion_num","exhibit_select_ingre","exhibit_card_1","exhibit_card_2","exhibit_card_3","exhibit_card_4","exhibit_card_5","exhibit_card_6","exhibit_card_7","exhibit_card_8","click_exhibit_ingre","exhibit_potion","game_end_confirm","$router","game_result","JSON","stringify"],"sources":["E:/GitHub/personal_tranning/alchemists_vue/alchemists/src/assets/script/game_board.js"],"sourcesContent":["import { socket } from '@/components/room_list.vue'\r\nimport { default as modal_area } from '@/components/modal_area.vue'\r\nimport { default as personal_game_data } from '@/components/personal_game_data.vue' \r\nimport { default as adventurer_selling } from '@/components/adventurer_selling.vue'\r\nimport { default as favor_card_use } from '@/components/favor_card_use.vue'\r\n\r\nexport default {\r\n    name : 'game_board',\r\n    components : {\r\n        Modal_component : modal_area,\r\n        Personal_game_data : personal_game_data,\r\n        Adventurer_selling : adventurer_selling,\r\n        Favor_card_use : favor_card_use,\r\n    },\r\n    created() {\r\n        // 게임 초기화 & 시작 트리거\r\n        socket.emit(\"created_data_announce\", this.$route.params.room_name);\r\n        this.my_key = socket.id;\r\n    },\r\n    mounted () {\r\n        //최초 분배된 기본 재료 수령\r\n        socket.on(\"get_ingame_data\", (data) => {\r\n            this.user_data = data;\r\n            for(let i = 0; i < data.length; i++){\r\n                if( data[i].is_master === 'true' ) {\r\n                    this.room_owner = data[i].user_name;\r\n                }\r\n                if( data[i].user_key == this.my_key ){\r\n                    this.my_data = data[i];\r\n                    this.my_name = data[i].user_name;\r\n                    this.my_color = data[i].user_color;\r\n                }\r\n            }\r\n\r\n            // adventurer_selling_modal에 정보 전송\r\n            this.$refs.adventurer_selling_modal.set_my_data(this.my_data);\r\n            this.$refs.adventurer_selling_modal.set_my_key(this.my_key);\r\n            setTimeout(()=>{\r\n                let msg = {\r\n                    speaker : this.my_name,\r\n                    msg     : \"방에 입장하였습니다.\",\r\n                    type    : 'announce',\r\n                    room_name : this.room_name,\r\n                }\r\n                socket.emit(\"chat\", msg);    \r\n            }, 500);\r\n            \r\n        });\r\n        \r\n        //채팅 on\r\n        socket.on(\"chat\", (data) => {\r\n            // console.log(\"서버에서 받아온 데이터\");\r\n            // console.log(data);\r\n            // console.log(\"받아오기 끝\");\r\n            switch ( data.type ) {\r\n                case \"announce\" :\r\n                    this.textarea += data.speaker + \" 이(가) \" + data.msg + \"\\n\";\r\n                    break;\r\n                case \"normal\" :\r\n                    this.textarea += data.speaker + \" : \" + data.msg + \"\\n\";\r\n                    break;\r\n            }\r\n            // 스크롤을 자동으로 내림\r\n            this.$refs.show_chat.scrollTop = this.$refs.show_chat.scrollHeight;\r\n        });\r\n\r\n        // 선택할 수 있는 카드 공개\r\n        socket.on(\"ingredient_select_card_open\", (data) => {\r\n            //console.log(data);\r\n            this.ingredient_card_selected = data;\r\n        });\r\n\r\n        // 호의 카드 사용 함수\r\n        socket.on(\"show_favor_modal\", (data) => {\r\n            // 받는 정보\r\n            // data :: \r\n            // card_kind : 어떤 호의카드를 사용했는지\r\n            // temp_used_favor_card_list : 누가 해당 호의카드를 사용했는지\r\n            console.log(\"show_favor_modal\");\r\n            console.log(data);\r\n            this.card_kind = data.card_kind;\r\n            this.temp_used_favor_card_list = data.temp_used_favor_card_list;\r\n\r\n            // 내가 호의카드 썻는지 확인하기\r\n            let im_used = false;\r\n            // 호의카드 번호\r\n            let card_num = 0;\r\n            switch(this.card_kind) {\r\n                case 'assistent':\r\n                    card_num = 1;\r\n                    break;\r\n                case 'bar_owner':\r\n                    card_num = 2;\r\n                    break;\r\n                case 'big_man':\r\n                    card_num = 3;\r\n                    break;\r\n                case 'caretaker':\r\n                    card_num = 4;\r\n                    break;\r\n                case 'herbalist':\r\n                    card_num = 5;\r\n                    break;\r\n                case 'merchant':\r\n                    card_num = 6;\r\n                    break;\r\n                case 'shopkeeper':\r\n                    card_num = 7;\r\n                    break;\r\n                case 'wise_man':\r\n                    card_num = 8;\r\n                    break;\r\n            }\r\n\r\n            for( let i = 0; i < 4; i++ ){\r\n                if( this.my_key == data.temp_used_favor_card_list[card_num][i].user_key ) {\r\n                    im_used = true;\r\n                    break;\r\n                }\r\n            }\r\n            if( im_used == true ) {\r\n                // 모달 on\r\n                this.$refs.favor_card_use_check_modal.favor_modal_open(this.card_kind);\r\n            }\r\n        });\r\n\r\n        // 호의 카드 사용 성공 알림\r\n        socket.on(\"use_favor_card_alert\", () => {\r\n            this.favor_card_use_key_val += 1;\r\n            // 모달 off\r\n            this.$refs.favor_card_use_check_modal.favor_modal_close();\r\n        });\r\n\r\n        // 이번 게임에서 사용할 용병 리스트\r\n        socket.on(\"adv_list_setting\", (data) => {\r\n            this.random_adv_list = data;\r\n            //console.log(this.random_adv_list);\r\n        });\r\n        // 용병에게 판매 가능한 물약 리스트\r\n        socket.on(\"adv_sell_potion_list\", (data) => {\r\n            this.$refs.adventurer_selling_modal.adventurer_card_data_change(data);\r\n            // console.log(this.data);\r\n        })\r\n        socket.on(\"adv_sell_potion_ori_list\", (data) => {\r\n            this.adventurer_card_ori_data = data;\r\n            console.log(data);\r\n        });\r\n\r\n        // 용병에게 할인카드 제시가 끝났음을 받는 함수\r\n        socket.on(\"end_adv_dis_step\", (data) => {\r\n            this.discount_coin_list = data;\r\n            this.is_end_discount = true;\r\n            // console.log(this.discount_coin_list);\r\n        });\r\n\r\n        // 용병에게 판매할 물약의 값을 결정되었음을 받는 함수\r\n        socket.on(\"selling_start\", (data) => {\r\n            // 물약 생성 모달 on \r\n            this.$refs.adventurer_selling_modal.make_potion_modal_open(data);\r\n        });\r\n\r\n        // 용병에게 물약 판매가 끝났음을 알리는 함수\r\n        socket.on(\"selling_potion_end\", (data) => {\r\n            // 물약 판매 모달 닫기\r\n            //console.log(\"selling_potion_end\");\r\n            //console.log(data);\r\n            this.$refs.adventurer_selling_modal.make_potion_modal_close();\r\n            this.adventurer_selling_key_val += 1;\r\n            this.selling_end_modal = true;\r\n            if( data.user_key == this.my_key ){\r\n                this.sell_potion_turn = false;\r\n            }\r\n            this.selling_user_color = data.user_color;\r\n            this.selling_success = data.selling_success;\r\n            this.selling_potion_kind = data.potion;\r\n\r\n            // 3초 지연 후 자동 모달 끄기\r\n            setTimeout(() => {\r\n                this.selling_end_modal = false;\r\n                // 정보 초기화\r\n                this.selling_success = false;\r\n                this.selling_potion_kind = '';\r\n            }, 3000);\r\n        });\r\n\r\n        // 용병에게 물약판매 순서를 받는 함수\r\n        socket.on(\"change_selling_turn\", (data) => {\r\n            this.selling_turn = data;\r\n        });\r\n\r\n        // 변경된 게임 데이터를 받는 함수\r\n        socket.on(\"change_user_data\", (data) => {\r\n            this.user_data = data;\r\n            this.my_data = '';\r\n            for( let i = 0; i < data.length; i++){\r\n                if( data[i].user_key == this.my_key ){\r\n                    this.my_data = data[i];\r\n                    break;\r\n                }\r\n            }\r\n            // adventurer_selling에 my_data 등록\r\n            this.$refs.adventurer_selling_modal.set_my_data(this.my_data);\r\n            //console.log(this.user_data);\r\n        });\r\n        \r\n        // 변경된 final_round_order를 데이터를 받는 함수 \r\n        socket.on(\"change_final_round_order\", (data) => {\r\n            this.final_round_order = data;\r\n            //console.log(this.final_round_order);\r\n        });\r\n\r\n        // 변경된 result_table : 추리 테이블 데이터를 받는 함수\r\n        socket.on(\"change_result_table\", (data) => {\r\n            this.result_table = data;\r\n            //console.log(this.result_table);\r\n        });\r\n\r\n        // 몇 라운드 인지 받기\r\n        socket.on(\"change_round\", (data) => {\r\n            this.round_cont = data;\r\n            // console.log(this.round_cont);\r\n        });\r\n\r\n        // 논문 관련 데이터 받기\r\n        socket.on(\"change_theory_data\", (data) => {\r\n            this.theory_data = data;\r\n            // console.log(this.theory_data);\r\n        });\r\n\r\n        // 물약 전시회 데이터 받기\r\n        socket.on(\"change_exhibition_data\", (data) => {\r\n            this.exhibition_result = data;\r\n            // console.log(this.exhibition_result);\r\n        });\r\n\r\n        // 게임 순서를 정하는 순서의 정보 받는 함수\r\n        socket.on(\"round_order_setting_before\" , (data) => {\r\n            //console.log(data);\r\n            let as = [];\r\n\r\n            for( let i = 0; i < data.length; i++) {\r\n                for( let j = 0; j < this.user_data.length; j++){\r\n                    if( data[i] == this.user_data[j].user_key ){\r\n\r\n                        let choice_data = {\r\n                            user_key  : this.user_data[j].user_key,\r\n                            user_name : this.user_data[j].user_name,\r\n                        }\r\n                        \r\n                        as.push(choice_data);\r\n                        \r\n                        choice_data = '';\r\n                    }\r\n                }\r\n            }\r\n            this.round_setting_order = as;\r\n            //console.log(this.round_setting_order[0].user_key);\r\n            //console.log(this.round_order[this.round_order_selecter].user_key);\r\n        });\r\n\r\n        // 게임 순서를 정하는 순서를 정하는 변수를 받는 함수 \r\n        socket.on(\"decide_round_setting_order_counter_send\", (data) => {\r\n            this.round_setting_order_counter = data;\r\n        });\r\n\r\n        // 라운드 진행 순서를 고른 정보를 받는 함수\r\n        socket.on(\"select_round_order_recive\", (data) => {\r\n            let btn_ele = '';\r\n            let btn_before_ele = '';\r\n            \r\n            for( let i = 0; i < data.length; i++){\r\n                 // 순서에 맞는 element를 선택\r\n                switch(data[i].order) {\r\n                    case 1 : \r\n                        btn_ele = this.$refs.btn_1;\r\n                        break;\r\n                    case 2 :\r\n                        btn_ele = this.$refs.btn_2;\r\n                        break;\r\n                    case 3 :\r\n                        btn_ele = this.$refs.btn_3;\r\n                        break;\r\n                    case 4 : \r\n                        btn_ele = this.$refs.btn_4;\r\n                        break;\r\n                    case 5 :\r\n                        btn_ele = this.$refs.btn_5;\r\n                        break;\r\n                    case 6 :\r\n                        btn_ele = this.$refs.btn_6;\r\n                        break;\r\n                    case 7 :\r\n                        btn_ele = this.$refs.btn_7;\r\n                        break;\r\n                    case 8 :\r\n                        btn_ele = this.$refs.btn_8;\r\n                        break;\r\n                }\r\n                switch( data[i].before_order ){\r\n                    case 1 : \r\n                        btn_before_ele = this.$refs.btn_1;\r\n                        break;\r\n                    case 2 :\r\n                        btn_before_ele = this.$refs.btn_2;\r\n                        break;\r\n                    case 3 :\r\n                        btn_before_ele = this.$refs.btn_3;\r\n                        break;\r\n                    case 4 : \r\n                        btn_before_ele = this.$refs.btn_4;\r\n                        break;\r\n                    case 5 :\r\n                        btn_before_ele = this.$refs.btn_5;\r\n                        break;\r\n                    case 6 :\r\n                        btn_before_ele = this.$refs.btn_6;\r\n                        break;\r\n                    case 7 :\r\n                        btn_before_ele = this.$refs.btn_7;\r\n                        break;\r\n                    case 8 :\r\n                        btn_before_ele = this.$refs.btn_8;\r\n                        break;\r\n                }\r\n                //console.log(btn_ele[0].className);\r\n                // 기존의 것이 있으면 기존 색 class 제거\r\n                if( btn_before_ele != '' ){\r\n\r\n                    let num = btn_before_ele[0].className.indexOf(data[i].user_color);\r\n                    // 문구 검색 결과가 있으면 제거 \r\n                    if ( num > 0 ){\r\n                        let str = btn_before_ele[0].className.substring(0, num-1);\r\n                        btn_before_ele[0].className = str;\r\n                    }\r\n                    // 결과가 음수면 없는 것이므로 넘김\r\n                }\r\n\r\n                // 기존의 것을 없앤 완전 초기화 상태이므로  기존의 것과 중복 되더라도 그냥 진행 가능\r\n                // 기존 : 5 신규 5 일 경우 위에서 이미 검사하지 않고 지웠으므로\r\n                // 신규 5를 다시 칠함\r\n                // 두 함수에서 모두 if로 구분하여 ifif중복하기 귀찮아서 그냥 무조건 지우고 무조건 색칠\r\n                if( btn_ele != '' ){\r\n                    btn_ele[0].className += ' ' + data[i].user_color;\r\n                    //console.log(btn_ele[0].className);\r\n                }\r\n                // 변수 초기화\r\n                btn_before_ele = '';\r\n                btn_ele = '';\r\n\r\n            }\r\n            // 내부 변수에도 값을 적용\r\n            this.final_round_order = data;\r\n            //console.log(data);\r\n        });\r\n\r\n        // 라운드 진행 순서를 고르는 것이 끝났다는 알림을 받는 함수 \r\n        socket.on(\"decide_round_setting_order_end\", (data) => {\r\n            this.decide_order = !this.decide_order;\r\n            // final_round_order을 고른 order에 맞게 재정렬한 값으로 재전송 받음\r\n            this.final_round_order = data;\r\n        });\r\n        // 현재 라운드의 큐브 순서 받기\r\n        socket.on(\"change_user_cube_data\", (data) => {\r\n            this.user_cube_data = data;\r\n            //console.log(this.user_cube_data);\r\n        });\r\n\r\n        // 판매하는 아티펙트 정보를 받는 함수\r\n        socket.on(\"can_buy_artifacts_list\", (data) => {\r\n            this.can_buy_artifacts = data;\r\n            //console.log(this.can_buy_artifacts);\r\n        });\r\n\r\n        // 큐브 선택시 사용 가능 큐브가 없을 때\r\n        socket.on(\"cant_use_cube\", (data) => {\r\n            alert(data.say);\r\n        });\r\n\r\n        // 논문 반박 성공시 모달 오픈 함수\r\n        socket.on(\"open_stamp_modal\", (data) => {\r\n            this.reciving_data = data;\r\n            this.success_refute_modal_onoff = true;\r\n        });\r\n\r\n        // 전시회 실패시 받을 함수\r\n        socket.on(\"show_exhibition\", (data) => {\r\n            this.exhibition_result_user = data.user_name;\r\n            this.exhibit_result = data.result;\r\n            this.exhibit_on_cube_success = data.get_cube_success;\r\n\r\n            this.exhibition_result_modal = true;\r\n\r\n            // 3초 뒤 모달 off\r\n            setTimeout(()=>{\r\n                this.exhibition_result_modal = false;\r\n            },5000);\r\n        });\r\n\r\n        // 보드 순서 시작\r\n        socket.on(\"board_start\", (start_board) => {\r\n            // 모두 false로 만들고 선택된 보드만 true로 변경\r\n            this.board_1_selected = false;\r\n            this.board_2_selected = false;\r\n            this.board_3_selected = false;\r\n            this.board_4_selected = false;\r\n            this.board_5_selected = false;\r\n            this.board_6_selected = false;\r\n            this.board_7_selected = false;\r\n            this.board_8_selected = false;\r\n            // 다른 보드 의 모달 끄기\r\n            this.sell_ingredient_modal_onoff = false;\r\n            this.test_ingredient_modal_onoff = false;\r\n            this.reasoning_table_onoff = false;\r\n            this.presentation_of_theories_modal = false;\r\n            this.ingre_presentation_modal_onoff = false;\r\n            this.success_refute_modal_onoff = false;\r\n            this.board_order = 0;\r\n            this.$refs.adventurer_selling_modal.sell_potion_to_adv_modal_close();\r\n            this.$refs.adventurer_selling_modal.make_potion_modal_close();\r\n            // 보드 순서 끄기\r\n            this.my_turn = false;\r\n            switch(start_board) {\r\n                case 1 : \r\n                    //재료 선택\r\n                    this.board_1_selected = true;\r\n                    break;\r\n                case 2 : \r\n                    //재료 판매\r\n                    this.board_2_selected = true;\r\n                    this.sell_ingredient_modal_onoff = true;\r\n                    break;\r\n                case 3 :\r\n                    // 용병에게 뭉약 판매\r\n                    this.board_3_selected = true;\r\n                    this.$refs.adventurer_selling_modal.sell_potion_to_adv_modal_open();\r\n                    break;\r\n                case 4 : \r\n                    //아티펙트 구매\r\n                    this.board_4_selected = true;\r\n                    break;\r\n                case 5 :\r\n                    // 논문 반박\r\n                    this.board_5_selected = true;\r\n                    this.presentation_of_theories_modal = true;\r\n                    break;\r\n                case 6 :\r\n                    //논문 발표\r\n                    this.board_6_selected = true; \r\n                    this.presentation_of_theories_modal = true;\r\n                    break;\r\n                case 7 :\r\n                    //학생에게 실험\r\n                    this.board_7_selected = true;\r\n                    this.test_ingredient_modal_onoff = true;\r\n                    break;\r\n                case 8 :\r\n                    //교수에게 실험\r\n                    this.board_8_selected = true;\r\n                    this.test_ingredient_modal_onoff = true;\r\n                    break;\r\n                case 9 :\r\n                    // 물약 발표회\r\n                    this.board_end_selected = true;\r\n                    this.last_round_modal_onoff = true;\r\n                    break;\r\n                default:\r\n                    console.log(\"start_board_val_err \" + start_board);\r\n                    break;\r\n            }\r\n            \r\n            // 선택되지 못한 보드가 눌렸을 경우 현재 선택된 보드만 누르게 경고를 띄워야함\r\n\r\n        });\r\n        \r\n        // 호의 카드 <관리인> 사용 시 스스로 물약 마시기 모달 open\r\n        socket.on(\"caretaker_board_start\", (data) => {\r\n            // 관리인 카드 사용!\r\n            this.caretaker_used = true;\r\n            this.using_user_num = data.using_user_num;\r\n            // 모두 false로 만들고 선택된 보드만 true로 변경\r\n            this.board_1_selected = false;\r\n            this.board_2_selected = false;\r\n            this.board_3_selected = false;\r\n            this.board_4_selected = false;\r\n            this.board_5_selected = false;\r\n            this.board_6_selected = false;\r\n            this.board_7_selected = false;\r\n            this.board_8_selected = false;\r\n            this.board_end_selected = false;\r\n            // 다른 보드 의 모달 끄기\r\n            this.sell_ingredient_modal_onoff = false;\r\n            this.test_ingredient_modal_onoff = false;\r\n            this.reasoning_table_onoff = false;\r\n            this.presentation_of_theories_modal = false;\r\n            this.ingre_presentation_modal_onoff = false;\r\n            this.success_refute_modal_onoff = false;\r\n            this.board_order = 0;\r\n            this.$refs.adventurer_selling_modal.sell_potion_to_adv_modal_close();\r\n            this.$refs.adventurer_selling_modal.make_potion_modal_close();\r\n            // 보드 순서 끄기\r\n            this.my_turn = false;\r\n\r\n            // 스스로 물약 마시기 보드 on\r\n            this.board_8_selected = true;\r\n            this.test_ingredient_modal_onoff = true;\r\n\r\n            // 누가 사용 했는지 확인해 my_turn 넘기기\r\n            if( data.temp_used_favor_card_list[4][data.using_user_num].user_key == this.my_key ){\r\n                // 먼저 사용한 유저부터 사용 되게 될 꺼임\r\n                this.my_trun = true;\r\n            }\r\n            else {\r\n                this.my_turn = false;\r\n            }\r\n\r\n        });\r\n\r\n        //보드 진행 시 순서 관련 변수 업데이트\r\n        socket.on(\"change_board_order_val\", (data) => {            \r\n            this.board_order = data.board_order;\r\n            this.board_cube_order = data.board_cube_order;\r\n\r\n            // 보드 순서 일 때 변수 입력\r\n            if( this.board_2_selected == true || // 재료 판매\r\n                this.board_5_selected == true || // 논문 반박\r\n                this.board_6_selected == true || // 논문 발표\r\n                this.board_7_selected == true || // 학생에게 실험\r\n                this.board_8_selected == true || // 본인에게 실험\r\n                this.board_end_selected == true    // 물약 전시회\r\n                ){\r\n                if( this.final_round_order[this.board_order].user_key == this.my_key ){\r\n                    this.my_turn = true;\r\n                }else {\r\n                    this.my_turn = false;\r\n                }\r\n            }\r\n            //console.log(this.my_turn);\r\n            // 물약 판매 순서일 경우 판매하는 모든 사람들이 동시에 진행할 수 있어야함\r\n            if( this.board_3_selected == true ){\r\n                for( let i = 0; i < this.final_round_order.length; i++){\r\n                    // 내 차례가 있으면 그냥 보여주기\r\n                    if( this.user_cube_data[3][i].user_key == this.my_key ){\r\n                        if( this.user_cube_data[3][i].cube[1].is_select == true ) {\r\n                            this.sell_potion_turn = true;\r\n                            break;\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        socket.on(\"round_end\", () => {\r\n            // 모든 보드 포인터 끄기\r\n            this.board_1_selected = false;\r\n            this.board_2_selected = false;\r\n            this.board_3_selected = false;\r\n            this.board_4_selected = false;\r\n            this.board_5_selected = false;\r\n            this.board_6_selected = false;\r\n            this.board_7_selected = false;\r\n            this.board_8_selected = false;\r\n            // 모든 모달 끄기\r\n            this.sell_ingredient_modal_onoff = false;\r\n            this.test_ingredient_modal_onoff = false;\r\n            this.reasoning_table_onoff = false;\r\n            this.presentation_of_theories_modal = false;\r\n            this.ingre_presentation_modal_onoff = false;\r\n            this.success_refute_modal_onoff = false;\r\n            this.last_round_modal_onoff = false;\r\n            this.exhibition_check_modal_onoff = false;\r\n            this.$refs.adventurer_selling_modal.sell_potion_to_adv_modal_close();\r\n            this.$refs.adventurer_selling_modal.make_potion_modal_close();\r\n            // 보드 칸 순서 끄기\r\n            this.my_turn = false;\r\n            // 용병에게 물약 판매 초기환\r\n            this.my_selling_price = -1;\r\n            this.selling_turn = 0;\r\n            this.discount_coin_list = [];\r\n            this.before_adv_discount_select_num = -1;\r\n            // overlay 켜서 다시 순서 정하기 시작\r\n            this.decide_order = !this.decide_order;\r\n            this.final_round_order = '';\r\n        });\r\n\r\n        socket.on(\"test_ingredient_result\", (data) => {\r\n            let user_num = -1;\r\n            \r\n            for( let i = 0; i < this.user_data.length; i++){\r\n                if( this.user_data[i].user_key == data.user_key ){\r\n                    user_num = i;\r\n                }\r\n            }\r\n\r\n            this.open_result_user = this.user_data[user_num].user_name;\r\n            this.open_result = data.test_result;\r\n\r\n            this.open_result_modal = true;\r\n            \r\n            // 3초 지연 후 자동 모달 끄기\r\n            setTimeout( () => {\r\n                this.open_result_modal = false;\r\n            }, 3000);\r\n        });\r\n\r\n        // 게임 종료\r\n        socket.on(\"game_end_event\", (data) => {\r\n            console.log(data);\r\n            // 게임이 종료된것을 알리는 모달을 호출\r\n            // 모달에서 완료하기 를 누르면 end_page로 넘어가는 형식으로 변경\r\n            /*\r\n            \r\n            this.$router.push({\r\n                    name : 'end_page',\r\n                    params : {\r\n                        game_result : JSON.stringify(data),\r\n                        name : this.my_name,\r\n                        room_name : this.room_name,\r\n                    }\r\n                });\r\n            */\r\n            this.game_end_data = data;\r\n            this.game_end_alert_modal = true;\r\n        });\r\n    },\r\n    data() {\r\n        return  {\r\n            // component forceUpdate를 위한 key변수\r\n            adventurer_selling_key_val : 0,\r\n            favor_card_use_key_val : 0,\r\n\r\n            user_data : '', \r\n            room_name : this.$route.params.room_name,\r\n            my_key : '',\r\n            my_data : '',\r\n            my_name : '',\r\n            my_color : '',\r\n            room_owner : '',\r\n            total_dicount_adventruer : 4,\r\n            textarea : '',\r\n            message : '',\r\n            ingredient_card_selected : '',\r\n            // overlay\r\n            decide_order : false,\r\n            // overlay 완료버튼으로 나오는 modal\r\n            decide_order_modal : false,\r\n            // 현재 라운드\r\n            round_cont : 0,\r\n            // 라운드 순서를 정하는 순서 정보\r\n            round_setting_order : '',\r\n            // 라운드 순서를 정하는 순서 \r\n            round_setting_order_counter : 0,\r\n            // 해당 라운드의 순서 결정완료 후 순서\r\n            final_round_order : [],\r\n            // 해당 라운드의 큐브 순서\r\n            user_cube_data : [],\r\n            // 라운드 준비 완료 확인 모달\r\n            round_order_check : false,\r\n            // 구매 가능한 아티펙트 변수\r\n            can_buy_artifacts : '',\r\n            // 재료조합 추리 및 결과 테이블\r\n            result_table : [],\r\n            // board 선택을 위한 변수 8개\r\n            board_1_selected :false,\r\n            board_2_selected :false,\r\n            board_3_selected :false,\r\n            board_4_selected :false,\r\n            board_5_selected :false,\r\n            board_6_selected :false,\r\n            board_7_selected :false,\r\n            board_8_selected :false,\r\n            // 매 보드마다 순서를 정할 변수\r\n            board_order : 0,\r\n            // 큐브 순서를 정할 변수\r\n            board_cube_order : 1,\r\n            // 2번째 보드 modal\r\n            sell_ingredient_modal_onoff : false,\r\n            // 보드의 현재 순서가 자신인지 확인하는 변수\r\n            my_turn : false,\r\n\r\n            // 호의 카드 종류\r\n            card_kind : '',\r\n            // 호의 카드 사용 여부 통합 변수\r\n            temp_used_favor_card_list : '',\r\n            // 관리인 카드가 사용 되었다는 것을 알릴 변수\r\n            caretaker_used : false,\r\n            // 관리인 카드 사용 번호\r\n            using_user_num : '',\r\n\r\n            // 용병에게 물약 판매 차례를 진행할 사람들만 표기할 변수\r\n            sell_potion_turn : false,\r\n            // 용병 순서 변수\r\n            random_adv_list : [],\r\n            // 판매할 물약 변수 원형\r\n            adventurer_card_ori_data : '',\r\n            // 할인 포인트 제시 여부\r\n            get_discount_coin : false,\r\n            // 선택한 할인 카드 저장 변수\r\n            before_adv_discount_select_num : -1,\r\n            // 제시한 할인 카드 를 저장할 변수\r\n            discount_coin_list : [],\r\n            // 할인제시 스텝이 끝났는지 안끝났는지 알려줄 변수\r\n            is_end_discount : false,\r\n            // 나의 할인 스텝이 끝났을 때 기다리기 위한 변수\r\n            im_end_discount : false,\r\n            // 내 판매가\r\n            my_selling_price : 0,\r\n            // 판매 차례\r\n            selling_turn : 0,\r\n            // 판매할 물약 종류 설정\r\n            what_kind_sell_potion : '',\r\n            // 판매 성공/실패 모달 \r\n            selling_end_modal : false,\r\n            // 판매 성공/실패 변수\r\n            selling_success : false,\r\n            // 판매 성공/실패한 유저의 색\r\n            selling_user_color : '',\r\n            // 판매한 물약\r\n            selling_potion_kind : '',\r\n\r\n            // 실험할 재료를 저장해둘 변수\r\n            test_ingredient_list : [],\r\n            // 실험 모달\r\n            test_ingredient_modal_onoff : false,\r\n            // 추리 테이블 모달\r\n            my_reasoning_table_modal : false,\r\n            // 추리 테이블 관련 변수\r\n            icon_data : {\r\n                0 : require('@/assets/img/material_card/ingredient_1.png'),\r\n                1 : require('@/assets/img/material_card/ingredient_2.png'),\r\n                2 : require('@/assets/img/material_card/ingredient_3.png'),\r\n                3 : require('@/assets/img/material_card/ingredient_4.png'),\r\n                4 : require('@/assets/img/material_card/ingredient_5.png'),\r\n                5 : require('@/assets/img/material_card/ingredient_6.png'),\r\n                6 : require('@/assets/img/material_card/ingredient_7.png'),\r\n                7 : require('@/assets/img/material_card/ingredient_8.png'),\r\n            },\r\n            reasoning_data : {\r\n                0 : require('@/assets/img/stamp/rgbl010.png'),\r\n                1 : require('@/assets/img/stamp/rgbl101.png'),\r\n                2 : require('@/assets/img/stamp/rglb100.png'),\r\n                3 : require('@/assets/img/stamp/rglb011.png'),\r\n                4 : require('@/assets/img/stamp/rlgb001.png'),\r\n                5 : require('@/assets/img/stamp/rlgb110.png'),\r\n                6 : require('@/assets/img/stamp/rlglbl000.png'),\r\n                7 : require('@/assets/img/stamp/rlglbl111.png'),\r\n            },\r\n            black_stamp_data : {\r\n                0 : require('@/assets/img/stamp/stamp_black_5.png'),\r\n                1 : require('@/assets/img/stamp/stamp_black_5.png'),\r\n                2 : require('@/assets/img/stamp/stamp_black_3.png'),\r\n                3 : require('@/assets/img/stamp/stamp_black_3.png'),\r\n                4 : require('@/assets/img/stamp/stamp_black_3.png'),\r\n                5 : require('@/assets/img/stamp/stamp_black_red.png'),\r\n                6 : require('@/assets/img/stamp/stamp_black_red.png'),\r\n                7 : require('@/assets/img/stamp/stamp_black_green.png'),\r\n                8 : require('@/assets/img/stamp/stamp_black_green.png'),\r\n                9 : require('@/assets/img/stamp/stamp_black_blue.png'),\r\n                10 : require('@/assets/img/stamp/stamp_black_blue.png'),\r\n            },\r\n            blue_stamp_data : {\r\n                0 : require('@/assets/img/stamp/stamp_blue_5.png'),\r\n                1 : require('@/assets/img/stamp/stamp_blue_5.png'),\r\n                2 : require('@/assets/img/stamp/stamp_blue_3.png'),\r\n                3 : require('@/assets/img/stamp/stamp_blue_3.png'),\r\n                4 : require('@/assets/img/stamp/stamp_blue_3.png'),\r\n                5 : require('@/assets/img/stamp/stamp_blue_red.png'),\r\n                6 : require('@/assets/img/stamp/stamp_blue_red.png'),\r\n                7 : require('@/assets/img/stamp/stamp_blue_green.png'),\r\n                8 : require('@/assets/img/stamp/stamp_blue_green.png'),\r\n                9 : require('@/assets/img/stamp/stamp_blue_blue.png'),\r\n                10 : require('@/assets/img/stamp/stamp_blue_blue.png'),\r\n            },\r\n            red_stamp_data : {\r\n                0 : require('@/assets/img/stamp/stamp_red_5.png'),\r\n                1 : require('@/assets/img/stamp/stamp_red_5.png'),\r\n                2 : require('@/assets/img/stamp/stamp_red_3.png'),\r\n                3 : require('@/assets/img/stamp/stamp_red_3.png'),\r\n                4 : require('@/assets/img/stamp/stamp_red_3.png'),\r\n                5 : require('@/assets/img/stamp/stamp_red_red.png'),\r\n                6 : require('@/assets/img/stamp/stamp_red_red.png'),\r\n                7 : require('@/assets/img/stamp/stamp_red_green.png'),\r\n                8 : require('@/assets/img/stamp/stamp_red_green.png'),\r\n                9 : require('@/assets/img/stamp/stamp_red_blue.png'),\r\n                10 : require('@/assets/img/stamp/stamp_red_blue.png'),\r\n            },\r\n            white_stamp_data : {\r\n                0 : require('@/assets/img/stamp/stamp_white_5.png'),\r\n                1 : require('@/assets/img/stamp/stamp_white_5.png'),\r\n                2 : require('@/assets/img/stamp/stamp_white_3.png'),\r\n                3 : require('@/assets/img/stamp/stamp_white_3.png'),\r\n                4 : require('@/assets/img/stamp/stamp_white_3.png'),\r\n                5 : require('@/assets/img/stamp/stamp_white_red.png'),\r\n                6 : require('@/assets/img/stamp/stamp_white_red.png'),\r\n                7 : require('@/assets/img/stamp/stamp_white_green.png'),\r\n                8 : require('@/assets/img/stamp/stamp_white_green.png'),\r\n                9 : require('@/assets/img/stamp/stamp_white_blue.png'),\r\n                10 : require('@/assets/img/stamp/stamp_white_blue.png'),\r\n            },\r\n            ele_core_data : {\r\n                0 : require('@/assets/img/game_icon/red_origin.png'),\r\n                1 : require('@/assets/img/game_icon/green_origin.png'),\r\n                2 : require('@/assets/img/game_icon/blue_origin.png'),\r\n            },\r\n            picked : -1,\r\n            reasoning_table_onoff : false,\r\n            // 실험 결과를 모두에게 보여주는 변수\r\n            open_result : '',\r\n            open_result_user : '',\r\n            open_result_modal : false,\r\n            // 논문 발표/ 반박 시 발표된 정보 저장\r\n            theory_data : '',\r\n            // 논문 발표/ 반박 모달\r\n            presentation_of_theories_modal : false,\r\n            ingre_presentation_modal_onoff : false,\r\n            // 논문 발표/반박 원소 선택 관련 변소\r\n            before_theory_ele_select_num : 0,\r\n            before_theory_stm_select_num : 0,\r\n            now_select_ingre : 0,\r\n            before_refute_ori_select_num : 0,\r\n            // 논문 반박 성공 시 열릴 모달 \r\n            success_refute_modal_onoff : false,\r\n            // 반박 성공시 보여줄 인장들\r\n            reciving_data : '',\r\n\r\n            // 마지막 라운드 모달\r\n            last_round_modal_onoff : false,\r\n            // 마자믹 라운드 보드 켜기\r\n            board_end_selected : false,\r\n            // 잘 발표된 물약 표기\r\n            exhibition_result : '',\r\n            // 발표하기 위한 모달\r\n            exhibition_check_modal_onoff : false,\r\n            exhibition_potion_num : -1,\r\n\r\n            // 전시 결과 모달\r\n            exhibition_result_modal : false,\r\n            // 전시 결과창 - 전시자\r\n            exhibition_result_user : '',\r\n            // 전시 결과창 - 결과\r\n            exhibit_result : '',\r\n            // 전시 가능한 여부 변수\r\n            exhibit_on_cube_success : false,\r\n\r\n            // 게임 종료 알림 모달\r\n            game_end_alert_modal : false,\r\n            // 게임 종료 정보\r\n            game_end_data : '',\r\n        }\r\n    },\r\n\r\n    methods : {\r\n        use_chat : function(){\r\n            if( this.message !== '' ){\r\n              let msg = {\r\n                speaker : this.my_name,\r\n                msg : this.message,\r\n                type : \"normal\",\r\n                room_name: this.room_name,\r\n              }\r\n\r\n            //   console.log(\"서버에 보낼 데이터\");\r\n            //   console.log(msg);\r\n            //   console.log(\"보낼준비 끝\");\r\n              this.message = '';\r\n              socket.emit(\"chat\", msg);\r\n            }\r\n        },\r\n\r\n        draw_ingredient_card : function(cnt) {\r\n            let data = {\r\n                cnt : cnt,\r\n                my_key : this.my_key,\r\n            }\r\n            socket.emit(\"draw_ingredient_card\", data);\r\n        },\r\n\r\n        // 인게임 라운드 진행 준비 완료를 알리는 함수\r\n        round_ready : function() {\r\n            this.round_order_check = true;\r\n        },\r\n\r\n        round_order_setting_end : function() {\r\n            this.round_order_check = false;\r\n            let send_data = {\r\n                user_key : this.my_key,\r\n                room_name : this.room_name,\r\n            };\r\n            socket.emit(\"round_ready_on\", send_data);\r\n        },\r\n        round_order_setting_close : function() {\r\n            this.round_order_check = false;\r\n        },\r\n\r\n        // decide_order overlay의 완료 버튼\r\n        decide_order_modal_open : function() {\r\n            // 선택 순서에 따라 클릭 막기\r\n            if( this.round_setting_order[this.round_setting_order_counter].user_key != this.my_key){\r\n                alert(\"지금은 내 선택 순서가 아닙니다! 조금만 기다려주세용\");\r\n                return;\r\n            }\r\n            this.decide_order_modal = !this.decide_order_modal;\r\n        },\r\n        \r\n        // decide_order_modal 의 결정 버튼\r\n        decide_order_setting_end : function() {\r\n            \r\n            let is_select_order = false;\r\n\r\n            for( let i = 0; i < this.final_round_order.length; i++){\r\n                if( this.final_round_order[i].user_key == this.my_key ){\r\n                    is_select_order = true;\r\n                    break;\r\n                }\r\n            }\r\n            if( !is_select_order ) {\r\n                alert(\"순서를 고르고 결정을 눌러주세요\");\r\n                this.decide_order_modal = false;\r\n                return;\r\n            }\r\n            let send_data = {\r\n                room_name : this.room_name,\r\n            };\r\n            //위 if문에 안걸리면 선택한 순서가 있다는 것 이므로 진행\r\n            // 게임 결정 순서를 공유해야 하므로 서버에 값을 증가시키라고 전송\r\n            socket.emit(\"decide_round_setting_order_counter_incre\", send_data);\r\n            this.decide_order_modal = false;\r\n        },\r\n\r\n        select_order_btn : function(val){\r\n            // 선택 순서에 따라 클릭 막기\r\n            if( this.round_setting_order[this.round_setting_order_counter].user_key != this.my_key){\r\n                alert(\"지금은 내 선택 순서가 아닙니다! 조금만 기다려주세용\");\r\n                return;\r\n            }\r\n\r\n            // 마지막 순서는 벌칙 존이므로 선택할 수 없다!\r\n            if( val == 8 ){\r\n                alert(\"벌칙 존이라서 선택할 수 없습니다. 다른 순서를 선택해주세요.\");\r\n                return;\r\n            }\r\n            \r\n            if( this.final_round_order != '' ){\r\n                for( let i = 0; i < this.final_round_order.length; i++ ){\r\n                    if( this.final_round_order[i].user_key != this.my_key ){\r\n                        if( val == this.final_round_order[i].order) {\r\n                            alert(\"다른 사람이 선택한 순서는 선택 할 수 없습니다.\");\r\n                            return;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            let round_order_data = {\r\n                user_key : this.my_key,\r\n                order : val,\r\n                room_name : this.room_name,\r\n            };\r\n\r\n            // 버튼 선택 결과 전송\r\n            socket.emit(\"select_round_order\", round_order_data);\r\n        },\r\n\r\n        // 큐브로 순서를 선택할 때 반응\r\n        click_order_btn : function(n, u, user_key) {\r\n\r\n            for( let i = 0; i < this.user_data.length; i++ ) {\r\n                if( this.user_data[i].user_key == user_key ){\r\n                    if( this.user_data[i].is_ready == true ){\r\n                        alert(\"준비 완료 후에는 선택할 수 없습니다!\");\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if( user_key != this.my_key ){\r\n                alert(\"본인의 색으로 구분된 버튼만 골라주세요!\");\r\n                return;\r\n            }\r\n\r\n            // 라운드가 진행중이면 클릭되선 안됨\r\n            for( let i = 0; i < this.user_data.length; i++ ) {\r\n                if( this.user_data[i].user_key == this.my_key ){\r\n                    if( this.user_data[i].is_ingame == true ){\r\n                        alert(\"라운드 진행 중에는 클릭 할 수 없습니다!\");\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // 1라운드에는 용병에게 물약 판매 / 논문 발표 / 반박을 할 수 없다\r\n            if( this.round_cont == 1 && ( n == 3 || n == 5 || n == 6 ) ){\r\n                alert(\"1라운드에는 해당 보드의 행동을 할 수 없습니다!\\n 다른 보드를 선택해주세요\");\r\n                return;\r\n            }\r\n\r\n            // n :: user_cube_data[n] :: 보드 번호\r\n            // u :: user_cube_data[n][유저번호].cube[u] :: 보드 의 큐브 번호\r\n            let send_data = {\r\n                user_key : user_key,\r\n                board_num : n,\r\n                button_order_num : u,\r\n                room_name : this.room_name,\r\n            }\r\n            console.log(send_data);\r\n            //버튼 선택 결과 전송\r\n            socket.emit(\"select_cube\", send_data);\r\n        },\r\n\r\n        // 추리테이블 눌렀을 때 반응\r\n        click_reasoning_ele : function(index , key) {\r\n\r\n            let reasoning_data = {\r\n                user_key : this.my_key,\r\n                x : index,\r\n                y : key,\r\n                change_val : this.picked,\r\n                room_name : this.room_name,\r\n            }\r\n\r\n            socket.emit(\"reasoning_table_change\", reasoning_data);\r\n            //console.log(reasoning_data);\r\n\r\n            this.picked = -1;\r\n            this.reasoning_table_onoff = false;\r\n        },\r\n        reasoning_table_open : function() {\r\n            this.my_reasoning_table_modal = !this.my_reasoning_table_modal;\r\n        },\r\n\r\n        open_reasoning_table_modal : function( index, key ) {\r\n            this.$refs.index_val.innerText = index;\r\n            this.$refs.key_val.innerText = key;\r\n            //console.log(this.$refs.index_val.innerText);\r\n            //console.log(index + \" \" + key);\r\n            this.reasoning_table_onoff = true;\r\n        },\r\n        reset_val : function () {\r\n            this.picked = -1;\r\n        },\r\n\r\n        // 카드 클릭해서 모달 열기\r\n        favor_card_modal_on : function(card_kind) {\r\n            this.$refs.favor_card_use_check_modal.favor_modal_open(card_kind);\r\n        },\r\n\r\n        // 호의 카드 사용하기\r\n        favor_card_use_check : function ( data ) {\r\n            // 호의 카드를 사용한다고 서버에 알리고 효과 적용받기\r\n            let send_data = '';\r\n            if( data.card_name == 'big_man' ){\r\n                send_data = {\r\n                    user_key : this.my_key,\r\n                    room_name : this.room_name,\r\n                    favor_card : data.card_name,\r\n                    select_board_num : data.select_board_num,\r\n                } ;               \r\n            }\r\n            else if ( data.card_name == 'herbalist'){\r\n                send_data = {\r\n                    user_key : this.my_key,\r\n                    room_name : this.room_name,\r\n                    favor_card : data.card_name,\r\n                    ingre_list : data.ingre_list,\r\n                };\r\n            }\r\n            else {\r\n                send_data = {\r\n                    user_key : this.my_key,\r\n                    room_name : this.room_name,\r\n                    favor_card : data.card_name,\r\n                };\r\n            }\r\n            console.log(send_data);\r\n            socket.emit(\"favor_card_use_confirm\", send_data);\r\n        }, \r\n\r\n        // 재료카드 선택 이벤트\r\n        pick_ingredient : function(data, index) {\r\n            if( this.board_1_selected == false || this.user_cube_data[1][this.board_order].user_key != this.my_key){\r\n                alert(\"아직 재료를 고를 수 없습니다.\")\r\n                return;\r\n            }\r\n            // 재료 카드 선택 이벤트는 무조건 0번에 존재하므로\r\n            if( this.user_cube_data[1][this.board_order].cube[this.board_cube_order].is_select == true\r\n                && this.user_cube_data[1][this.board_order].user_key == this.my_key )\r\n            {\r\n                switch(index){\r\n                    case \"card_1\" : \r\n                        index = 0;\r\n                        break;\r\n                    case \"card_2\" : \r\n                        index = 1;\r\n                        break;\r\n                    case \"card_3\" : \r\n                        index = 2;\r\n                        break;\r\n                    case \"card_4\" : \r\n                        index = 3;\r\n                        break;\r\n                    case \"card_5\" :\r\n                        index = 4; \r\n                        break;\r\n                }\r\n                // 위의 변수를 뚫고 내려오면 현재 내가 고를 상태가 맞는것\r\n                let send_data = {\r\n                    user_key : this.my_key,\r\n                    pick_item : data,\r\n                    cube_order : this.board_cube_order,\r\n                    board_order : this.board_order,\r\n                    ingredient_select_arr_order : index,\r\n                    room_name : this.room_name,\r\n                }\r\n\r\n                //console.log(send_data);\r\n                socket.emit(\"pick_ingredient\", send_data);\r\n            }\r\n            \r\n        },\r\n\r\n        // 판매 재료카드 선택 이벤트\r\n        click_sell_ingredient_check : function(name) {\r\n            //console.log(name);\r\n            let num = -1;\r\n            // 원래 선택되어 있는지 확인하고 전부 해제 \r\n            for(let i = 0; i < this.user_data.length; i++){\r\n                if( this.user_data[i].user_key == this.my_key ){\r\n                    if( this.user_data[i].user_ingame_data.ingredient.card_1 > 0 ){\r\n                        num = this.$refs.sell_card_1[0].className.indexOf('sell_border');\r\n                        if( num > 0 ) {\r\n                            let str = this.$refs.sell_card_1[0].className.substring(0, num-1);\r\n                            this.$refs.sell_card_1[0].className = str;\r\n                        }\r\n                    }\r\n                    if ( this.user_data[i].user_ingame_data.ingredient.card_2 > 0 ){\r\n                        num = this.$refs.sell_card_2[0].className.indexOf('sell_border');\r\n                        if( num > 0 ) {\r\n                            let str = this.$refs.sell_card_2[0].className.substring(0, num-1);\r\n                            this.$refs.sell_card_2[0].className = str;\r\n                        }       \r\n                    }\r\n                    if ( this.user_data[i].user_ingame_data.ingredient.card_3 > 0 ){\r\n                        num = this.$refs.sell_card_3[0].className.indexOf('sell_border');\r\n                        if( num > 0 ) {\r\n                            let str = this.$refs.sell_card_3[0].className.substring(0, num-1);\r\n                            this.$refs.sell_card_3[0].className = str;\r\n                        }\r\n                    }\r\n                    if ( this.user_data[i].user_ingame_data.ingredient.card_4 > 0 ){\r\n                        num = this.$refs.sell_card_4[0].className.indexOf('sell_border');\r\n                        if( num > 0 ) {\r\n                            let str = this.$refs.sell_card_4[0].className.substring(0, num-1);\r\n                            this.$refs.sell_card_4[0].className = str;\r\n                        }\r\n                    }\r\n                    if ( this.user_data[i].user_ingame_data.ingredient.card_5 > 0 ){\r\n                        num = this.$refs.sell_card_5[0].className.indexOf('sell_border');\r\n                        if( num > 0 ) {\r\n                            let str = this.$refs.sell_card_5[0].className.substring(0, num-1);\r\n                            this.$refs.sell_card_5[0].className = str;\r\n                        }\r\n                    }\r\n                    if ( this.user_data[i].user_ingame_data.ingredient.card_6 > 0 ){\r\n                        num = this.$refs.sell_card_6[0].className.indexOf('sell_border');\r\n                        if( num > 0 ) {\r\n                            let str = this.$refs.sell_card_6[0].className.substring(0, num-1);\r\n                            this.$refs.sell_card_6[0].className = str;\r\n                        }\r\n                    }\r\n                    if ( this.user_data[i].user_ingame_data.ingredient.card_7 > 0 ){\r\n                        num = this.$refs.sell_card_7[0].className.indexOf('sell_border');\r\n                        if( num > 0 ) {\r\n                            let str = this.$refs.sell_card_7[0].className.substring(0, num-1);\r\n                            this.$refs.sell_card_7[0].className = str;\r\n                        }\r\n                    }\r\n                    if ( this.user_data[i].user_ingame_data.ingredient.card_8 > 0 ){\r\n                        num = this.$refs.sell_card_8[0].className.indexOf('sell_border');\r\n                        if( num > 0 ) {\r\n                            let str = this.$refs.sell_card_8[0].className.substring(0, num-1);\r\n                            this.$refs.sell_card_8[0].className = str;\r\n                        }\r\n                    }\r\n                    break;     \r\n                }\r\n            }\r\n            \r\n            // 전부 해제한 후 선택한 것을 선택표시\r\n            let ref_str = '';\r\n            switch(name){\r\n                case 'card_1':\r\n                    ref_str = this.$refs.sell_card_1;\r\n                    break;\r\n                case 'card_2':\r\n                    ref_str = this.$refs.sell_card_2;\r\n                    break;\r\n                case 'card_3':\r\n                    ref_str = this.$refs.sell_card_3;\r\n                    break;\r\n                case 'card_4':\r\n                    ref_str = this.$refs.sell_card_4;\r\n                    break;\r\n                case 'card_5':\r\n                    ref_str = this.$refs.sell_card_5;\r\n                    break;\r\n                case 'card_6':\r\n                    ref_str = this.$refs.sell_card_6;\r\n                    break;\r\n                case 'card_7':\r\n                    ref_str = this.$refs.sell_card_7;\r\n                    break;\r\n                case 'card_8':\r\n                    ref_str = this.$refs.sell_card_8;\r\n                    break;\r\n            }\r\n            ref_str[0].className += \" sell_border\";\r\n        },\r\n\r\n        // 재료 판매 이벤트\r\n        click_sell_ingredient : function() {\r\n            let num = -1;\r\n            let sell_item_num = 0;\r\n            // 선택된 것을 확인하고 번호를 저장\r\n            // 반드시 한 카드의 클래스에먼 sell_border가 있을것이므로 가능\r\n            for(let i = 0; i < this.user_data.length; i++){\r\n                if( this.user_data[i].user_key == this.my_key ){\r\n                    if( this.user_data[i].user_ingame_data.ingredient.card_1 > 0 ){\r\n                        num = this.$refs.sell_card_1[0].className.indexOf('sell_border');\r\n                        if( num > 0 ) {\r\n                            sell_item_num = 1;\r\n                            this.$refs.sell_card_1[0].className = this.$refs.sell_card_1[0].className.substring(0, num-1);\r\n                        }\r\n                    }\r\n                    num = 0;\r\n                    if ( this.user_data[i].user_ingame_data.ingredient.card_2 > 0 ){\r\n                        num = this.$refs.sell_card_2[0].className.indexOf('sell_border');\r\n                        if( num > 0 ) {\r\n                            sell_item_num = 2;\r\n                            this.$refs.sell_card_2[0].className = this.$refs.sell_card_2[0].className.substring(0, num-1);\r\n                        }\r\n                    }\r\n                    num = 0;\r\n                    if ( this.user_data[i].user_ingame_data.ingredient.card_3 > 0 ){\r\n                        num = this.$refs.sell_card_3[0].className.indexOf('sell_border');\r\n                        if( num > 0 ) {\r\n                            sell_item_num = 3;\r\n                            this.$refs.sell_card_3[0].className = this.$refs.sell_card_3[0].className.substring(0, num-1);\r\n                        }\r\n                    }\r\n                    num = 0;\r\n                    if ( this.user_data[i].user_ingame_data.ingredient.card_4 > 0 ){\r\n                        num = this.$refs.sell_card_4[0].className.indexOf('sell_border');\r\n                        if( num > 0 ) {\r\n                            sell_item_num = 4;\r\n                            this.$refs.sell_card_4[0].className = this.$refs.sell_card_4[0].className.substring(0, num-1);\r\n                        }\r\n                    }\r\n                    num = 0;\r\n                    if ( this.user_data[i].user_ingame_data.ingredient.card_5 > 0 ){\r\n                        num = this.$refs.sell_card_5[0].className.indexOf('sell_border');\r\n                        if( num > 0 ) {\r\n                            sell_item_num = 5;\r\n                            this.$refs.sell_card_5[0].className = this.$refs.sell_card_5[0].className.substring(0, num-1);\r\n                        }\r\n                    }\r\n                    num = 0;\r\n                    if ( this.user_data[i].user_ingame_data.ingredient.card_6 > 0 ){\r\n                        num = this.$refs.sell_card_6[0].className.indexOf('sell_border');\r\n                        if( num > 0 ) {\r\n                            sell_item_num = 6;\r\n                            this.$refs.sell_card_6[0].className = this.$refs.sell_card_6[0].className.substring(0, num-1);\r\n                        }\r\n                    }\r\n                    num = 0;\r\n                    if ( this.user_data[i].user_ingame_data.ingredient.card_7 > 0 ){\r\n                        num = this.$refs.sell_card_7[0].className.indexOf('sell_border');\r\n                        if( num > 0 ) {\r\n                            sell_item_num = 7;\r\n                            this.$refs.sell_card_7[0].className = this.$refs.sell_card_7[0].className.substring(0, num-1);\r\n                        }\r\n                    }\r\n                    num = 0;\r\n                    if ( this.user_data[i].user_ingame_data.ingredient.card_8 > 0 ){\r\n                        num = this.$refs.sell_card_8[0].className.indexOf('sell_border');\r\n                        if( num > 0 ) {\r\n                            sell_item_num = 8;\r\n                            this.$refs.sell_card_8[0].className = this.$refs.sell_card_8[0].className.substring(0, num-1);\r\n                        }\r\n                    }\r\n                    num = 0;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            //판매할 데이터를 묶어 보냄\r\n            let send_data = {\r\n                user_key : this.my_key,\r\n                sell_item_num : sell_item_num,\r\n                board_order : this.board_order,\r\n                cube_order : this.board_cube_order,\r\n                room_name : this.room_name,\r\n            }\r\n            //console.log(send_data);\r\n            socket.emit(\"sell_item_confirm\", send_data);\r\n        },\r\n\r\n        // 재료 판매 포기 이벤트\r\n        end_selling_ingredient : function() {\r\n            let send_data = {\r\n                user_key : this.my_key,\r\n                board_num : this.board_num,\r\n                cube_order : this.board_cube_order,\r\n                room_name : this.room_name\r\n            };\r\n            socket.emit(\"cancel_selling_ingre\", send_data);\r\n        },\r\n\r\n        // 아티팩트 구매 가능 여부 확인 및 구매\r\n        buy_artifact_confirm : function( data ) {\r\n            if( this.final_round_order[this.board_order].user_key != this.my_key ||\r\n                this.board_4_selected == false \r\n                ){\r\n                alert(\"자신의 순서에만 구매할 수 있습니다\\n큐브를 두고 해당 보드의 순서가 되면 구매해 주세요\");\r\n                return;\r\n            }\r\n            let send_data = {\r\n                board_order : this.board_order,\r\n                cube_order : this.board_cube_order,\r\n                rank : data.rank,\r\n                arti_num : data.num,\r\n                user_key : this.my_key,\r\n                room_name : this.room_name,\r\n            }\r\n\r\n            socket.emit(\"buy_artifact_confirm\", send_data);\r\n        },\r\n\r\n        // 실험 재료 2개 고르기\r\n        click_test_ingredient_check : function(name){\r\n            let same_name = false;\r\n            // 이미 2가지가 선택되어 있으면 가장 먼저 들어온 1개를 제거하고 마지막에 들어온 한개를 진행\r\n            if( this.test_ingredient_list.length == 2){\r\n                // 공용 변수 - test_border를 제거할 변수 이름\r\n                let before_name = '';\r\n                let num = 0;\r\n                // 같은 카드가 이미 있는지 검사\r\n                \r\n                same_name = this.test_ingredient_list.includes(name);\r\n                //console.log(same_name);\r\n                if( same_name == true ) {\r\n                    // 같은걸 제거\r\n                    let same_num = this.test_ingredient_list.indexOf(name);\r\n                    this.test_ingredient_list.splice(same_num, 1);\r\n                    before_name = name;\r\n                }\r\n                else {// 먼저 들어온 1개를 제거\r\n                    before_name = this.test_ingredient_list.shift();\r\n                }\r\n\r\n                switch(before_name) {\r\n                    case 'card_1' :\r\n                        num = this.$refs.test_card_1[0].className.indexOf('test_border');\r\n                        if( num > 0 ) {\r\n                            this.$refs.test_card_1[0].className = this.$refs.test_card_1[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case 'card_2' :\r\n                        num = this.$refs.test_card_2[0].className.indexOf('test_border');\r\n                        if( num > 0 ){\r\n                            this.$refs.test_card_2[0].className = this.$refs.test_card_2[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case 'card_3' :\r\n                        num = this.$refs.test_card_3[0].className.indexOf('test_border');\r\n                        if( num > 0 ) {\r\n                            this.$refs.test_card_3[0].className = this.$refs.test_card_3[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case 'card_4' :\r\n                        num = this.$refs.test_card_4[0].className.indexOf('test_border');\r\n                        if (num > 0 ) {\r\n                            this.$refs.test_card_4[0].className = this.$refs.test_card_4[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case 'card_5' :\r\n                        num = this.$refs.test_card_5[0].className.indexOf('test_border');\r\n                        if( num > 0 ){\r\n                            this.$refs.test_card_5[0].className = this.$refs.test_card_5[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case 'card_6' :\r\n                        num = this.$refs.test_card_6[0].className.indexOf('test_border');\r\n                        if( num > 0 ) {\r\n                            this.$refs.test_card_6[0].className = this.$refs.test_card_6[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case 'card_7' :\r\n                        num = this.$refs.test_card_7[0].className.indexOf('test_border');\r\n                        if( num > 0 ) {\r\n                            this.$refs.test_card_7[0].className = this.$refs.test_card_7[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case 'card_8' :\r\n                        num = this.$refs.test_card_8[0].className.indexOf('test_border');\r\n                        if ( num > 0 ) {\r\n                            this.$refs.test_card_8[0].className = this.$refs.test_card_8[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                }\r\n                \r\n            }\r\n            \r\n            if( same_name == false ) {\r\n                // 변수에 추가\r\n                this.test_ingredient_list.push(name);\r\n                let ref_str = '';\r\n                switch(name){\r\n                    case 'card_1':\r\n                        ref_str = this.$refs.test_card_1;\r\n                        break;\r\n                    case 'card_2':\r\n                        ref_str = this.$refs.test_card_2;\r\n                        break;\r\n                    case 'card_3':\r\n                        ref_str = this.$refs.test_card_3;\r\n                        break;\r\n                    case 'card_4':\r\n                        ref_str = this.$refs.test_card_4;\r\n                        break;\r\n                    case 'card_5':\r\n                        ref_str = this.$refs.test_card_5;\r\n                        break;\r\n                    case 'card_6':\r\n                        ref_str = this.$refs.test_card_6;\r\n                        break;\r\n                    case 'card_7':\r\n                        ref_str = this.$refs.test_card_7;\r\n                        break;\r\n                    case 'card_8':\r\n                        ref_str = this.$refs.test_card_8;\r\n                        break;\r\n                }\r\n                ref_str[0].className += \" test_border\";\r\n            }\r\n        },\r\n\r\n        click_test_ingredient : function() {\r\n            if( this.test_ingredient_list.length != 2 ){\r\n                alert(\"재료카드를 2장 선택해주세요!!!\");\r\n                return;\r\n            }\r\n            // test_ingredient_list의 길이가 2이면 서버에게 보내고\r\n            // 고른 재료 차감 / 변수 초기화 / 결과는 모두에게 전송\r\n            // / -> 유물 카드 에 따른 효과 발동 할 부분 추가할 것 계산\r\n            else {\r\n                let board_is = 0;\r\n                if( this.board_7_selected == true ){\r\n                    board_is = 7;\r\n                }else if ( this.board_8_selected == true ) {\r\n                    board_is = 8;\r\n                }\r\n                // 호의카드 사용 여부에 따라 추가적인 정보 전송\r\n                let send_data = '';\r\n                if ( this.caretaker_used == true ) {\r\n                    send_data = { \r\n                        user_key : this.my_key,\r\n                        card_list : this.test_ingredient_list,\r\n                        caretaker_used : true,\r\n                        using_user_num : this.using_user_num,\r\n                        board_is : board_is,\r\n                        room_name : this.room_name,\r\n                    }\r\n                } else {\r\n                    send_data = { \r\n                        user_key : this.my_key,\r\n                        card_list : this.test_ingredient_list,\r\n                        caretaker_used : false,\r\n                        board_order : this.board_order,\r\n                        cube_order : this.board_cube_order,\r\n                        board_is : board_is,\r\n                        room_name : this.room_name,\r\n                    }\r\n                }\r\n                //console.log(send_data);\r\n                socket.emit(\"test_ingredient_confirm\", send_data);\r\n                // 선택한 카드 test_border 지우기\r\n                let num = 0;\r\n                for(let i = 0; i < 2; i++ ){\r\n                    switch(this.test_ingredient_list[i]) {\r\n                        case 'card_1' :\r\n                            num = this.$refs.test_card_1[0].className.indexOf('test_border');\r\n                            if( num > 0 ) {\r\n                                this.$refs.test_card_1[0].className = this.$refs.test_card_1[0].className.substring(0, num-1);\r\n                            }\r\n                            break;\r\n                        case 'card_2' :\r\n                            num = this.$refs.test_card_2[0].className.indexOf('test_border');\r\n                            if( num > 0 ){\r\n                                this.$refs.test_card_2[0].className = this.$refs.test_card_2[0].className.substring(0, num-1);\r\n                            }\r\n                            break;\r\n                        case 'card_3' :\r\n                            num = this.$refs.test_card_3[0].className.indexOf('test_border');\r\n                            if( num > 0 ) {\r\n                                this.$refs.test_card_3[0].className = this.$refs.test_card_3[0].className.substring(0, num-1);\r\n                            }\r\n                            break;\r\n                        case 'card_4' :\r\n                            num = this.$refs.test_card_4[0].className.indexOf('test_border');\r\n                            if (num > 0 ) {\r\n                                this.$refs.test_card_4[0].className = this.$refs.test_card_4[0].className.substring(0, num-1);\r\n                            }\r\n                            break;\r\n                        case 'card_5' :\r\n                            num = this.$refs.test_card_5[0].className.indexOf('test_border');\r\n                            if( num > 0 ){\r\n                                this.$refs.test_card_5[0].className = this.$refs.test_card_5[0].className.substring(0, num-1);\r\n                            }\r\n                            break;\r\n                        case 'card_6' :\r\n                            num = this.$refs.test_card_6[0].className.indexOf('test_border');\r\n                            if( num > 0 ) {\r\n                                this.$refs.test_card_6[0].className = this.$refs.test_card_6[0].className.substring(0, num-1);\r\n                            }\r\n                            break;\r\n                        case 'card_7' :\r\n                            num = this.$refs.test_card_7[0].className.indexOf('test_border');\r\n                            if( num > 0 ) {\r\n                                this.$refs.test_card_7[0].className = this.$refs.test_card_7[0].className.substring(0, num-1);\r\n                            }\r\n                            break;\r\n                        case 'card_8' :\r\n                            num = this.$refs.test_card_8[0].className.indexOf('test_border');\r\n                            if ( num > 0 ) {\r\n                                this.$refs.test_card_8[0].className = this.$refs.test_card_8[0].className.substring(0, num-1);\r\n                            }\r\n                            break;\r\n                    }\r\n                }\r\n                this.test_ingredient_list = [];\r\n            }\r\n        },\r\n\r\n        open_result_modal_close : function() {\r\n            this.open_result_modal = false;\r\n        },\r\n\r\n        // 용병에게 물약 판매 전 코인 제시\r\n        select_adv_dis_coin : function(n) { \r\n            // 선택된 다른 코인은 표기 해제\r\n            let num = 0;\r\n            if( this.before_adv_discount_select_num > 0 ) {\r\n                switch(this.before_adv_discount_select_num){\r\n                    case '0':\r\n                        num = this.$refs.ad_0_ico[0].className.indexOf('selected');\r\n                        if( num > 0 ) {\r\n                            this.$refs.ad_0_ico[0].className = this.$refs.ad_0_ico[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case '1':\r\n                        num = this.$refs.ad_1_ico[0].className.indexOf('selected');\r\n                        if( num > 0 ) {\r\n                            this.$refs.ad_1_ico[0].className = this.$refs.ad_1_ico[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case '2':\r\n                        num = this.$refs.ad_2_ico[0].className.indexOf('selected');\r\n                        if( num > 0 ) {\r\n                            this.$refs.ad_2_ico[0].className = this.$refs.ad_2_ico[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case '3':\r\n                        num = this.$refs.ad_3_ico[0].className.indexOf('selected');\r\n                        if( num > 0 ) {\r\n                            this.$refs.ad_3_ico[0].className = this.$refs.ad_3_ico[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                }\r\n            }\r\n            // 선택한 코인 표기\r\n            let ref_str = '';\r\n            switch(n){\r\n                case '0':\r\n                    ref_str = this.$refs.ad_0_ico;\r\n                    break;\r\n                case '1':\r\n                    ref_str = this.$refs.ad_1_ico;\r\n                    break;\r\n                case '2':\r\n                    ref_str = this.$refs.ad_2_ico;\r\n                    break;\r\n                case '3':\r\n                    ref_str = this.$refs.ad_3_ico;\r\n                    break;\r\n            }\r\n            ref_str[0].className += \" selected\";\r\n            this.before_adv_discount_select_num = n;\r\n        },\r\n\r\n        // 용병에게 할인 카드 제시 결정 \r\n        adv_dis_confirm : function() {\r\n            // 보낼 데이터\r\n            // 유저키 , 유저색\r\n            // 내가 선택한 할인 제시 코인 번호 -> 유저데이터의 제시카드 false로 변경 -> 겜당 1회밖에 못쓰기 때문\r\n            if( this.before_adv_discount_select_num < 0 ) {\r\n                alert(\"제시카드가 선택되지 않았습니다!\\n제시카드를 선택해야합니다.\");\r\n                return;\r\n            }\r\n            let send_data = {\r\n                user_key : this.my_key,\r\n                color : this.my_color,\r\n                dis_coin_num : this.before_adv_discount_select_num,\r\n                room_name : this.room_name,\r\n            }\r\n\r\n            socket.emit(\"adv_dis_confirm\", send_data);\r\n            // 할인카드를 제시했으므로 변수 변경\r\n            this.im_end_discount = true;\r\n        },\r\n\r\n        // 용병에게 팔 물약의 값 선택하기\r\n        sell_potion_set_price : function(n){\r\n            this.my_selling_price = n;\r\n        },\r\n\r\n        // 용병에게 팔 금액 홀드하기\r\n        decision_sell_potion_price : function(){\r\n            //내 차례가 아니면 진행 불가\r\n            if( this.my_key != this.discount_coin_list[this.selling_turn].user_key ){\r\n                alert(\"내 차례가 아니면 확정할 수 없습니다\\n 조금 더 기다려주세요\");\r\n                return;\r\n            }\r\n            let send_data = {\r\n                user_key : this.my_key,\r\n                sell_price : this.my_selling_price,\r\n                room_name : this.room_name,\r\n            };\r\n            this.im_end_discount = false;\r\n            this.is_end_discount = false;\r\n            socket.emit(\"sell_price_confirm\", send_data);\r\n        },\r\n\r\n        // 용병에게 팔 물약 고르기\r\n        select_sell_potion_kind : function(kind) {\r\n            this.what_kind_sell_potion = kind;\r\n        },\r\n\r\n        // 물약 조제하기 :: \r\n        make_potion_preparation : function(data) {\r\n            \r\n            // test_ingredient_list 의 2가지 재료를 사용 --> 서버에서 재료 제거\r\n            // what_kind_sell_potion -> 보내서 정답과 비교(red_1,0/ green_1/0, blue_1/0)\r\n            // user_key , \r\n            let send_data = {\r\n                user_key : this.my_key,\r\n                user_color : this.my_color,\r\n                card_list : data,\r\n                what_kind_sell_potion : this.what_kind_sell_potion, \r\n                selling_turn : this.selling_turn,\r\n                room_name   : this.room_name,\r\n            };\r\n\r\n            this.what_kind_sell_potion = '';\r\n            socket.emit(\"sell_to_adv_potion\", send_data);\r\n        },\r\n\r\n        // 용병에게 물약을 판매하는 변수에 값 넣기\r\n        hold_before_adv_discount_num : function(data) {\r\n            this.before_adv_discount_select_num = data;\r\n        },\r\n\r\n        // 논문 발표에서 원소를 선택할 함수.\r\n        theory_element_select : function(n) {\r\n        \r\n            // 이미 선택된 다른 것이 있다면 해제하고 새로 고른 것을 선택해야함\r\n            let num = 0;\r\n            if( this.before_theory_ele_select_num > 0){\r\n                switch(this.before_theory_ele_select_num){\r\n                    case 1:\r\n                        num = this.$refs.ele_1[0].className.indexOf('selected');\r\n                        if( num > 0 ) {\r\n                            this.$refs.ele_1[0].className = this.$refs.ele_1[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case 2:\r\n                        num = this.$refs.ele_2[0].className.indexOf('selected');\r\n                        if( num > 0 ) {\r\n                            this.$refs.ele_2[0].className = this.$refs.ele_2[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case 3:\r\n                        num = this.$refs.ele_3[0].className.indexOf('selected');\r\n                        if( num > 0 ) {\r\n                            this.$refs.ele_3[0].className = this.$refs.ele_3[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case 4:\r\n                        num = this.$refs.ele_4[0].className.indexOf('selected');\r\n                        if( num > 0 ) {\r\n                            this.$refs.ele_4[0].className = this.$refs.ele_4[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case 5:\r\n                        num = this.$refs.ele_5[0].className.indexOf('selected');\r\n                        if( num > 0 ) {\r\n                            this.$refs.ele_5[0].className = this.$refs.ele_5[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case 6:\r\n                        num = this.$refs.ele_6[0].className.indexOf('selected');\r\n                        if( num > 0 ) {\r\n                            this.$refs.ele_6[0].className = this.$refs.ele_6[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case 7:\r\n                        num = this.$refs.ele_7[0].className.indexOf('selected');\r\n                        if( num > 0 ) {\r\n                            this.$refs.ele_7[0].className = this.$refs.ele_7[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case 8:\r\n                        num = this.$refs.ele_8[0].className.indexOf('selected');\r\n                        if( num > 0 ) {\r\n                            this.$refs.ele_8[0].className = this.$refs.ele_8[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                }\r\n            }\r\n\r\n            // 현재 선택된 값을 수정\r\n            let ref_str = '';\r\n            switch(n){\r\n                case 1:\r\n                    ref_str = this.$refs.ele_1;\r\n                    break;\r\n                case 2:\r\n                    ref_str = this.$refs.ele_2;\r\n                    break;\r\n                case 3:\r\n                    ref_str = this.$refs.ele_3;\r\n                    break;\r\n                case 4:\r\n                    ref_str = this.$refs.ele_4;\r\n                    break;\r\n                case 5:\r\n                    ref_str = this.$refs.ele_5;\r\n                    break;\r\n                case 6:\r\n                    ref_str = this.$refs.ele_6;\r\n                    break;\r\n                case 7:\r\n                    ref_str = this.$refs.ele_7;\r\n                    break;\r\n                case 8:\r\n                    ref_str = this.$refs.ele_8;\r\n                    break;\r\n            }\r\n            \r\n            // 현재 변수 저장\r\n            this.before_theory_ele_select_num = n;\r\n            ref_str[0].className += \" selected\";\r\n        },\r\n\r\n        //논문 발표에서 고를 인자를 선택하는 함수\r\n        theory_stamp_select : function(n) {\r\n            // 이미 선택된 것이 있다면 해제하고 새로 고른 것을 선택해야 함\r\n            // 나의 색에 따라 나와야하는 stamp의 모양이 달라야함...!\r\n            let num = 0;\r\n            if( this.before_theory_stm_select_num > 0){\r\n                switch(this.before_theory_stm_select_num){\r\n                    case 1:\r\n                        num = this.$refs.stm_1[0].className.indexOf('selected');\r\n                        if( num > 0 ) {\r\n                            this.$refs.stm_1[0].className = this.$refs.stm_1[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case 2:\r\n                        num = this.$refs.stm_2[0].className.indexOf('selected');\r\n                        if( num > 0 ) {\r\n                            this.$refs.stm_2[0].className = this.$refs.stm_2[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case 3:\r\n                        num = this.$refs.stm_3[0].className.indexOf('selected');\r\n                        if( num > 0 ) {\r\n                            this.$refs.stm_3[0].className = this.$refs.stm_3[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case 4:\r\n                        num = this.$refs.stm_4[0].className.indexOf('selected');\r\n                        if( num > 0 ) {\r\n                            this.$refs.stm_4[0].className = this.$refs.stm_4[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case 5:\r\n                        num = this.$refs.stm_5[0].className.indexOf('selected');\r\n                        if( num > 0 ) {\r\n                            this.$refs.stm_5[0].className = this.$refs.stm_5[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case 6:\r\n                        num = this.$refs.stm_6[0].className.indexOf('selected');\r\n                        if( num > 0 ) {\r\n                            this.$refs.stm_6[0].className = this.$refs.stm_6[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case 7:\r\n                        num = this.$refs.stm_7[0].className.indexOf('selected');\r\n                        if( num > 0 ) {\r\n                            this.$refs.stm_7[0].className = this.$refs.stm_7[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case 8:\r\n                        num = this.$refs.stm_8[0].className.indexOf('selected');\r\n                        if( num > 0 ) {\r\n                            this.$refs.stm_8[0].className = this.$refs.stm_8[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case 9:\r\n                        num = this.$refs.stm_9[0].className.indexOf('selected');\r\n                        if( num > 0 ) {\r\n                            this.$refs.stm_9[0].className = this.$refs.stm_9[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case 10:\r\n                        num = this.$refs.stm_10[0].className.indexOf('selected');\r\n                        if( num > 0 ) {\r\n                            this.$refs.stm_10[0].className = this.$refs.stm_10[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case 11:\r\n                        num = this.$refs.stm_11[0].className.indexOf('selected');\r\n                        if( num > 0 ) {\r\n                            this.$refs.stm_11[0].className = this.$refs.stm_11[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                }\r\n            }\r\n\r\n            // 현재 선택된 값을 수정\r\n            let ref_str = '';\r\n            switch(n){\r\n                case 1:\r\n                    ref_str = this.$refs.stm_1;\r\n                    break;\r\n                case 2:\r\n                    ref_str = this.$refs.stm_2;\r\n                    break;\r\n                case 3:\r\n                    ref_str = this.$refs.stm_3;\r\n                    break;\r\n                case 4:\r\n                    ref_str = this.$refs.stm_4;\r\n                    break;\r\n                case 5:\r\n                    ref_str = this.$refs.stm_5;\r\n                    break;\r\n                case 6:\r\n                    ref_str = this.$refs.stm_6;\r\n                    break;\r\n                case 7:\r\n                    ref_str = this.$refs.stm_7;\r\n                    break;\r\n                case 8:\r\n                    ref_str = this.$refs.stm_8;\r\n                    break;\r\n                case 9:\r\n                    ref_str = this.$refs.stm_9;\r\n                    break;\r\n                case 10:\r\n                    ref_str = this.$refs.stm_10;\r\n                    break;\r\n                case 11:\r\n                    ref_str = this.$refs.stm_11;\r\n                    break;\r\n            }\r\n            \r\n            // 현재 변수 저장\r\n            this.before_theory_stm_select_num = n;\r\n            ref_str[0].className += \" selected\";\r\n        },\r\n\r\n        // 논문 반박/발표 모달에서 발표/반박할 재료를 고르는 함수\r\n        theory_presentation : function(n) {\r\n            this.now_select_ingre = n;\r\n            this.ingre_presentation_modal_onoff = true;\r\n        },\r\n\r\n        // 발표하기 버튼으로 실행될 함수\r\n        theory_confirm : function(){\r\n            let num = 0;\r\n            //발표 \r\n            if( this.board_6_selected == true ){\r\n                // 넘겨야 하는 정보\r\n                // 재료번호(ingre), 원소번호(ele), 스탬프 번호(stm), 유저키, 유저색 ,큐브순서, 보드순서\r\n                let send_data = {\r\n                    element : this.before_theory_ele_select_num,\r\n                    ingre : this.now_select_ingre,\r\n                    user_key : this.my_key,\r\n                    user_color : this.my_color,\r\n                    stamp : this.before_theory_stm_select_num,\r\n                    cube_order : this.board_cube_order,\r\n                    board_order : this.board_order,\r\n                    room_name : this.room_name,\r\n                };\r\n                \r\n                socket.emit(\"presentation_theory\", send_data);\r\n                \r\n                // 선택된 재료의 selected 초기화\r\n                switch(this.before_theory_ele_select_num){\r\n                    case 1:\r\n                        num = this.$refs.ele_1[0].className.indexOf('selected');\r\n                        if( num > 0 ) {\r\n                            this.$refs.ele_1[0].className = this.$refs.ele_1[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case 2:\r\n                        num = this.$refs.ele_2[0].className.indexOf('selected');\r\n                        if( num > 0 ) {\r\n                            this.$refs.ele_2[0].className = this.$refs.ele_2[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case 3:\r\n                        num = this.$refs.ele_3[0].className.indexOf('selected');\r\n                        if( num > 0 ) {\r\n                            this.$refs.ele_3[0].className = this.$refs.ele_3[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case 4:\r\n                        num = this.$refs.ele_4[0].className.indexOf('selected');\r\n                        if( num > 0 ) {\r\n                            this.$refs.ele_4[0].className = this.$refs.ele_4[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case 5:\r\n                        num = this.$refs.ele_5[0].className.indexOf('selected');\r\n                        if( num > 0 ) {\r\n                            this.$refs.ele_5[0].className = this.$refs.ele_5[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case 6:\r\n                        num = this.$refs.ele_6[0].className.indexOf('selected');\r\n                        if( num > 0 ) {\r\n                            this.$refs.ele_6[0].className = this.$refs.ele_6[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case 7:\r\n                        num = this.$refs.ele_7[0].className.indexOf('selected');\r\n                        if( num > 0 ) {\r\n                            this.$refs.ele_7[0].className = this.$refs.ele_7[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case 8:\r\n                        num = this.$refs.ele_8[0].className.indexOf('selected');\r\n                        if( num > 0 ) {\r\n                            this.$refs.ele_8[0].className = this.$refs.ele_8[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                }\r\n                switch(this.before_theory_stm_select_num){\r\n                    case 1:\r\n                        num = this.$refs.stm_1[0].className.indexOf('selected');\r\n                        if( num > 0 ) {\r\n                            this.$refs.stm_1[0].className = this.$refs.stm_1[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case 2:\r\n                        num = this.$refs.stm_2[0].className.indexOf('selected');\r\n                        if( num > 0 ) {\r\n                            this.$refs.stm_2[0].className = this.$refs.stm_2[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case 3:\r\n                        num = this.$refs.stm_3[0].className.indexOf('selected');\r\n                        if( num > 0 ) {\r\n                            this.$refs.stm_3[0].className = this.$refs.stm_3[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case 4:\r\n                        num = this.$refs.stm_4[0].className.indexOf('selected');\r\n                        if( num > 0 ) {\r\n                            this.$refs.stm_4[0].className = this.$refs.stm_4[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case 5:\r\n                        num = this.$refs.stm_5[0].className.indexOf('selected');\r\n                        if( num > 0 ) {\r\n                            this.$refs.stm_5[0].className = this.$refs.stm_5[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case 6:\r\n                        num = this.$refs.stm_6[0].className.indexOf('selected');\r\n                        if( num > 0 ) {\r\n                            this.$refs.stm_6[0].className = this.$refs.stm_6[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case 7:\r\n                        num = this.$refs.stm_7[0].className.indexOf('selected');\r\n                        if( num > 0 ) {\r\n                            this.$refs.stm_7[0].className = this.$refs.stm_7[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case 8:\r\n                        num = this.$refs.stm_8[0].className.indexOf('selected');\r\n                        if( num > 0 ) {\r\n                            this.$refs.stm_8[0].className = this.$refs.stm_8[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case 9:\r\n                        num = this.$refs.stm_9[0].className.indexOf('selected');\r\n                        if( num > 0 ) {\r\n                            this.$refs.stm_9[0].className = this.$refs.stm_9[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case 10:\r\n                        num = this.$refs.stm_10[0].className.indexOf('selected');\r\n                        if( num > 0 ) {\r\n                            this.$refs.stm_10[0].className = this.$refs.stm_10[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case 11:\r\n                        num = this.$refs.stm_11[0].className.indexOf('selected');\r\n                        if( num > 0 ) {\r\n                            this.$refs.stm_11[0].className = this.$refs.stm_11[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                }\r\n                // 선택된 재료 초기화\r\n                this.before_theory_ele_select_num = 0;\r\n                this.before_theory_stm_select_num = 0;\r\n            }\r\n            //반박\r\n            else if ( this.board_5_selected == true ){\r\n                // 넘겨야 하는 정보\r\n                // 재료번호(ingre), 틀리다고 주장할 원소 색(ori), 유저키(user_key), 큐브순서, 보드순서\r\n                let send_data = {\r\n                    ingre : this.now_select_ingre,\r\n                    ori : this.before_refute_ori_select_num,\r\n                    user_key : this.my_key,\r\n                    cube_order : this.board_cube_order,\r\n                    board_order : this.board_order,\r\n                    room_name : this.room_name,\r\n                };\r\n                //console.log(send_data);\r\n                socket.emit(\"refuting_theory_data\", send_data);\r\n                switch(this.before_refute_ori_select_num){\r\n                    case 1:\r\n                        num = this.$refs.ele_core_1[0].className.indexOf('selected');\r\n                        if( num > 0 ) {\r\n                            this.$refs.ele_core_1[0].className = this.$refs.ele_core_1[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case 2:\r\n                        num = this.$refs.ele_core_2[0].className.indexOf('selected');\r\n                        if( num > 0 ) {\r\n                            this.$refs.ele_core_2[0].className = this.$refs.ele_core_2[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case 3:\r\n                        num = this.$refs.ele_core_3[0].className.indexOf('selected');\r\n                        if( num > 0 ) {\r\n                            this.$refs.ele_core_3[0].className = this.$refs.ele_core_3[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                }\r\n                // 변수 초기화\r\n                this.before_refute_ori_select_num = 0;\r\n            }\r\n            \r\n            // 원소 발표/반박 모달 끄기!\r\n            this.ingre_presentation_modal = false;\r\n        },\r\n\r\n        //논문 반박에서 어떤 원소를 반박할 건지 선택하는 함수\r\n        theory_origin_select : function(n){\r\n            // 이미 선택된 다른 것이 있다면 해제하고 새로 고른 것을 선택해야함\r\n            let num = 0;\r\n            if( this.before_refute_ori_select_num > 0){\r\n                switch(this.before_refute_ori_select_num){\r\n                    case 1:\r\n                        num = this.$refs.ele_core_1[0].className.indexOf('selected');\r\n                        if( num > 0 ) {\r\n                            this.$refs.ele_core_1[0].className = this.$refs.ele_core_1[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case 2:\r\n                        num = this.$refs.ele_core_2[0].className.indexOf('selected');\r\n                        if( num > 0 ) {\r\n                            this.$refs.ele_core_2[0].className = this.$refs.ele_core_2[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case 3:\r\n                        num = this.$refs.ele_core_3[0].className.indexOf('selected');\r\n                        if( num > 0 ) {\r\n                            this.$refs.ele_core_3[0].className = this.$refs.ele_core_3[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                }\r\n            }\r\n\r\n            // 현재 선택된 값을 수정\r\n            let ref_str = '';\r\n            switch(n){\r\n                case 1:\r\n                    ref_str = this.$refs.ele_core_1;\r\n                    break;\r\n                case 2:\r\n                    ref_str = this.$refs.ele_core_2;\r\n                    break;\r\n                case 3:\r\n                    ref_str = this.$refs.ele_core_3;\r\n                    break;\r\n            }\r\n            \r\n            // 현재 변수 저장\r\n            this.before_refute_ori_select_num = n;\r\n            ref_str[0].className += \" selected\";\r\n        },\r\n\r\n        check_refute_info : function() {\r\n            //서버에 체크 데이터 전송\r\n            socket.emit(\"check_refute_info\", this.reciving_data);\r\n\r\n            // 변수 초기화\r\n            this.reciving_data = '';\r\n            // 반박 성공확인창 끄기\r\n            this.success_refute_modal_onoff = false;\r\n        },\r\n\r\n        click_exhibition_potion : function(potion_num) {          \r\n            \r\n            if( this.my_turn != true ) {\r\n                alert(\"내 차례에 전시할 수 있습니다!\\n차례를 기다려주세요!\");\r\n                return;\r\n            }\r\n            \r\n            // 발표할 원소번호를 저장하고\r\n            this.exhibition_potion_num = potion_num;\r\n            // 발표할 모달을 켜기!\r\n            this.exhibition_check_modal_onoff = true;\r\n\r\n            //console.log(this.my_data);\r\n        },\r\n\r\n        // 물약 발표회에서 발표할 물약의 재료 2가지를 선택할 함수\r\n        // name :: card_1~8\r\n        exhibit_select_ingre : function(name) {\r\n            // 이미 2가지가 선택되어 있으면 가장 먼저 들어온 1개를 제거하고 마지막에 들어온 한개를 진행\r\n            if( this.test_ingredient_list.length == 2){\r\n                // 먼저 들어온 1개를 제거\r\n                let before_name = this.test_ingredient_list.shift();\r\n                let num = 0;\r\n                switch(before_name) {\r\n                    case 'card_1' :\r\n                        num = this.$refs.exhibit_card_1[0].className.indexOf('test_border');\r\n                        if( num > 0 ) {\r\n                            this.$refs.exhibit_card_1[0].className = this.$refs.exhibit_card_1[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case 'card_2' :\r\n                        num = this.$refs.exhibit_card_2[0].className.indexOf('test_border');\r\n                        if( num > 0 ){\r\n                            this.$refs.exhibit_card_2[0].className = this.$refs.exhibit_card_2[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case 'card_3' :\r\n                        num = this.$refs.exhibit_card_3[0].className.indexOf('test_border');\r\n                        if( num > 0 ) {\r\n                            this.$refs.exhibit_card_3[0].className = this.$refs.exhibit_card_3[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case 'card_4' :\r\n                        num = this.$refs.exhibit_card_4[0].className.indexOf('test_border');\r\n                        if (num > 0 ) {\r\n                            this.$refs.exhibit_card_4[0].className = this.$refs.exhibit_card_4[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case 'card_5' :\r\n                        num = this.$refs.exhibit_card_5[0].className.indexOf('test_border');\r\n                        if( num > 0 ){\r\n                            this.$refs.exhibit_card_5[0].className = this.$refs.exhibit_card_5[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case 'card_6' :\r\n                        num = this.$refs.exhibit_card_6[0].className.indexOf('test_border');\r\n                        if( num > 0 ) {\r\n                            this.$refs.exhibit_card_6[0].className = this.$refs.exhibit_card_6[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case 'card_7' :\r\n                        num = this.$refs.exhibit_card_7[0].className.indexOf('test_border');\r\n                        if( num > 0 ) {\r\n                            this.$refs.exhibit_card_7[0].className = this.$refs.exhibit_card_7[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case 'card_8' :\r\n                        num = this.$refs.exhibit_card_8[0].className.indexOf('test_border');\r\n                        if ( num > 0 ) {\r\n                            this.$refs.exhibit_card_8[0].className = this.$refs.exhibit_card_8[0].className.substring(0, num-1);\r\n                        }\r\n                        break;                                  \r\n                }\r\n            }\r\n            // 변수에 추가\r\n            this.test_ingredient_list.push(name);\r\n            let ref_str = '';\r\n            switch(name){\r\n                case 'card_1':\r\n                    ref_str = this.$refs.exhibit_card_1;\r\n                    break;\r\n                case 'card_2':\r\n                    ref_str = this.$refs.exhibit_card_2;\r\n                    break;\r\n                case 'card_3':\r\n                    ref_str = this.$refs.exhibit_card_3;\r\n                    break;\r\n                case 'card_4':\r\n                    ref_str = this.$refs.exhibit_card_4;\r\n                    break;\r\n                case 'card_5':\r\n                    ref_str = this.$refs.exhibit_card_5;\r\n                    break;\r\n                case 'card_6':\r\n                    ref_str = this.$refs.exhibit_card_6;\r\n                    break;\r\n                case 'card_7':\r\n                    ref_str = this.$refs.exhibit_card_7;\r\n                    break;\r\n                case 'card_8':\r\n                    ref_str = this.$refs.exhibit_card_8;\r\n                    break;\r\n            }\r\n            ref_str[0].className += \" test_border\";\r\n        },\r\n\r\n        // 물약 전시회에서 시연할 재료를 고르고 결정버튼을 눌렀을 떄 실행될 함수\r\n        click_exhibit_ingre : function() {\r\n            if( this.test_ingredient_list.length != 2 ){\r\n                alert(\"재료카드 2장을 선택해주세요!\");\r\n                return;\r\n            }\r\n            let exhibit_potion = '';\r\n            switch(this.exhibition_potion_num){\r\n                case '1':\r\n                  exhibit_potion = 'red_1';\r\n                  break;\r\n                case '2':\r\n                  exhibit_potion = 'red_0';\r\n                  break;\r\n                case '3':\r\n                  exhibit_potion = 'green_1';\r\n                  break;\r\n                case '4':\r\n                  exhibit_potion = 'green_0';\r\n                  break;\r\n                case '5':\r\n                  exhibit_potion = 'blue_1';\r\n                  break;\r\n                case '6':\r\n                  exhibit_potion = 'blue_0';\r\n                  break;\r\n              }\r\n\r\n            let send_data = {\r\n                user_key : this.my_key,\r\n                user_color : this.my_color,\r\n                room_name  : this.room_name,\r\n                card_list : this.test_ingredient_list,\r\n                exhibit_potion : exhibit_potion,\r\n                board_order : this.board_order,\r\n                cube_order : this.board_cube_order,\r\n            }\r\n            \r\n            // 발표!\r\n            socket.emit(\"exhibit_ingre\", send_data);\r\n            let num = 0;\r\n            // 초기화전 test_boarder 초기화\r\n            for(let i = 0; i < 2; i++ ){\r\n                switch(this.test_ingredient_list[i]) {\r\n                    case 'card_1' :\r\n                        num = this.$refs.test_card_1[0].className.indexOf('test_border');\r\n                        if( num > 0 ) {\r\n                            this.$refs.test_card_1[0].className = this.$refs.test_card_1[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case 'card_2' :\r\n                        num = this.$refs.test_card_2[0].className.indexOf('test_border');\r\n                        if( num > 0 ){\r\n                            this.$refs.test_card_2[0].className = this.$refs.test_card_2[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case 'card_3' :\r\n                        num = this.$refs.test_card_3[0].className.indexOf('test_border');\r\n                        if( num > 0 ) {\r\n                            this.$refs.test_card_3[0].className = this.$refs.test_card_3[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case 'card_4' :\r\n                        num = this.$refs.test_card_4[0].className.indexOf('test_border');\r\n                        if (num > 0 ) {\r\n                            this.$refs.test_card_4[0].className = this.$refs.test_card_4[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case 'card_5' :\r\n                        num = this.$refs.test_card_5[0].className.indexOf('test_border');\r\n                        if( num > 0 ){\r\n                            this.$refs.test_card_5[0].className = this.$refs.test_card_5[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case 'card_6' :\r\n                        num = this.$refs.test_card_6[0].className.indexOf('test_border');\r\n                        if( num > 0 ) {\r\n                            this.$refs.test_card_6[0].className = this.$refs.test_card_6[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case 'card_7' :\r\n                        num = this.$refs.test_card_7[0].className.indexOf('test_border');\r\n                        if( num > 0 ) {\r\n                            this.$refs.test_card_7[0].className = this.$refs.test_card_7[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case 'card_8' :\r\n                        num = this.$refs.test_card_8[0].className.indexOf('test_border');\r\n                        if ( num > 0 ) {\r\n                            this.$refs.test_card_8[0].className = this.$refs.test_card_8[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                }\r\n            }\r\n            // 선택한 재료카드 초기화\r\n            this.test_ingredient_list = [];\r\n            // 발표할 원소번호 초기화\r\n            this.exhibition_potion_num = -1;\r\n        },\r\n\r\n        // 게임 종료 확인\r\n        game_end_confirm : function() {\r\n            // 종료 확인을 서버에 알림\r\n            let send_data = {\r\n                room_name : this.room_name,\r\n            };\r\n            socket.emit(\"game_end_confirm\", send_data);\r\n            this.$router.push({\r\n                name : 'end_page',\r\n                params : {\r\n                    game_result : JSON.stringify(this.game_end_data),\r\n                    name : this.my_name,\r\n                    room_name : this.room_name,\r\n                }\r\n            });\r\n        }\r\n\r\n    },\r\n\r\n    \r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}