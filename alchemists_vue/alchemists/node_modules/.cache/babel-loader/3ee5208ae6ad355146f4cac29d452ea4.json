{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, normalizeStyle as _normalizeStyle, createBlock as _createBlock, vModelText as _vModelText, withDirectives as _withDirectives, withKeys as _withKeys, createTextVNode as _createTextVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-6294ced9\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  id: \"room_title\"\n};\nconst _hoisted_2 = {\n  class: \"entrans\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"inline name\"\n};\n\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"inline name\"\n}, \"이름\", -1\n/* HOISTED */\n));\n\nconst _hoisted_5 = {\n  class: \"inline user_name\"\n};\nconst _hoisted_6 = {\n  class: \"choose_color_section\"\n};\nconst _hoisted_7 = {\n  class: \"user_color_announce\"\n};\nconst _hoisted_8 = {\n  key: 0,\n  class: \"button_area\"\n};\nconst _hoisted_9 = [\"onClick\"];\nconst _hoisted_10 = [\"onClick\"];\nconst _hoisted_11 = [\"onClick\"];\nconst _hoisted_12 = [\"onClick\"];\nconst _hoisted_13 = {\n  key: 1\n};\nconst _hoisted_14 = {\n  class: \"overlay_ready\"\n};\n\nconst _hoisted_15 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", {\n  id: \"check_label\"\n}, \"준비 완료\", -1\n/* HOISTED */\n));\n\nconst _hoisted_16 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", null, null, -1\n/* HOISTED */\n));\n\nconst _hoisted_17 = /*#__PURE__*/_createTextVNode(\" 보내기 \");\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_b_col = _resolveComponent(\"b-col\");\n\n  const _component_b_row = _resolveComponent(\"b-row\");\n\n  const _component_b_icon_circle_fill = _resolveComponent(\"b-icon-circle-fill\");\n\n  const _component_b_icon = _resolveComponent(\"b-icon\");\n\n  const _component_b_iconstack = _resolveComponent(\"b-iconstack\");\n\n  const _component_b_overlay = _resolveComponent(\"b-overlay\");\n\n  const _component_b_container = _resolveComponent(\"b-container\");\n\n  const _component_b_button = _resolveComponent(\"b-button\");\n\n  return _openBlock(), _createBlock(_component_b_container, {\n    id: \"game_lobby\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_b_row, null, {\n      default: _withCtx(() => [_createVNode(_component_b_col, null, {\n        default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_1, _toDisplayString($data.room_name), 1\n        /* TEXT */\n        )]),\n        _: 1\n        /* STABLE */\n\n      })]),\n      _: 1\n      /* STABLE */\n\n    }), _createVNode(_component_b_row, null, {\n      default: _withCtx(() => [_createVNode(_component_b_col, null, {\n        default: _withCtx(() => [_createVNode(_component_b_container, {\n          id: \"room_back\"\n        }, {\n          default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(Math.ceil($data.users.length / 2), i => {\n            return _openBlock(), _createBlock(_component_b_row, {\n              \"align-v\": \"stretch\",\n              key: i\n            }, {\n              default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.users.slice((i - 1) * 2, i * 2), entrans => {\n                return _openBlock(), _createBlock(_component_b_col, {\n                  sm: \"6\",\n                  key: entrans\n                }, {\n                  default: _withCtx(() => [_createVNode(_component_b_overlay, {\n                    show: entrans.is_ready,\n                    rounded: \"sm\"\n                  }, {\n                    overlay: _withCtx(() => [_createElementVNode(\"div\", _hoisted_14, [_createVNode(_component_b_iconstack, {\n                      \"font-scale\": \"5\"\n                    }, {\n                      default: _withCtx(() => [_createVNode(_component_b_icon, {\n                        stacked: \"\",\n                        icon: \"square\"\n                      }), _createVNode(_component_b_icon, {\n                        stacked: \"\",\n                        icon: \"check\"\n                      })]),\n                      _: 1\n                      /* STABLE */\n\n                    }), _hoisted_15])]),\n                    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_2, [entrans.is_master === 'true' ? (_openBlock(), _createElementBlock(\"p\", _hoisted_3, \"방장\")) : _createCommentVNode(\"v-if\", true), _hoisted_4, _createElementVNode(\"p\", _hoisted_5, _toDisplayString(entrans.user_name), 1\n                    /* TEXT */\n                    ), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"p\", _hoisted_7, _toDisplayString($data.toggle_color_message), 1\n                    /* TEXT */\n                    ), $data.my_key === entrans.my_key ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [_createElementVNode(\"button\", {\n                      class: \"red color\",\n                      onClick: $event => $options.choose_color('red', entrans.user_name, entrans.user_key),\n                      style: _normalizeStyle({\n                        display: $data.color_button\n                      })\n                    }, null, 12\n                    /* STYLE, PROPS */\n                    , _hoisted_9), _createElementVNode(\"button\", {\n                      class: \"blue color\",\n                      onClick: $event => $options.choose_color('blue', entrans.user_name, entrans.user_key),\n                      style: _normalizeStyle({\n                        display: $data.color_button\n                      })\n                    }, null, 12\n                    /* STYLE, PROPS */\n                    , _hoisted_10), _createElementVNode(\"button\", {\n                      class: \"black color\",\n                      onClick: $event => $options.choose_color('black', entrans.user_name, entrans.user_key),\n                      style: _normalizeStyle({\n                        display: $data.color_button\n                      })\n                    }, null, 12\n                    /* STYLE, PROPS */\n                    , _hoisted_11), _createElementVNode(\"button\", {\n                      class: \"white color\",\n                      onClick: $event => $options.choose_color('white', entrans.user_name, entrans.user_key),\n                      style: _normalizeStyle({\n                        display: $data.color_button\n                      })\n                    }, null, 12\n                    /* STYLE, PROPS */\n                    , _hoisted_12), _createElementVNode(\"button\", {\n                      class: \"back_to_choose_color\",\n                      onClick: _cache[0] || (_cache[0] = (...args) => $options.back_choose_color && $options.back_choose_color(...args)),\n                      style: _normalizeStyle({\n                        display: $data.back_button,\n                        background: entrans.user_color\n                      })\n                    }, null, 4\n                    /* STYLE */\n                    ), _createElementVNode(\"p\", {\n                      class: \"announce\",\n                      style: _normalizeStyle({\n                        display: $data.back_button\n                      })\n                    }, \" 한 번 더 누르면 고른 색이 취소됩니다. \", 4\n                    /* STYLE */\n                    )])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_13, [_createVNode(_component_b_icon_circle_fill, {\n                      style: _normalizeStyle({\n                        background: entrans.user_color\n                      })\n                    }, null, 8\n                    /* PROPS */\n                    , [\"style\"])]))])])]),\n                    _: 2\n                    /* DYNAMIC */\n\n                  }, 1032\n                  /* PROPS, DYNAMIC_SLOTS */\n                  , [\"show\"])]),\n                  _: 2\n                  /* DYNAMIC */\n\n                }, 1024\n                /* DYNAMIC_SLOTS */\n                );\n              }), 128\n              /* KEYED_FRAGMENT */\n              ))]),\n              _: 2\n              /* DYNAMIC */\n\n            }, 1024\n            /* DYNAMIC_SLOTS */\n            );\n          }), 128\n          /* KEYED_FRAGMENT */\n          ))]),\n          _: 1\n          /* STABLE */\n\n        })]),\n        _: 1\n        /* STABLE */\n\n      })]),\n      _: 1\n      /* STABLE */\n\n    }), _createVNode(_component_b_row, null, {\n      default: _withCtx(() => [_createVNode(_component_b_col, {\n        sm: \"8\"\n      }, {\n        default: _withCtx(() => [_withDirectives(_createElementVNode(\"textarea\", {\n          id: \"chat_area\",\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.textarea = $event),\n          disabled: \"\"\n        }, null, 512\n        /* NEED_PATCH */\n        ), [[_vModelText, $data.textarea]]), _hoisted_16, _withDirectives(_createElementVNode(\"input\", {\n          id: \"message_area\",\n          \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.message = $event),\n          onKeyup: _cache[3] || (_cache[3] = _withKeys((...args) => $options.sending_message && $options.sending_message(...args), [\"enter\"]))\n        }, null, 544\n        /* HYDRATE_EVENTS, NEED_PATCH */\n        ), [[_vModelText, $data.message]]), _createVNode(_component_b_button, {\n          pill: \"\",\n          id: \"sending\",\n          onClick: $options.sending_message\n        }, {\n          default: _withCtx(() => [_hoisted_17]),\n          _: 1\n          /* STABLE */\n\n        }, 8\n        /* PROPS */\n        , [\"onClick\"])]),\n        _: 1\n        /* STABLE */\n\n      }), _createVNode(_component_b_col, null, {\n        default: _withCtx(() => [_createVNode(_component_b_button, {\n          pill: \"\",\n          size: \"lg\",\n          id: \"game_start\",\n          onClick: $options.game_start\n        }, {\n          default: _withCtx(() => [_createTextVNode(_toDisplayString(this.toggle_game_start), 1\n          /* TEXT */\n          )]),\n          _: 1\n          /* STABLE */\n\n        }, 8\n        /* PROPS */\n        , [\"onClick\"])]),\n        _: 1\n        /* STABLE */\n\n      })]),\n      _: 1\n      /* STABLE */\n\n    })]),\n    _: 1\n    /* STABLE */\n\n  });\n}","map":{"version":3,"mappings":"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","names":["id","class","_createElementVNode","_createBlock","_component_b_container","_createVNode","_component_b_row","_component_b_col","_toDisplayString","$data","_createElementBlock","_Fragment","_renderList","Math","ceil","length","i","key","slice","entrans","sm","_component_b_overlay","show","is_ready","rounded","overlay","_component_b_iconstack","_component_b_icon","stacked","icon","_hoisted_15","is_master","_hoisted_4","user_name","my_key","onClick","$options","user_key","style","display","background","user_color","_hoisted_13","_component_b_icon_circle_fill","$event","disabled","_hoisted_16","onKeyup","_component_b_button","pill","size","toggle_game_start"],"sourceRoot":"","sources":["E:\\web\\alchemists_vue\\alchemists\\src\\components\\game_lobby.vue"],"sourcesContent":["<template>\r\n    <b-container id=\"game_lobby\">\r\n      <b-row>\r\n        <b-col>\r\n          <div id=\"room_title\">\r\n              {{ room_name }}\r\n          </div>\r\n        </b-col>\r\n      </b-row>\r\n      <b-row>\r\n        <b-col>\r\n          <b-container id=\"room_back\">\r\n            <b-row align-v=\"stretch\" v-for=\"i in Math.ceil(users.length / 2 )\" :key=\"i\">\r\n              <b-col sm=\"6\" v-for=\"entrans in users.slice((i - 1) * 2, i * 2)\" :key=\"entrans\">\r\n                <b-overlay :show=\"entrans.is_ready\" rounded=\"sm\" >\r\n                  <div class=\"entrans\">\r\n                      <p class=\"inline name\" v-if=\"entrans.is_master === 'true'\">방장</p>\r\n                      <p class=\"inline name\">이름</p>\r\n                      <p class=\"inline user_name\"> {{ entrans.user_name }} </p>\r\n                      \r\n                      <div class=\"choose_color_section\">\r\n                        <p class=\"user_color_announce\"> {{ toggle_color_message }} </p>\r\n                        <div class=\"button_area\" v-if=\"my_key === entrans.my_key\">\r\n                          <button class=\"red color\"   v-on:click=\"choose_color('red', entrans.user_name, entrans.user_key)\" v-bind:style=\"{display : color_button }\"></button>\r\n                          <button class=\"blue color\"  v-on:click=\"choose_color('blue', entrans.user_name, entrans.user_key)\" v-bind:style=\"{display : color_button }\"></button>\r\n                          <button class=\"black color\" v-on:click=\"choose_color('black', entrans.user_name, entrans.user_key)\" v-bind:style=\"{display : color_button }\"></button>\r\n                          <button class=\"white color\" v-on:click=\"choose_color('white', entrans.user_name, entrans.user_key)\" v-bind:style=\"{display : color_button }\"></button>\r\n                          <button class=\"back_to_choose_color\" v-on:click=\"back_choose_color\" v-bind:style=\"{display : back_button , background: entrans.user_color }\"></button>\r\n                          <p class=\"announce\" v-bind:style=\"{display : back_button }\"> 한 번 더 누르면 고른 색이 취소됩니다. </p>\r\n                        </div>\r\n                        <div v-else>\r\n                          <b-icon-circle-fill v-bind:style=\"{ background : entrans.user_color }\"/>\r\n                        </div>\r\n                      </div>\r\n                  </div>\r\n                  <template #overlay>\r\n                    <div class=\"overlay_ready\">\r\n                        <b-iconstack font-scale=\"5\">\r\n                          <b-icon stacked icon=\"square\"></b-icon>\r\n                          <b-icon stacked icon=\"check\"></b-icon>\r\n                        </b-iconstack>\r\n                        <p id=\"check_label\">준비 완료</p>\r\n                    </div>\r\n                  </template>\r\n                </b-overlay>\r\n              </b-col>\r\n            </b-row>\r\n          </b-container>\r\n        </b-col>\r\n      </b-row>\r\n\r\n      <b-row>\r\n        <b-col sm=\"8\">\r\n          <textarea id=\"chat_area\" v-model=\"textarea\" disabled></textarea>\r\n          <div></div>\r\n          <input id=\"message_area\" v-model=\"message\" v-on:keyup.enter=\"sending_message\"/>\r\n          <b-button pill id=\"sending\" v-on:click=\"sending_message\"> 보내기 </b-button>\r\n        </b-col>\r\n        <b-col>\r\n          <b-button pill size=\"lg\" id=\"game_start\" v-on:click=\"game_start\"> {{ this.toggle_game_start }} </b-button>\r\n        </b-col>\r\n      </b-row>\r\n    </b-container>\r\n</template>\r\n\r\n<script>\r\nimport io from 'socket.io-client';\r\n\r\n// 다른 곳에서도 쓸 수 있게 전역 선언\r\nvar socket;\r\n\r\nexport default {\r\n  name : 'game_lobby',\r\n  created() {\r\n    //this.$route.params.room_address:this.$route.params.port\r\n    socket = io(`http://192.168.0.102:3000`);\r\n    // console.log(params);\r\n    // console.log(params.nick_name);\r\n    console.log(\"server in\");\r\n    console.log(this.$route.params);\r\n    let msg;\r\n    //마스터 인 입장만 count를 가지고 있으므로\r\n    if ( this.$route.params.is_master === 'true' ) {\r\n      msg = {\r\n        user_name : this.$route.params.nick_name,\r\n        room_pw   : this.$route.params.room_pw,\r\n        count     : this.$route.params.count,\r\n        is_master : this.$route.params.is_master,\r\n        is_ready  : false,\r\n        msg       : this.$route.params.nick_name + \" 가 방에 참가하였습니다.\"\r\n      };\r\n      console.log(\"master\");\r\n    } else {\r\n      msg = {\r\n        user_name : this.$route.params.nick_name,\r\n        room_pw   : this.$route.params.room_pw,\r\n        is_master : this.$route.params.is_master,\r\n        is_ready  : false,\r\n        msg       : this.$route.params.nick_name + \" 가 방에 참가하였습니다.\"\r\n      }\r\n      console.log(\"entras\");\r\n    }\r\n   \r\n    // 입장했음을 알림\r\n    socket.emit(\"enter\", msg);\r\n\r\n    // 방 정보를 받음 - 입장 했을 때 자신에게만 한 번 전송\r\n    socket.on(\"announce_room_name\", (room_data) => {\r\n      this.room_name = room_data.room_name;\r\n      this.my_key = room_data.my_key;\r\n    })\r\n\r\n\r\n    //다른 채팅이 있는지 확인\r\n    socket.on(\"chat\", (data) => {\r\n      switch ( data.type ) {\r\n        case \"announce\" :\r\n          this.textarea += data.speaker + \" 이(가) \" + data.msg + \"\\n\";\r\n          break;\r\n        case \"normal\" :\r\n          this.textarea += data.speaker + \" : \" + data.msg + \"\\n\";\r\n          break;\r\n      }\r\n      console.log(\"chat :: \");\r\n      console.log(data);\r\n    });\r\n\r\n    // 다른 플레이어가 입장시 / 색깔 선택 시 정보를 받음\r\n    socket.on(\"all_player\", (data) => {\r\n      console.log(data);\r\n      this.users = data;\r\n      for( var i = 0; i < this.users.length ; i++ ) {\r\n        if( this.users[i].user_color != '' ){\r\n          this.color_button = 'none';\r\n          this.back_button = 'inline-block';\r\n          this.toggle_color_message = '고른색';\r\n        }\r\n      }\r\n    });\r\n\r\n    //입장시 방이 가득 찼는지 확인\r\n    socket.on(\"pull_room\", (res) => {\r\n        console.log(res + \"방이 가득 찼습니다.\");\r\n        alert(\"방이 가득 찼습니다. 뒤로 돌아갑니다\");\r\n        // master 면 create 로\r\n        if( this.$route.params.is_master === 'true' ){\r\n          this.$router.push({\r\n            name: 'create_lobby',\r\n            params : {\r\n                count : this.$route.params.count\r\n            }\r\n          });\r\n        }\r\n        // entrans 면 enter 로\r\n        else {\r\n          this.$router.push({\r\n            name: 'enter_lobby',\r\n          });\r\n        }\r\n        \r\n        \r\n    });\r\n\r\n    // 마스터가 아닌데 방이 없는 곳에 들어갈 경우\r\n    socket.on(\"no_room\", () => {\r\n      alert(\"방이 아직 생성되지 않았거나 잘못된 주소입니다. 주소를 확인해주세요\");\r\n      alert(\"뒤로 돌아갑니다.\");\r\n      this.$router.push({\r\n          name: 'enter_lobby'\r\n      });\r\n    })\r\n\r\n    // 비밀번호가 잘못 된 경우\r\n    socket.on(\"wrong_pw\", () => {\r\n      alert(\"비밀번호가 잘못되었습니다. 비밀번호를 확인해주세요\");\r\n      this.$router.push({\r\n        name: 'enter_lobby'\r\n      });\r\n    });\r\n\r\n  },\r\n  data() {\r\n    return  {\r\n      users : '',\r\n      textarea : '',\r\n      message : '',\r\n      room_name : '',\r\n      my_key : '',\r\n      color_button : 'inline-block',\r\n      back_button : 'none',\r\n      toggle_color_message : \"색 선택 중\",\r\n      toggle_game_start : \"준비완료\",\r\n    }\r\n  },\r\n  methods : {\r\n    // 고른 색을 서버에 알림\r\n    choose_color : function(color, my_name, my_key) {\r\n\r\n        this.toggle_color_message = this.toggle_color_message === '색 선택 중' ? '고른색' : '색 선택 중';\r\n        this.color_button = this.color_button === 'inline-block' ? 'none' : 'inline-block';\r\n        this.back_button = this.back_button === 'none' ? 'inline-block' : 'none';\r\n        let data = {\r\n          user_name   : my_name,\r\n          user_color  : color,\r\n          user_key    : my_key\r\n        }\r\n        //선택한 값을 서버에 전송\r\n        socket.emit(\"edit_color\", data);\r\n\r\n    },\r\n\r\n    sending_message : function(){\r\n      if( this.message !== '' ){\r\n        let msg = {\r\n          speaker : this.my_name,\r\n          msg : this.message,\r\n          type : \"normal\"\r\n        }\r\n        console.log(msg);\r\n        this.message = '';\r\n        socket.emit(\"chat\", msg);\r\n      }\r\n    },\r\n\r\n    back_choose_color : function() {\r\n      this.toggle_color_message = this.toggle_color_message === '색 선택 중' ? '고른색' : '색 선택 중';\r\n      this.color_button = this.color_button === 'inline-block' ? 'none' : 'inline-block';\r\n      this.back_button = this.back_button === 'none' ? 'inline-block' : 'none';\r\n    },\r\n\r\n    game_start : function(){\r\n      if( this.$route.params.is_master === 'true' ){\r\n        console.log(\"준비완료 클릭\");\r\n      }\r\n      else {\r\n        this.toggle_game_start = this.toggle_game_start === '준비완료' ? '시작대기' : '준비완료';\r\n        this.ready_button_state = this.ready_button_state === 'outline-secondary' ? 'secondary' : 'outline-secondary';\r\n\r\n        \r\n\r\n      }\r\n      \r\n    }\r\n  },\r\n  \r\n  \r\n}\r\n</script>\r\n\r\n<style scoped src=\"@/assets/css/game_lobby.css\"></style>"]},"metadata":{},"sourceType":"module"}