{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport is from '@sindresorhus/is'; // A hacky check to prevent circular references.\n\nfunction isRequest(x) {\n  return is.object(x) && '_onResponse' in x;\n}\n/**\nAn error to be thrown when a request fails.\nContains a `code` property with error class code, like `ECONNREFUSED`.\n*/\n\n\nexport class RequestError extends Error {\n  constructor(message, error, self) {\n    super(message);\n    Object.defineProperty(this, \"input\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"code\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"stack\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"response\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"request\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"timings\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Error.captureStackTrace(this, this.constructor);\n    this.name = 'RequestError';\n    this.code = error.code ?? 'ERR_GOT_REQUEST_ERROR';\n    this.input = error.input;\n\n    if (isRequest(self)) {\n      Object.defineProperty(this, 'request', {\n        enumerable: false,\n        value: self\n      });\n      Object.defineProperty(this, 'response', {\n        enumerable: false,\n        value: self.response\n      });\n      this.options = self.options;\n    } else {\n      this.options = self;\n    }\n\n    this.timings = this.request?.timings; // Recover the original stacktrace\n\n    if (is.string(error.stack) && is.string(this.stack)) {\n      const indexOfMessage = this.stack.indexOf(this.message) + this.message.length;\n      const thisStackTrace = this.stack.slice(indexOfMessage).split('\\n').reverse();\n      const errorStackTrace = error.stack.slice(error.stack.indexOf(error.message) + error.message.length).split('\\n').reverse(); // Remove duplicated traces\n\n      while (errorStackTrace.length > 0 && errorStackTrace[0] === thisStackTrace[0]) {\n        thisStackTrace.shift();\n      }\n\n      this.stack = `${this.stack.slice(0, indexOfMessage)}${thisStackTrace.reverse().join('\\n')}${errorStackTrace.reverse().join('\\n')}`;\n    }\n  }\n\n}\n/**\nAn error to be thrown when the server redirects you more than ten times.\nIncludes a `response` property.\n*/\n\nexport class MaxRedirectsError extends RequestError {\n  constructor(request) {\n    super(`Redirected ${request.options.maxRedirects} times. Aborting.`, {}, request);\n    this.name = 'MaxRedirectsError';\n    this.code = 'ERR_TOO_MANY_REDIRECTS';\n  }\n\n}\n/**\nAn error to be thrown when the server response code is not 2xx nor 3xx if `options.followRedirect` is `true`, but always except for 304.\nIncludes a `response` property.\n*/\n// eslint-disable-next-line @typescript-eslint/naming-convention\n\nexport class HTTPError extends RequestError {\n  constructor(response) {\n    super(`Response code ${response.statusCode} (${response.statusMessage})`, {}, response.request);\n    this.name = 'HTTPError';\n    this.code = 'ERR_NON_2XX_3XX_RESPONSE';\n  }\n\n}\n/**\nAn error to be thrown when a cache method fails.\nFor example, if the database goes down or there's a filesystem error.\n*/\n\nexport class CacheError extends RequestError {\n  constructor(error, request) {\n    super(error.message, error, request);\n    this.name = 'CacheError';\n    this.code = this.code === 'ERR_GOT_REQUEST_ERROR' ? 'ERR_CACHE_ACCESS' : this.code;\n  }\n\n}\n/**\nAn error to be thrown when the request body is a stream and an error occurs while reading from that stream.\n*/\n\nexport class UploadError extends RequestError {\n  constructor(error, request) {\n    super(error.message, error, request);\n    this.name = 'UploadError';\n    this.code = this.code === 'ERR_GOT_REQUEST_ERROR' ? 'ERR_UPLOAD' : this.code;\n  }\n\n}\n/**\nAn error to be thrown when the request is aborted due to a timeout.\nIncludes an `event` and `timings` property.\n*/\n\nexport class TimeoutError extends RequestError {\n  constructor(error, timings, request) {\n    super(error.message, error, request);\n    Object.defineProperty(this, \"timings\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"event\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    this.name = 'TimeoutError';\n    this.event = error.event;\n    this.timings = timings;\n  }\n\n}\n/**\nAn error to be thrown when reading from response stream fails.\n*/\n\nexport class ReadError extends RequestError {\n  constructor(error, request) {\n    super(error.message, error, request);\n    this.name = 'ReadError';\n    this.code = this.code === 'ERR_GOT_REQUEST_ERROR' ? 'ERR_READING_RESPONSE_STREAM' : this.code;\n  }\n\n}\n/**\nAn error which always triggers a new retry when thrown.\n*/\n\nexport class RetryError extends RequestError {\n  constructor(request) {\n    super('Retrying', {}, request);\n    this.name = 'RetryError';\n    this.code = 'ERR_RETRYING';\n  }\n\n}","map":{"version":3,"names":["is","isRequest","x","object","RequestError","Error","constructor","message","error","self","Object","defineProperty","enumerable","configurable","writable","value","captureStackTrace","name","code","input","response","options","timings","request","string","stack","indexOfMessage","indexOf","length","thisStackTrace","slice","split","reverse","errorStackTrace","shift","join","MaxRedirectsError","maxRedirects","HTTPError","statusCode","statusMessage","CacheError","UploadError","TimeoutError","event","ReadError","RetryError"],"sources":["E:/web/alchemists_vue/alchemists/node_modules/got/dist/source/core/errors.js"],"sourcesContent":["import is from '@sindresorhus/is';\n// A hacky check to prevent circular references.\nfunction isRequest(x) {\n    return is.object(x) && '_onResponse' in x;\n}\n/**\nAn error to be thrown when a request fails.\nContains a `code` property with error class code, like `ECONNREFUSED`.\n*/\nexport class RequestError extends Error {\n    constructor(message, error, self) {\n        super(message);\n        Object.defineProperty(this, \"input\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"code\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"stack\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"response\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"request\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"timings\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Error.captureStackTrace(this, this.constructor);\n        this.name = 'RequestError';\n        this.code = error.code ?? 'ERR_GOT_REQUEST_ERROR';\n        this.input = error.input;\n        if (isRequest(self)) {\n            Object.defineProperty(this, 'request', {\n                enumerable: false,\n                value: self,\n            });\n            Object.defineProperty(this, 'response', {\n                enumerable: false,\n                value: self.response,\n            });\n            this.options = self.options;\n        }\n        else {\n            this.options = self;\n        }\n        this.timings = this.request?.timings;\n        // Recover the original stacktrace\n        if (is.string(error.stack) && is.string(this.stack)) {\n            const indexOfMessage = this.stack.indexOf(this.message) + this.message.length;\n            const thisStackTrace = this.stack.slice(indexOfMessage).split('\\n').reverse();\n            const errorStackTrace = error.stack.slice(error.stack.indexOf(error.message) + error.message.length).split('\\n').reverse();\n            // Remove duplicated traces\n            while (errorStackTrace.length > 0 && errorStackTrace[0] === thisStackTrace[0]) {\n                thisStackTrace.shift();\n            }\n            this.stack = `${this.stack.slice(0, indexOfMessage)}${thisStackTrace.reverse().join('\\n')}${errorStackTrace.reverse().join('\\n')}`;\n        }\n    }\n}\n/**\nAn error to be thrown when the server redirects you more than ten times.\nIncludes a `response` property.\n*/\nexport class MaxRedirectsError extends RequestError {\n    constructor(request) {\n        super(`Redirected ${request.options.maxRedirects} times. Aborting.`, {}, request);\n        this.name = 'MaxRedirectsError';\n        this.code = 'ERR_TOO_MANY_REDIRECTS';\n    }\n}\n/**\nAn error to be thrown when the server response code is not 2xx nor 3xx if `options.followRedirect` is `true`, but always except for 304.\nIncludes a `response` property.\n*/\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport class HTTPError extends RequestError {\n    constructor(response) {\n        super(`Response code ${response.statusCode} (${response.statusMessage})`, {}, response.request);\n        this.name = 'HTTPError';\n        this.code = 'ERR_NON_2XX_3XX_RESPONSE';\n    }\n}\n/**\nAn error to be thrown when a cache method fails.\nFor example, if the database goes down or there's a filesystem error.\n*/\nexport class CacheError extends RequestError {\n    constructor(error, request) {\n        super(error.message, error, request);\n        this.name = 'CacheError';\n        this.code = this.code === 'ERR_GOT_REQUEST_ERROR' ? 'ERR_CACHE_ACCESS' : this.code;\n    }\n}\n/**\nAn error to be thrown when the request body is a stream and an error occurs while reading from that stream.\n*/\nexport class UploadError extends RequestError {\n    constructor(error, request) {\n        super(error.message, error, request);\n        this.name = 'UploadError';\n        this.code = this.code === 'ERR_GOT_REQUEST_ERROR' ? 'ERR_UPLOAD' : this.code;\n    }\n}\n/**\nAn error to be thrown when the request is aborted due to a timeout.\nIncludes an `event` and `timings` property.\n*/\nexport class TimeoutError extends RequestError {\n    constructor(error, timings, request) {\n        super(error.message, error, request);\n        Object.defineProperty(this, \"timings\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"event\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.name = 'TimeoutError';\n        this.event = error.event;\n        this.timings = timings;\n    }\n}\n/**\nAn error to be thrown when reading from response stream fails.\n*/\nexport class ReadError extends RequestError {\n    constructor(error, request) {\n        super(error.message, error, request);\n        this.name = 'ReadError';\n        this.code = this.code === 'ERR_GOT_REQUEST_ERROR' ? 'ERR_READING_RESPONSE_STREAM' : this.code;\n    }\n}\n/**\nAn error which always triggers a new retry when thrown.\n*/\nexport class RetryError extends RequestError {\n    constructor(request) {\n        super('Retrying', {}, request);\n        this.name = 'RetryError';\n        this.code = 'ERR_RETRYING';\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}