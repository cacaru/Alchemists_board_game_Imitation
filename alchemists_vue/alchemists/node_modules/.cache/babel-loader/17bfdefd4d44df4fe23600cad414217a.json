{"ast":null,"code":"import { socket } from '@/components/game_lobby.vue';\nimport { default as modal_area } from '@/components/modal_area.vue';\nimport { default as personal_game_data } from '@/components/personal_game_data.vue';\nimport { default as adventurer_selling } from '@/components/adventurer_selling.vue';\nexport default {\n  name: 'game_board',\n  components: {\n    Modal_component: modal_area,\n    Personal_game_data: personal_game_data,\n    Adventurer_selling: adventurer_selling\n  },\n\n  created() {\n    // 게임 초기화 & 시작 트리거\n    socket.emit(\"created_data_announce\");\n    this.my_key = socket.id;\n  },\n\n  mounted() {\n    //최초 분배된 기본 재료 수령\n    socket.on(\"get_ingame_data\", data => {\n      this.user_data = data;\n\n      for (let i = 0; i < data.length; i++) {\n        if (data[i].is_master === 'true') {\n          this.room_owner = data[i].user_name;\n        }\n\n        if (data[i].user_key == this.my_key) {\n          this.my_data = data[i];\n          this.my_name = data[i].user_name;\n          this.my_color = data[i].user_color;\n        }\n      }\n\n      let msg = {\n        speaker: this.my_name,\n        msg: \"방에 입장하였습니다.\",\n        type: 'announce'\n      };\n      socket.emit(\"chat\", msg);\n    }); //채팅 on\n\n    socket.on(\"chat\", data => {\n      // console.log(\"서버에서 받아온 데이터\");\n      // console.log(data);\n      // console.log(\"받아오기 끝\");\n      switch (data.type) {\n        case \"announce\":\n          this.textarea += data.speaker + \" 이(가) \" + data.msg + \"\\n\";\n          break;\n\n        case \"normal\":\n          this.textarea += data.speaker + \" : \" + data.msg + \"\\n\";\n          break;\n      } // 스크롤을 자동으로 내림\n\n\n      this.$refs.show_chat.scrollTop = this.$refs.show_chat.scrollHeight;\n    }); // 선택할 수 있는 카드 공개\n\n    socket.on(\"ingredient_select_card_open\", data => {\n      //console.log(data);\n      this.ingredient_card_selected.card_1 = data[0];\n      this.ingredient_card_selected.card_2 = data[1];\n      this.ingredient_card_selected.card_3 = data[2];\n      this.ingredient_card_selected.card_4 = data[3];\n      this.ingredient_card_selected.card_5 = data[4];\n    }); // 이번 게임에서 사용할 용병 리스트\n\n    socket.on(\"adv_list_setting\", data => {\n      this.random_adv_list = data; //console.log(this.random_adv_list);\n    }); // 용병에게 판매 가능한 물약 리스트\n\n    socket.on(\"adv_sell_potion_list\", data => {\n      this.adventurer_card_data = data; // console.log(this.adventurer_card_data);\n    }); // 용병에게 할인카드 제시가 끝났음을 받는 함수\n\n    socket.on(\"end_adv_dis_step\", data => {\n      this.discount_coin_list = data;\n      this.is_end_discount = true; // console.log(this.discount_coin_list);\n    }); // 용병에게 판매할 물약의 값을 결정되었음을 받는 함수\n\n    socket.on(\"selling_start\", () => {\n      // 물약 생성 모달 on \n      this.make_potion_to_sell_onoff = true;\n    }); // 용병에게 물약 판매가 끝났음을 알리는 함수\n\n    socket.on(\"selling_potion_end\", data => {\n      // 물약 판매 모달 닫기\n      this.make_potion_to_sell_onoff = false;\n      this.selling_end_modal = true;\n\n      if (data.user_key == this.my_key) {\n        this.sell_potion_turn = false;\n      }\n\n      this.selling_user_color = data.user_color;\n      this.selling_success = data.selling_success;\n      this.selling_potion_kind = data.potion;\n    }); // 용병에게 물약판매 순서를 받는 함수\n\n    socket.on(\"change_selling_turn\", data => {\n      this.selling_turn = data;\n    }); // 변경된 게임 데이터를 받는 함수\n\n    socket.on(\"change_user_data\", data => {\n      this.user_data = data;\n\n      for (let i = 0; i < data.length; i++) {\n        if (data[i].user_key == this.my_key) {\n          this.my_data = data[i];\n          break;\n        }\n      } //console.log(this.user_data);\n\n    }); // 변경된 final_round_order를 데이터를 받는 함수 \n\n    socket.on(\"change_final_round_order\", data => {\n      this.final_round_order = data; //console.log(this.final_round_order);\n    }); // 변경된 result_table : 추리 테이블 데이터를 받는 함수\n\n    socket.on(\"change_result_table\", data => {\n      this.result_table = data; //console.log(this.result_table);\n    }); // 몇 라운드 인지 받기\n\n    socket.on(\"change_round\", data => {\n      this.round_cont = data; // console.log(this.round_cont);\n    }); // 논문 관련 데이터 받기\n\n    socket.on(\"change_theory_data\", data => {\n      this.theory_data = data; // console.log(this.theory_data);\n    }); // 물약 전시회 데이터 받기\n\n    socket.on(\"change_exhibition_data\", data => {\n      this.exhibition_result = data; // console.log(this.exhibition_result);\n    }); // 게임 순서를 정하는 순서의 정보 받는 함수\n\n    socket.on(\"round_order_setting_before\", data => {\n      //console.log(data);\n      let as = [];\n\n      for (let i = 0; i < data.length; i++) {\n        for (let j = 0; j < this.user_data.length; j++) {\n          if (data[i] == this.user_data[j].user_key) {\n            let choice_data = {\n              user_key: this.user_data[j].user_key,\n              user_name: this.user_data[j].user_name\n            };\n            as.push(choice_data);\n            choice_data = '';\n          }\n        }\n      }\n\n      this.round_setting_order = as; //console.log(this.round_setting_order[0].user_key);\n      //console.log(this.round_order[this.round_order_selecter].user_key);\n    }); // 게임 순서를 정하는 순서를 정하는 변수를 받는 함수 \n\n    socket.on(\"decide_round_setting_order_counter_send\", data => {\n      this.round_setting_order_counter = data;\n    }); // 라운드 진행 순서를 고른 정보를 받는 함수\n\n    socket.on(\"select_round_order_recive\", data => {\n      let btn_ele = '';\n      let btn_before_ele = '';\n\n      for (let i = 0; i < data.length; i++) {\n        // 순서에 맞는 element를 선택\n        switch (data[i].order) {\n          case 1:\n            btn_ele = this.$refs.btn_1;\n            break;\n\n          case 2:\n            btn_ele = this.$refs.btn_2;\n            break;\n\n          case 3:\n            btn_ele = this.$refs.btn_3;\n            break;\n\n          case 4:\n            btn_ele = this.$refs.btn_4;\n            break;\n\n          case 5:\n            btn_ele = this.$refs.btn_5;\n            break;\n\n          case 6:\n            btn_ele = this.$refs.btn_6;\n            break;\n\n          case 7:\n            btn_ele = this.$refs.btn_7;\n            break;\n\n          case 8:\n            btn_ele = this.$refs.btn_8;\n            break;\n        }\n\n        switch (data[i].before_order) {\n          case 1:\n            btn_before_ele = this.$refs.btn_1;\n            break;\n\n          case 2:\n            btn_before_ele = this.$refs.btn_2;\n            break;\n\n          case 3:\n            btn_before_ele = this.$refs.btn_3;\n            break;\n\n          case 4:\n            btn_before_ele = this.$refs.btn_4;\n            break;\n\n          case 5:\n            btn_before_ele = this.$refs.btn_5;\n            break;\n\n          case 6:\n            btn_before_ele = this.$refs.btn_6;\n            break;\n\n          case 7:\n            btn_before_ele = this.$refs.btn_7;\n            break;\n\n          case 8:\n            btn_before_ele = this.$refs.btn_8;\n            break;\n        } //console.log(btn_ele[0].className);\n        // 기존의 것이 있으면 기존 색 class 제거\n\n\n        if (btn_before_ele != '') {\n          let num = btn_before_ele[0].className.indexOf(data[i].user_color); // 문구 검색 결과가 있으면 제거 \n\n          if (num > 0) {\n            let str = btn_before_ele[0].className.substring(0, num - 1);\n            btn_before_ele[0].className = str;\n          } // 결과가 음수면 없는 것이므로 넘김\n\n        } // 기존의 것을 없앤 완전 초기화 상태이므로  기존의 것과 중복 되더라도 그냥 진행 가능\n        // 기존 : 5 신규 5 일 경우 위에서 이미 검사하지 않고 지웠으므로\n        // 신규 5를 다시 칠함\n        // 두 함수에서 모두 if로 구분하여 ifif중복하기 귀찮아서 그냥 무조건 지우고 무조건 색칠\n\n\n        if (btn_ele != '') {\n          btn_ele[0].className += ' ' + data[i].user_color; //console.log(btn_ele[0].className);\n        } // 변수 초기화\n\n\n        btn_before_ele = '';\n        btn_ele = '';\n      } // 내부 변수에도 값을 적용\n\n\n      this.final_round_order = data; //console.log(data);\n    }); // 라운드 진행 순서를 고르는 것이 끝났다는 알림을 받는 함수 \n\n    socket.on(\"decide_round_setting_order_end\", data => {\n      this.decide_order = !this.decide_order; // final_round_order을 고른 order에 맞게 재정렬한 값으로 재전송 받음\n\n      this.final_round_order = data;\n    }); // 판매하는 아티펙트 정보를 받는 함수\n\n    socket.on(\"can_buy_artifacts_list\", data => {\n      this.can_buy_artifacts = data; //console.log(this.can_buy_artifacts);\n    }); // 큐브 선택시 사용 가능 큐브가 없을 때\n\n    socket.on(\"cant_use_cube\", data => {\n      alert(data.say);\n    }); // 논문 반박 성공시 모달 오픈 함수\n\n    socket.on(\"open_stamp_modal\", data => {\n      this.reciving_data = data;\n      this.success_refute_modal_onoff = true;\n    }); // 보드 순서 시작\n\n    socket.on(\"board_start\", start_board => {\n      // 모두 false로 만들고 선택된 보드만 true로 변경\n      this.board_1_selected = false;\n      this.board_2_selected = false;\n      this.board_3_selected = false;\n      this.board_4_selected = false;\n      this.board_5_selected = false;\n      this.board_6_selected = false;\n      this.board_7_selected = false;\n      this.board_8_selected = false; // 다른 보드 의 모달 끄기\n\n      this.sell_ingredient_modal_onoff = false;\n      this.test_ingredient_modal_onoff = false;\n      this.reasoning_table_onoff = false;\n      this.presentation_of_theories_modal = false;\n      this.ingre_presentation_modal_onoff = false;\n      this.success_refute_modal_onoff = false;\n      this.board_order = 0;\n      this.sell_potion_to_adv_modal_onoff = false; // 보드 순서 끄기\n\n      this.my_turn = false;\n\n      switch (start_board) {\n        case 1:\n          //재료 선택\n          this.board_1_selected = true;\n          break;\n\n        case 2:\n          //재료 판매\n          this.board_2_selected = true;\n          this.sell_ingredient_modal_onoff = true;\n          break;\n\n        case 3:\n          // 용병에게 뭉약 판매\n          this.board_3_selected = true;\n          this.sell_potion_to_adv_modal_onoff = true;\n          break;\n\n        case 4:\n          //아티펙트 구매\n          this.board_4_selected = true;\n          break;\n\n        case 5:\n          // 논문 반박\n          this.board_5_selected = true;\n          this.presentation_of_theories_modal = true;\n          break;\n\n        case 6:\n          //논문 발표\n          this.board_6_selected = true;\n          this.presentation_of_theories_modal = true;\n          break;\n\n        case 7:\n          //학생에게 실험\n          this.board_7_selected = true;\n          this.test_ingredient_modal_onoff = true;\n          break;\n\n        case 8:\n          //교수에게 실험\n          this.board_8_selected = true;\n          this.test_ingredient_modal_onoff = true;\n          break;\n\n        case 9:\n          // 물약 발표회\n          this.board_end_selected = true;\n          this.last_round_modal_onoff = true;\n          break;\n\n        default:\n          console.log(\"start_board_val_err \" + start_board);\n          break;\n      } // 선택되지 못한 보드가 눌렸을 경우 현재 선택된 보드만 누르게 경고를 띄워야함\n\n    }); //보드 진행 시 순서 관련 변수 업데이트\n\n    socket.on(\"change_board_order_val\", data => {\n      this.board_order = data.board_order;\n      this.board_cube_order = data.board_cube_order; // 보드 순서 일 때 변수 입력\n\n      if (this.board_2_selected == true || // 재료 판매\n      this.board_5_selected == true || // 논문 반박\n      this.board_6_selected == true || // 논문 발표\n      this.board_7_selected == true || // 학생에게 실험\n      this.board_8_selected == true // 본인에게 실험\n      ) {\n        if (this.final_round_order[this.board_order].user_key == this.my_key) {\n          this.my_turn = true;\n        } else {\n          this.my_turn = false;\n        }\n      } // 물약 판매 순서일 경우 판매하는 모든 사람들이 동시에 진행할 수 있어야함\n\n\n      if (this.board_3_selected == true) {\n        for (let i = 0; i < this.final_round_order.length; i++) {\n          // 내 차례가 있으면 그냥 보여주기\n          if (this.final_round_order[i].user_key == this.my_key) {\n            if (this.final_round_order[i].user_cube_data[2][1].is_select == true) {\n              this.sell_potion_turn = true;\n              break;\n            }\n\n            break;\n          }\n        }\n      }\n    });\n    socket.on(\"round_end\", () => {\n      // 모든 보드 포인터 끄기\n      this.board_1_selected = false;\n      this.board_2_selected = false;\n      this.board_3_selected = false;\n      this.board_4_selected = false;\n      this.board_5_selected = false;\n      this.board_6_selected = false;\n      this.board_7_selected = false;\n      this.board_8_selected = false; // 모든 모달 끄기\n\n      this.sell_ingredient_modal_onoff = false;\n      this.test_ingredient_modal_onoff = false;\n      this.reasoning_table_onoff = false;\n      this.presentation_of_theories_modal = false;\n      this.ingre_presentation_modal_onoff = false;\n      this.success_refute_modal_onoff = false;\n      this.last_round_modal_onoff = false;\n      this.exhibition_check_modal_onoff = false; // 보드 칸 순서 끄기\n\n      this.my_turn = false; // 용병에게 물약 판매 초기환\n\n      this.my_selling_price = -1;\n      this.selling_turn = 0;\n      this.discount_coin_list = [];\n      this.before_adv_discount_select_num = -1; // overlay 켜서 다시 순서 정하기 시작\n\n      this.decide_order = !this.decide_order;\n      this.final_round_order = '';\n    });\n    socket.on(\"test_ingredient_result\", data => {\n      let user_num = -1;\n\n      for (let i = 0; i < this.user_data.length; i++) {\n        if (this.user_data[i].user_key == data.user_key) {\n          user_num = i;\n        }\n      }\n\n      this.open_result_user = this.user_data[user_num].user_name;\n      this.open_result = data.test_result;\n      this.open_result_modal = true;\n    });\n  },\n\n  data() {\n    return {\n      user_data: '',\n      my_key: '',\n      my_data: '',\n      my_name: '',\n      my_color: '',\n      room_owner: '',\n      total_dicount_adventruer: 4,\n      textarea: '',\n      message: '',\n      ingredient_card_selected: {\n        card_1: '0',\n        card_2: '0',\n        card_3: '0',\n        card_4: '0',\n        card_5: '0'\n      },\n      // overlay\n      decide_order: false,\n      // overlay 완료버튼으로 나오는 modal\n      decide_order_modal: false,\n      // 현재 라운드\n      round_cont: 0,\n      // 라운드 순서를 정하는 순서 정보\n      round_setting_order: '',\n      // 라운드 순서를 정하는 순서 \n      round_setting_order_counter: 0,\n      // 해당 라운드의 순서 결정완료 후 순서\n      final_round_order: [],\n      // 라운드 준비 완료 확인 모달\n      round_order_check: false,\n      // 구매 가능한 아티펙트 변수\n      can_buy_artifacts: '',\n      // 재료조합 추리 및 결과 테이블\n      result_table: [],\n      // board 선택을 위한 변수 8개\n      board_1_selected: false,\n      board_2_selected: false,\n      board_3_selected: false,\n      board_4_selected: false,\n      board_5_selected: false,\n      board_6_selected: false,\n      board_7_selected: false,\n      board_8_selected: false,\n      // 매 보드마다 순서를 정할 변수\n      board_order: 0,\n      // 큐브 순서를 정할 변수\n      board_cube_order: 1,\n      // 2번째 보드 modal\n      sell_ingredient_modal_onoff: false,\n      // 보드의 현재 순서가 자신인지 확인하는 변수\n      my_turn: false,\n      // 용병에게 물약 판매 모달\n      sell_potion_to_adv_modal_onoff: false,\n      // 용병에게 물약 판매 차례를 진행할 사람들만 표기할 변수\n      sell_potion_turn: false,\n      // 용병 순서 변수\n      random_adv_list: [],\n      // 용병이 판매할 물약 변수\n      adventurer_card_data: '',\n      // 할인 포인트 제시 여부\n      get_discount_coin: false,\n      // 선택한 할인 카드 저장 변수\n      before_adv_discount_select_num: -1,\n      // 제시한 할인 카드 를 저장할 변수\n      discount_coin_list: [],\n      // 할인제시 스텝이 끝났는지 안끝났는지 알려줄 변수\n      is_end_discount: false,\n      // 나의 할인 스텝이 끝났을 때 기다리기 위한 변수\n      im_end_discount: false,\n      // 내 판매가\n      my_selling_price: 0,\n      // 판매 차례\n      selling_turn: 0,\n      // 판매할 물약 생성\n      make_potion_to_sell_onoff: false,\n      // 판매할 물약 종류 설정\n      what_kind_sell_potion: '',\n      // 판매 성공/실패 모달 \n      selling_end_modal: false,\n      // 판매 성공/실패 변수\n      selling_success: false,\n      // 판매 성공/실패한 유저의 색\n      selling_user_color: '',\n      // 판매한 물약\n      selling_potion_kind: '',\n      // 실험할 재료를 저장해둘 변수\n      test_ingredient_list: [],\n      // 실험 모달\n      test_ingredient_modal_onoff: false,\n      // 추리 테이블 모달\n      my_reasoning_table_modal: false,\n      // 추리 테이블 관련 변수\n      icon_data: {\n        0: require('@/assets/img/material_card/ingredient_1.png'),\n        1: require('@/assets/img/material_card/ingredient_2.png'),\n        2: require('@/assets/img/material_card/ingredient_3.png'),\n        3: require('@/assets/img/material_card/ingredient_4.png'),\n        4: require('@/assets/img/material_card/ingredient_5.png'),\n        5: require('@/assets/img/material_card/ingredient_6.png'),\n        6: require('@/assets/img/material_card/ingredient_7.png'),\n        7: require('@/assets/img/material_card/ingredient_8.png')\n      },\n      reasoning_data: {\n        0: require('@/assets/img/stamp/rgbl010.png'),\n        1: require('@/assets/img/stamp/rgbl101.png'),\n        2: require('@/assets/img/stamp/rglb100.png'),\n        3: require('@/assets/img/stamp/rglb011.png'),\n        4: require('@/assets/img/stamp/rlgb001.png'),\n        5: require('@/assets/img/stamp/rlgb110.png'),\n        6: require('@/assets/img/stamp/rlglbl000.png'),\n        7: require('@/assets/img/stamp/rlglbl111.png')\n      },\n      black_stamp_data: {\n        0: require('@/assets/img/stamp/stamp_black_5.png'),\n        1: require('@/assets/img/stamp/stamp_black_5.png'),\n        2: require('@/assets/img/stamp/stamp_black_3.png'),\n        3: require('@/assets/img/stamp/stamp_black_3.png'),\n        4: require('@/assets/img/stamp/stamp_black_3.png'),\n        5: require('@/assets/img/stamp/stamp_black_red.png'),\n        6: require('@/assets/img/stamp/stamp_black_red.png'),\n        7: require('@/assets/img/stamp/stamp_black_green.png'),\n        8: require('@/assets/img/stamp/stamp_black_green.png'),\n        9: require('@/assets/img/stamp/stamp_black_blue.png'),\n        10: require('@/assets/img/stamp/stamp_black_blue.png')\n      },\n      blue_stamp_data: {\n        0: require('@/assets/img/stamp/stamp_blue_5.png'),\n        1: require('@/assets/img/stamp/stamp_blue_5.png'),\n        2: require('@/assets/img/stamp/stamp_blue_3.png'),\n        3: require('@/assets/img/stamp/stamp_blue_3.png'),\n        4: require('@/assets/img/stamp/stamp_blue_3.png'),\n        5: require('@/assets/img/stamp/stamp_blue_red.png'),\n        6: require('@/assets/img/stamp/stamp_blue_red.png'),\n        7: require('@/assets/img/stamp/stamp_blue_green.png'),\n        8: require('@/assets/img/stamp/stamp_blue_green.png'),\n        9: require('@/assets/img/stamp/stamp_blue_blue.png'),\n        10: require('@/assets/img/stamp/stamp_blue_blue.png')\n      },\n      red_stamp_data: {\n        0: require('@/assets/img/stamp/stamp_red_5.png'),\n        1: require('@/assets/img/stamp/stamp_red_5.png'),\n        2: require('@/assets/img/stamp/stamp_red_3.png'),\n        3: require('@/assets/img/stamp/stamp_red_3.png'),\n        4: require('@/assets/img/stamp/stamp_red_3.png'),\n        5: require('@/assets/img/stamp/stamp_red_red.png'),\n        6: require('@/assets/img/stamp/stamp_red_red.png'),\n        7: require('@/assets/img/stamp/stamp_red_green.png'),\n        8: require('@/assets/img/stamp/stamp_red_green.png'),\n        9: require('@/assets/img/stamp/stamp_red_blue.png'),\n        10: require('@/assets/img/stamp/stamp_red_blue.png')\n      },\n      white_stamp_data: {\n        0: require('@/assets/img/stamp/stamp_white_5.png'),\n        1: require('@/assets/img/stamp/stamp_white_5.png'),\n        2: require('@/assets/img/stamp/stamp_white_3.png'),\n        3: require('@/assets/img/stamp/stamp_white_3.png'),\n        4: require('@/assets/img/stamp/stamp_white_3.png'),\n        5: require('@/assets/img/stamp/stamp_white_red.png'),\n        6: require('@/assets/img/stamp/stamp_white_red.png'),\n        7: require('@/assets/img/stamp/stamp_white_green.png'),\n        8: require('@/assets/img/stamp/stamp_white_green.png'),\n        9: require('@/assets/img/stamp/stamp_white_blue.png'),\n        10: require('@/assets/img/stamp/stamp_white_blue.png')\n      },\n      ele_core_data: {\n        0: require('@/assets/img/game_icon/red_origin.png'),\n        1: require('@/assets/img/game_icon/green_origin.png'),\n        2: require('@/assets/img/game_icon/blue_origin.png')\n      },\n      picked: -1,\n      reasoning_table_onoff: false,\n      // 실험 결과를 모두에게 보여주는 변수\n      open_result: '',\n      open_result_user: '',\n      open_result_modal: false,\n      // 논문 발표/ 반박 시 발표된 정보 저장\n      theory_data: '',\n      // 논문 발표/ 반박 모달\n      presentation_of_theories_modal: false,\n      ingre_presentation_modal_onoff: false,\n      // 논문 발표/반박 원소 선택 관련 변소\n      before_theory_ele_select_num: 0,\n      before_theory_stm_select_num: 0,\n      now_select_ingre: 0,\n      before_refute_ori_select_num: 0,\n      // 논문 반박 성공 시 열릴 모달 \n      success_refute_modal_onoff: false,\n      // 반박 성공시 보여줄 인장들\n      reciving_data: '',\n      // 마지막 라운드 모달\n      last_round_modal_onoff: false,\n      // 마자믹 라운드 보드 켜기\n      board_end_selected: false,\n      // 잘 발표된 물약 표기\n      exhibition_result: '',\n      // 발표하기 위한 모달\n      exhibition_check_modal_onoff: false,\n      exhibition_potion_num: -1\n    };\n  },\n\n  methods: {\n    use_chat: function () {\n      if (this.message !== '') {\n        let msg = {\n          speaker: this.my_name,\n          msg: this.message,\n          type: \"normal\"\n        }; //   console.log(\"서버에 보낼 데이터\");\n        //   console.log(msg);\n        //   console.log(\"보낼준비 끝\");\n\n        this.message = '';\n        socket.emit(\"chat\", msg);\n      }\n    },\n    draw_ingredient_card: function (cnt) {\n      let data = {\n        cnt: cnt,\n        my_key: this.my_key\n      };\n      socket.emit(\"draw_ingredient_card\", data);\n    },\n    // 인게임 라운드 진행 준비 완료를 알리는 함수\n    round_ready: function () {\n      this.round_order_check = true;\n    },\n    round_order_setting_end: function () {\n      this.round_order_check = false;\n      socket.emit(\"round_ready_on\", this.my_key);\n    },\n    round_order_setting_close: function () {\n      this.round_order_check = false;\n    },\n    // decide_order overlay의 완료 버튼\n    decide_order_modal_open: function () {\n      // 선택 순서에 따라 클릭 막기\n      if (this.round_setting_order[this.round_setting_order_counter].user_key != this.my_key) {\n        alert(\"지금은 내 선택 순서가 아닙니다! 조금만 기다려주세용\");\n        return;\n      }\n\n      this.decide_order_modal = !this.decide_order_modal;\n    },\n    // decide_order_modal 의 결정 버튼\n    decide_order_setting_end: function () {\n      let is_select_order = false;\n\n      for (let i = 0; i < this.final_round_order.length; i++) {\n        if (this.final_round_order[i].user_key == this.my_key) {\n          is_select_order = true;\n          break;\n        }\n      }\n\n      if (!is_select_order) {\n        alert(\"순서를 고르고 결정을 눌러주세요\");\n        this.decide_order_modal = false;\n        return;\n      } //위 if문에 안걸리면 선택한 순서가 있다는 것 이므로 진행\n      // 게임 결정 순서를 공유해야 하므로 서버에 값을 증가시키라고 전송\n\n\n      socket.emit(\"decide_round_setting_order_counter_incre\");\n      this.decide_order_modal = false;\n    },\n    select_order_btn: function (val) {\n      // 선택 순서에 따라 클릭 막기\n      if (this.round_setting_order[this.round_setting_order_counter].user_key != this.my_key) {\n        alert(\"지금은 내 선택 순서가 아닙니다! 조금만 기다려주세용\");\n        return;\n      } // 마지막 순서는 벌칙 존이므로 선택할 수 없다!\n\n\n      if (val == 8) {\n        alert(\"벌칙 존이라서 선택할 수 없습니다. 다른 순서를 선택해주세요.\");\n        return;\n      }\n\n      if (this.final_round_order != '') {\n        for (let i = 0; i < this.final_round_order.length; i++) {\n          if (this.final_round_order[i].user_key != this.my_key) {\n            if (val == this.final_round_order[i].order) {\n              alert(\"다른 사람이 선택한 순서는 선택 할 수 없습니다.\");\n              return;\n            }\n          }\n        }\n      }\n\n      let round_order_data = {\n        user_key: this.my_key,\n        order: val\n      }; // 버튼 선택 결과 전송\n\n      socket.emit(\"select_round_order\", round_order_data);\n    },\n    // 큐브로 순서를 선택할 때 반응\n    click_order_btn: function (n, u, user_key) {\n      for (let i = 0; i < this.user_data.length; i++) {\n        if (this.user_data[i].user_key == user_key) {\n          if (this.user_data[i].is_ready == true) {\n            alert(\"준비 완료 후에는 선택할 수 없습니다!\");\n            return;\n          }\n        }\n      }\n\n      if (user_key != this.my_key) {\n        alert(\"본인의 색으로 구분된 버튼만 골라주세요!\");\n        return;\n      } // 라운드가 진행중이면 클릭되선 안됨\n\n\n      for (let i = 0; i < this.user_data.length; i++) {\n        if (this.user_data[i].user_key == this.my_key) {\n          if (this.user_data[i].is_ingame == true) {\n            alert(\"라운드 진행 중에는 클릭 할 수 없습니다!\");\n            return;\n          }\n        }\n      } // 1라운드에는 용병에게 물약 판매 / 논문 발표 / 반박을 할 수 없다\n\n\n      if (this.round_cont == 1 && (n == 2 || n == 4 || n == 5)) {\n        alert(\"1라운드에는 해당 보드의 행동을 할 수 없습니다!\\n 다른 보드를 선택해주세요\");\n        return;\n      } // n :: final_round_order[유저].user_cube_data[n] :: 보드 번호\n      // u :: final_round_order[유저].user_cube_data[n][u] :: 보드 의 큐브 번호\n\n\n      let send_data = {\n        user_key: user_key,\n        cube_round_order_num: n,\n        button_order_num: u\n      }; //console.log(send_data);\n      //버튼 선택 결과 전송\n\n      socket.emit(\"select_cube\", send_data);\n    },\n    // 추리테이블 눌렀을 때 반응\n    click_reasoning_ele: function (index, key) {\n      let reasoning_data = {\n        user_key: this.my_key,\n        x: index,\n        y: key,\n        change_val: this.picked\n      };\n      socket.emit(\"reasoning_table_change\", reasoning_data); //console.log(reasoning_data);\n\n      this.picked = -1;\n      this.reasoning_table_onoff = false;\n    },\n    reasoning_table_open: function () {\n      this.my_reasoning_table_modal = !this.my_reasoning_table_modal;\n    },\n    open_reasoning_table_modal: function (index, key) {\n      this.$refs.index_val.innerText = index;\n      this.$refs.key_val.innerText = key; //console.log(this.$refs.index_val.innerText);\n      //console.log(index + \" \" + key);\n\n      this.reasoning_table_onoff = true;\n    },\n    reset_val: function () {\n      this.picked = -1;\n    },\n    // 재료카드 선택 이벤트\n    pick_ingredient: function (data, index) {\n      if (this.board_1_selected == false || this.final_round_order[this.board_order].user_key != this.my_key) {\n        alert(\"아직 재료를 고를 수 없습니다.\");\n        return;\n      } // 재료 카드 선택 이벤트는 무조건 0번에 존재하므로 \n\n\n      if (this.final_round_order[this.board_order].user_cube_data[0][this.board_cube_order].is_select == true && this.final_round_order[this.board_order].user_key == this.my_key) {\n        switch (index) {\n          case \"card_1\":\n            index = 0;\n            break;\n\n          case \"card_2\":\n            index = 1;\n            break;\n\n          case \"card_3\":\n            index = 2;\n            break;\n\n          case \"card_4\":\n            index = 3;\n            break;\n\n          case \"card_5\":\n            index = 4;\n            break;\n        } // 위의 변수를 뚫고 내려오면 현재 내가 고를 상태가 맞는것\n\n\n        let send_data = {\n          user_key: this.my_key,\n          pick_item: data,\n          cube_order: this.board_cube_order,\n          board_order: this.board_order,\n          ingredient_select_arr_order: index\n        }; //console.log(send_data);\n\n        socket.emit(\"pick_ingredient\", send_data);\n      }\n    },\n    // 판매 재료카드 선택 이벤트\n    click_sell_ingredient_check: function (name, user_key) {\n      console.log(name);\n      let num = -1; // 원래 선택되어 있는지 확인하고 전부 해제 \n\n      for (let i = 0; i < this.user_data.length; i++) {\n        if (this.user_data[i].user_key == user_key) {\n          if (this.user_data[i].user_ingame_data.ingredient.card_1 > 0) {\n            num = this.$refs.sell_card_1[0].className.indexOf('sell_border');\n\n            if (num > 0) {\n              let str = this.$refs.sell_card_1[0].className.substring(0, num - 1);\n              this.$refs.sell_card_1[0].className = str;\n            }\n          }\n\n          if (this.user_data[i].user_ingame_data.ingredient.card_2 > 0) {\n            num = this.$refs.sell_card_2[0].className.indexOf('sell_border');\n\n            if (num > 0) {\n              let str = this.$refs.sell_card_2[0].className.substring(0, num - 1);\n              this.$refs.sell_card_2[0].className = str;\n            }\n          }\n\n          if (this.user_data[i].user_ingame_data.ingredient.card_3 > 0) {\n            num = this.$refs.sell_card_3[0].className.indexOf('sell_border');\n\n            if (num > 0) {\n              let str = this.$refs.sell_card_3[0].className.substring(0, num - 1);\n              this.$refs.sell_card_3[0].className = str;\n            }\n          }\n\n          if (this.user_data[i].user_ingame_data.ingredient.card_4 > 0) {\n            num = this.$refs.sell_card_4[0].className.indexOf('sell_border');\n\n            if (num > 0) {\n              let str = this.$refs.sell_card_4[0].className.substring(0, num - 1);\n              this.$refs.sell_card_4[0].className = str;\n            }\n          }\n\n          if (this.user_data[i].user_ingame_data.ingredient.card_5 > 0) {\n            num = this.$refs.sell_card_5[0].className.indexOf('sell_border');\n\n            if (num > 0) {\n              let str = this.$refs.sell_card_5[0].className.substring(0, num - 1);\n              this.$refs.sell_card_5[0].className = str;\n            }\n          }\n\n          if (this.user_data[i].user_ingame_data.ingredient.card_6 > 0) {\n            num = this.$refs.sell_card_6[0].className.indexOf('sell_border');\n\n            if (num > 0) {\n              let str = this.$refs.sell_card_6[0].className.substring(0, num - 1);\n              this.$refs.sell_card_6[0].className = str;\n            }\n          }\n\n          if (this.user_data[i].user_ingame_data.ingredient.card_7 > 0) {\n            num = this.$refs.sell_card_7[0].className.indexOf('sell_border');\n\n            if (num > 0) {\n              let str = this.$refs.sell_card_7[0].className.substring(0, num - 1);\n              this.$refs.sell_card_7[0].className = str;\n            }\n          }\n\n          if (this.user_data[i].user_ingame_data.ingredient.card_8 > 0) {\n            num = this.$refs.sell_card_8[0].className.indexOf('sell_border');\n\n            if (num > 0) {\n              let str = this.$refs.sell_card_8[0].className.substring(0, num - 1);\n              this.$refs.sell_card_8[0].className = str;\n            }\n          }\n\n          break;\n        }\n      } // 전부 해제한 후 선택한 것을 선택표시\n\n\n      let ref_str = '';\n\n      switch (name) {\n        case 'card_1':\n          ref_str = this.$refs.sell_card_1;\n          break;\n\n        case 'card_2':\n          ref_str = this.$refs.sell_card_2;\n          break;\n\n        case 'card_3':\n          ref_str = this.$refs.sell_card_3;\n          break;\n\n        case 'card_4':\n          ref_str = this.$refs.sell_card_4;\n          break;\n\n        case 'card_5':\n          ref_str = this.$refs.sell_card_5;\n          break;\n\n        case 'card_6':\n          ref_str = this.$refs.sell_card_6;\n          break;\n\n        case 'card_7':\n          ref_str = this.$refs.sell_card_7;\n          break;\n\n        case 'card_8':\n          ref_str = this.$refs.sell_card_8;\n          break;\n      }\n\n      ref_str[0].className += \" sell_border\";\n    },\n    // 재료 판매 이벤트\n    click_sell_ingredient: function () {\n      let num = -1;\n      let sell_item_num = 0; // 선택된 것을 확인하고 번호를 저장\n      // 반드시 한 카드의 클래스에먼 sell_border가 있을것이므로 가능\n\n      for (let i = 0; i < this.user_data.length; i++) {\n        if (this.user_data[i].user_key == this.my_key) {\n          if (this.user_data[i].user_ingame_data.ingredient.card_1 > 0) {\n            num = this.$refs.sell_card_1[0].className.indexOf('sell_border');\n\n            if (num > 0) {\n              sell_item_num = 1;\n            }\n          }\n\n          if (this.user_data[i].user_ingame_data.ingredient.card_2 > 0) {\n            num = this.$refs.sell_card_2[0].className.indexOf('sell_border');\n\n            if (num > 0) {\n              sell_item_num = 2;\n            }\n          }\n\n          if (this.user_data[i].user_ingame_data.ingredient.card_3 > 0) {\n            num = this.$refs.sell_card_3[0].className.indexOf('sell_border');\n\n            if (num > 0) {\n              sell_item_num = 3;\n            }\n          }\n\n          if (this.user_data[i].user_ingame_data.ingredient.card_4 > 0) {\n            num = this.$refs.sell_card_4[0].className.indexOf('sell_border');\n\n            if (num > 0) {\n              sell_item_num = 4;\n            }\n          }\n\n          if (this.user_data[i].user_ingame_data.ingredient.card_5 > 0) {\n            num = this.$refs.sell_card_5[0].className.indexOf('sell_border');\n\n            if (num > 0) {\n              sell_item_num = 5;\n            }\n          }\n\n          if (this.user_data[i].user_ingame_data.ingredient.card_6 > 0) {\n            num = this.$refs.sell_card_6[0].className.indexOf('sell_border');\n\n            if (num > 0) {\n              sell_item_num = 6;\n            }\n          }\n\n          if (this.user_data[i].user_ingame_data.ingredient.card_7 > 0) {\n            num = this.$refs.sell_card_7[0].className.indexOf('sell_border');\n\n            if (num > 0) {\n              sell_item_num = 7;\n            }\n          }\n\n          if (this.user_data[i].user_ingame_data.ingredient.card_8 > 0) {\n            num = this.$refs.sell_card_8[0].className.indexOf('sell_border');\n\n            if (num > 0) {\n              sell_item_num = 8;\n            }\n          }\n\n          break;\n        }\n      } //판매할 데이터를 묶어 보냄\n\n\n      let send_data = {\n        user_key: this.my_key,\n        sell_item_num: sell_item_num,\n        board_order: this.board_order,\n        cube_order: this.board_cube_order\n      }; //console.log(send_data);\n\n      socket.emit(\"sell_item_confirm\", send_data);\n    },\n    // 아티팩트 구매 가능 여부 확인 및 구매\n    buy_artifact_confirm: function (data) {\n      if (this.final_round_order[this.board_order].user_key != this.my_key || this.board_4_selected == false) {\n        alert(\"자신의 순서에만 구매할 수 있습니다\\n큐브를 두고 해당 보드의 순서가 되면 구매해 주세요\");\n        return;\n      }\n\n      let send_data = {\n        board_order: this.board_order,\n        cube_order: this.board_cube_order,\n        rank: data.rank,\n        arti_num: data.num,\n        user_key: this.my_key\n      };\n      socket.emit(\"buy_artifact_confirm\", send_data);\n    },\n    // 실험 재료 2개 고르기\n    click_test_ingredient_check: function (name) {\n      // 이미 2가지가 선택되어 있으면 가장 먼저 들어온 1개를 제거하고 마지막에 들어온 한개를 진행\n      if (this.test_ingredient_list.length == 2) {\n        // 먼저 들어온 1개를 제거\n        let before_name = this.test_ingredient_list.shift();\n        let num = 0;\n\n        switch (before_name) {\n          case 'card_1':\n            num = this.$refs.test_card_1[0].className.indexOf('test_border');\n\n            if (num > 0) {\n              this.$refs.test_card_1[0].className = this.$refs.test_card_1[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case 'card_2':\n            num = this.$refs.test_card_2[0].className.indexOf('test_border');\n\n            if (num > 0) {\n              this.$refs.test_card_2[0].className = this.$refs.test_card_2[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case 'card_3':\n            num = this.$refs.test_card_3[0].className.indexOf('test_border');\n\n            if (num > 0) {\n              this.$refs.test_card_3[0].className = this.$refs.test_card_3[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case 'card_4':\n            num = this.$refs.test_card_4[0].className.indexOf('test_border');\n\n            if (num > 0) {\n              this.$refs.test_card_4[0].className = this.$refs.test_card_4[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case 'card_5':\n            num = this.$refs.test_card_5[0].className.indexOf('test_border');\n\n            if (num > 0) {\n              this.$refs.test_card_5[0].className = this.$refs.test_card_5[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case 'card_6':\n            num = this.$refs.test_card_6[0].className.indexOf('test_border');\n\n            if (num > 0) {\n              this.$refs.test_card_6[0].className = this.$refs.test_card_6[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case 'card_7':\n            num = this.$refs.test_card_7[0].className.indexOf('test_border');\n\n            if (num > 0) {\n              this.$refs.test_card_7[0].className = this.$refs.test_card_7[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case 'card_8':\n            num = this.$refs.test_card_8[0].className.indexOf('test_border');\n\n            if (num > 0) {\n              this.$refs.test_card_8[0].className = this.$refs.test_card_8[0].className.substring(0, num - 1);\n            }\n\n            break;\n        }\n      } // 변수에 추가\n\n\n      this.test_ingredient_list.push(name);\n      let ref_str = '';\n\n      switch (name) {\n        case 'card_1':\n          ref_str = this.$refs.test_card_1;\n          break;\n\n        case 'card_2':\n          ref_str = this.$refs.test_card_2;\n          break;\n\n        case 'card_3':\n          ref_str = this.$refs.test_card_3;\n          break;\n\n        case 'card_4':\n          ref_str = this.$refs.test_card_4;\n          break;\n\n        case 'card_5':\n          ref_str = this.$refs.test_card_5;\n          break;\n\n        case 'card_6':\n          ref_str = this.$refs.test_card_6;\n          break;\n\n        case 'card_7':\n          ref_str = this.$refs.test_card_7;\n          break;\n\n        case 'card_8':\n          ref_str = this.$refs.test_card_8;\n          break;\n      }\n\n      ref_str[0].className += \" test_border\";\n    },\n    click_test_ingredient: function () {\n      if (this.test_ingredient_list.length != 2) {\n        alert(\"재료카드를 2장 선택해주세요!!!\");\n        return;\n      } // test_ingredient_list의 길이가 2이면 서버에게 보내고\n      // 고른 재료 차감 / 변수 초기화 / 결과는 모두에게 전송\n      // / -> 유물 카드 에 따른 효과 발동 할 부분 추가할 것 계산\n      else {\n        let board_is = 0;\n\n        if (this.board_7_selected == true) {\n          board_is = 7;\n        } else if (this.board_8_selected == true) {\n          board_is = 8;\n        }\n\n        let send_data = {\n          user_key: this.my_key,\n          card_list: this.test_ingredient_list,\n          board_order: this.board_order,\n          cube_order: this.board_cube_order,\n          board_is: board_is\n        }; //console.log(send_data);\n\n        socket.emit(\"test_ingredient_confirm\", send_data);\n        this.test_ingredient_list = [];\n      }\n    },\n    open_result_modal_close: function () {\n      this.open_result_modal = false;\n    },\n    // 용병에게 물약 판매 전 코인 제시\n    select_adv_dis_coin: function (n) {\n      // 선택된 다른 코인은 표기 해제\n      let num = 0;\n\n      if (this.before_adv_discount_select_num > 0) {\n        switch (this.before_adv_discount_select_num) {\n          case '0':\n            num = this.$refs.ad_0_ico[0].className.indexOf('selected');\n\n            if (num > 0) {\n              this.$refs.ad_0_ico[0].className = this.$refs.ad_0_ico[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case '1':\n            num = this.$refs.ad_1_ico[0].className.indexOf('selected');\n\n            if (num > 0) {\n              this.$refs.ad_1_ico[0].className = this.$refs.ad_1_ico[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case '2':\n            num = this.$refs.ad_2_ico[0].className.indexOf('selected');\n\n            if (num > 0) {\n              this.$refs.ad_2_ico[0].className = this.$refs.ad_2_ico[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case '3':\n            num = this.$refs.ad_3_ico[0].className.indexOf('selected');\n\n            if (num > 0) {\n              this.$refs.ad_3_ico[0].className = this.$refs.ad_3_ico[0].className.substring(0, num - 1);\n            }\n\n            break;\n        }\n      } // 선택한 코인 표기\n\n\n      let ref_str = '';\n\n      switch (n) {\n        case '0':\n          ref_str = this.$refs.ad_0_ico;\n          break;\n\n        case '1':\n          ref_str = this.$refs.ad_1_ico;\n          break;\n\n        case '2':\n          ref_str = this.$refs.ad_2_ico;\n          break;\n\n        case '3':\n          ref_str = this.$refs.ad_3_ico;\n          break;\n      }\n\n      ref_str[0].className += \" selected\";\n      this.before_adv_discount_select_num = n;\n    },\n    // 용병에게 할인 카드 제시 결정 \n    adv_dis_confirm: function () {\n      // 보낼 데이터\n      // 유저키 , 유저색\n      // 내가 선택한 할인 제시 코인 번호 -> 유저데이터의 제시카드 false로 변경 -> 겜당 1회밖에 못쓰기 때문\n      let send_data = {\n        user_key: this.my_key,\n        color: this.my_color,\n        dis_coin_num: this.before_adv_discount_select_num\n      };\n      socket.emit(\"adv_dis_confirm\", send_data); // 할인카드를 제시했으므로 변수 변경\n\n      this.im_end_discount = true;\n    },\n    // 용병에게 팔 물약의 값 선택하기\n    sell_potion_set_price: function (n) {\n      this.my_selling_price = n;\n    },\n    // 용병에게 팔 금액 홀드하기\n    decision_sell_potion_price: function () {\n      //내 차례가 아니면 진행 불가\n      if (this.my_key != this.discount_coin_list[this.selling_turn].user_key) {\n        alert(\"내 차례가 아니면 확정할 수 없습니다\\n 조금 더 기다려주세요\");\n        return;\n      }\n\n      let send_data = {\n        user_key: this.my_key,\n        sell_price: this.my_selling_price\n      };\n      socket.emit(\"sell_price_confirm\", send_data);\n    },\n    // 용병에게 팔 물약 고르기\n    select_sell_potion_kind: function (kind) {\n      this.what_kind_sell_potion = kind;\n    },\n    // 물약 조제하기 :: \n    make_potion_preparation: function (data) {\n      // test_ingredient_list 의 2가지 재료를 사용 --> 서버에서 재료 제거\n      // what_kind_sell_potion -> 보내서 정답과 비교(red_1,0/ green_1/0, blue_1/0)\n      // user_key , \n      let send_data = {\n        user_key: this.my_key,\n        user_color: this.my_color,\n        card_list: data,\n        what_kind_sell_potion: this.what_kind_sell_potion,\n        selling_turn: this.selling_turn\n      };\n      socket.emit(\"sell_to_adv_potion\", send_data);\n    },\n    // 용병에게 물약을 판매하는 변수에 값 넣기\n    hold_before_adv_discount_num: function (data) {\n      this.before_adv_discount_select_num = data;\n    },\n    // 논문 발표에서 원소를 선택할 함수.\n    theory_element_select: function (n) {\n      // 이미 선택된 다른 것이 있다면 해제하고 새로 고른 것을 선택해야함\n      let num = 0;\n\n      if (this.before_theory_ele_select_num > 0) {\n        switch (this.before_theory_ele_select_num) {\n          case '1':\n            num = this.$refs.ele_1[0].className.indexOf('selected');\n\n            if (num > 0) {\n              this.$refs.ele_1[0].className = this.$refs.ele_1[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case '2':\n            num = this.$refs.ele_2[0].className.indexOf('selected');\n\n            if (num > 0) {\n              this.$refs.ele_2[0].className = this.$refs.ele_2[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case '3':\n            num = this.$refs.ele_3[0].className.indexOf('selected');\n\n            if (num > 0) {\n              this.$refs.ele_3[0].className = this.$refs.ele_3[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case '4':\n            num = this.$refs.ele_4[0].className.indexOf('selected');\n\n            if (num > 0) {\n              this.$refs.ele_4[0].className = this.$refs.ele_4[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case '5':\n            num = this.$refs.ele_5[0].className.indexOf('selected');\n\n            if (num > 0) {\n              this.$refs.ele_5[0].className = this.$refs.ele_5[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case '6':\n            num = this.$refs.ele_6[0].className.indexOf('selected');\n\n            if (num > 0) {\n              this.$refs.ele_6[0].className = this.$refs.ele_6[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case '7':\n            num = this.$refs.ele_7[0].className.indexOf('selected');\n\n            if (num > 0) {\n              this.$refs.ele_7[0].className = this.$refs.ele_7[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case '8':\n            num = this.$refs.ele_8[0].className.indexOf('selected');\n\n            if (num > 0) {\n              this.$refs.ele_8[0].className = this.$refs.ele_8[0].className.substring(0, num - 1);\n            }\n\n            break;\n        }\n      } // 현재 선택된 값을 수정\n\n\n      let ref_str = '';\n\n      switch (n) {\n        case '1':\n          ref_str = this.$refs.ele_1;\n          break;\n\n        case '2':\n          ref_str = this.$refs.ele_2;\n          break;\n\n        case '3':\n          ref_str = this.$refs.ele_3;\n          break;\n\n        case '4':\n          ref_str = this.$refs.ele_4;\n          break;\n\n        case '5':\n          ref_str = this.$refs.ele_5;\n          break;\n\n        case '6':\n          ref_str = this.$refs.ele_6;\n          break;\n\n        case '7':\n          ref_str = this.$refs.ele_7;\n          break;\n\n        case '8':\n          ref_str = this.$refs.ele_8;\n          break;\n      } // 현재 변수 저장\n\n\n      this.before_theory_ele_select_num = n;\n      ref_str[0].className += \" selected\";\n    },\n    //논문 발표에서 고를 인자를 선택하는 함수\n    theory_stamp_select: function (n) {\n      // 이미 선택된 것이 있다면 해제하고 새로 고른 것을 선택해야 함\n      // 나의 색에 따라 나와야하는 stamp의 모양이 달라야함...!\n      let num = 0;\n\n      if (this.before_theory_stm_select_num > 0) {\n        switch (this.before_theory_stm_select_num) {\n          case '1':\n            num = this.$refs.stm_1[0].className.indexOf('selected');\n\n            if (num > 0) {\n              this.$refs.stm_1[0].className = this.$refs.stm_1[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case '2':\n            num = this.$refs.stm_2[0].className.indexOf('selected');\n\n            if (num > 0) {\n              this.$refs.stm_2[0].className = this.$refs.stm_2[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case '3':\n            num = this.$refs.stm_3[0].className.indexOf('selected');\n\n            if (num > 0) {\n              this.$refs.stm_3[0].className = this.$refs.stm_3[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case '4':\n            num = this.$refs.stm_4[0].className.indexOf('selected');\n\n            if (num > 0) {\n              this.$refs.stm_4[0].className = this.$refs.stm_4[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case '5':\n            num = this.$refs.stm_5[0].className.indexOf('selected');\n\n            if (num > 0) {\n              this.$refs.stm_5[0].className = this.$refs.stm_5[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case '6':\n            num = this.$refs.stm_6[0].className.indexOf('selected');\n\n            if (num > 0) {\n              this.$refs.stm_6[0].className = this.$refs.stm_6[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case '7':\n            num = this.$refs.stm_7[0].className.indexOf('selected');\n\n            if (num > 0) {\n              this.$refs.stm_7[0].className = this.$refs.stm_7[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case '8':\n            num = this.$refs.stm_8[0].className.indexOf('selected');\n\n            if (num > 0) {\n              this.$refs.stm_8[0].className = this.$refs.stm_8[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case '9':\n            num = this.$refs.stm_9[0].className.indexOf('selected');\n\n            if (num > 0) {\n              this.$refs.stm_9[0].className = this.$refs.stm_9[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case '10':\n            num = this.$refs.stm_10[0].className.indexOf('selected');\n\n            if (num > 0) {\n              this.$refs.stm_10[0].className = this.$refs.stm_10[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case '11':\n            num = this.$refs.stm_11[0].className.indexOf('selected');\n\n            if (num > 0) {\n              this.$refs.stm_11[0].className = this.$refs.stm_11[0].className.substring(0, num - 1);\n            }\n\n            break;\n        }\n      } // 현재 선택된 값을 수정\n\n\n      let ref_str = '';\n\n      switch (n) {\n        case '1':\n          ref_str = this.$refs.stm_1;\n          break;\n\n        case '2':\n          ref_str = this.$refs.stm_2;\n          break;\n\n        case '3':\n          ref_str = this.$refs.stm_3;\n          break;\n\n        case '4':\n          ref_str = this.$refs.stm_4;\n          break;\n\n        case '5':\n          ref_str = this.$refs.stm_5;\n          break;\n\n        case '6':\n          ref_str = this.$refs.stm_6;\n          break;\n\n        case '7':\n          ref_str = this.$refs.stm_7;\n          break;\n\n        case '8':\n          ref_str = this.$refs.stm_8;\n          break;\n\n        case '9':\n          ref_str = this.$refs.stm_9;\n          break;\n\n        case '10':\n          ref_str = this.$refs.stm_10;\n          break;\n\n        case '11':\n          ref_str = this.$refs.stm_11;\n          break;\n      } // 현재 변수 저장\n\n\n      this.before_theory_stm_select_num = n;\n      ref_str[0].className += \" selected\";\n    },\n    // 논문 반박/발표 모달에서 발표/반박할 재료를 고르는 함수\n    theory_presentation: function (n) {\n      this.now_select_ingre = n;\n      this.ingre_presentation_modal_onoff = true;\n\n      switch (n) {\n        case '1':\n          this.$refs.select_ingre.innerHTML = \"<img class='ingre_presentation_selected_ingre' src='@/assets/img/material_card/ingredient_1.png'>\";\n          break;\n\n        case '2':\n          this.$refs.select_ingre.innerHTML = \"<img class='ingre_presentation_selected_ingre' src='@/assets/img/material_card/ingredient_2.png'>\";\n          break;\n\n        case '3':\n          this.$refs.select_ingre.innerHTML = \"<img class='ingre_presentation_selected_ingre' src='@/assets/img/material_card/ingredient_3.png'>\";\n          break;\n\n        case '4':\n          this.$refs.select_ingre.innerHTML = \"<img class='ingre_presentation_selected_ingre' src='@/assets/img/material_card/ingredient_4.png'>\";\n          break;\n\n        case '5':\n          this.$refs.select_ingre.innerHTML = \"<img class='ingre_presentation_selected_ingre' src='@/assets/img/material_card/ingredient_5.png'>\";\n          break;\n\n        case '6':\n          this.$refs.select_ingre.innerHTML = \"<img class='ingre_presentation_selected_ingre' src='@/assets/img/material_card/ingredient_6.png'>\";\n          break;\n\n        case '7':\n          this.$refs.select_ingre.innerHTML = \"<img class='ingre_presentation_selected_ingre' src='@/assets/img/material_card/ingredient_7.png'>\";\n          break;\n\n        case '8':\n          this.$refs.select_ingre.innerHTML = \"<img class='ingre_presentation_selected_ingre' src='@/assets/img/material_card/ingredient_8.png'>\";\n          break;\n      }\n    },\n    // 발표하기 버튼으로 실행될 함수\n    theory_confirm: function () {\n      //발표 \n      if (this.board_6_selected == true) {\n        // 넘겨야 하는 정보\n        // 재료번호(ingre), 원소번호(ele), 스탬프 번호(stm), 유저키, 유저색 ,큐브순서, 보드순서\n        let send_data = {\n          element: this.before_theory_ele_select_num,\n          ingre: this.now_select_ingre,\n          user_key: this.my_key,\n          user_color: this.my_color,\n          stamp: this.before_theory_stm_select_num,\n          cube_order: this.board_cube_order,\n          board_order: this.board_order\n        };\n        console.log(send_data); //socket.emit(\"presentation_theory\",send_data);\n        // 선택된 재료 초기화\n\n        this.before_theory_ele_select_num = 0;\n        this.before_theory_stm_select_num = 0;\n      } //반박\n      else if (this.board_5_selected == true) {\n        // 넘겨야 하는 정보\n        // 재료번호(ingre), 틀리다고 주장할 원소 색(ori), 유저키(user_key), 큐브순서, 보드순서\n        let send_data = {\n          ingre: this.now_select_ingre,\n          ori: this.before_refute_ori_select_num,\n          user_key: this.my_key,\n          cube_order: this.board_cube_order,\n          board_order: this.board_order\n        };\n        console.log(send_data); //socket.emit(\"refuting_theory_data\", send_data);\n        // 변수 초기화\n\n        this.before_refute_ori_select_num = 0;\n      } // 선택한 원소 지우기\n\n\n      this.$refs.select_ingre.innerHTML = \"\"; // 원소 발표/반박 모달 끄기!\n      // this.ingre_presentation_modal_onoff = false;\n    },\n    //논문 반박에서 어떤 원소를 반박할 건지 선택하는 함수\n    theory_origin_select: function (n) {\n      // 이미 선택된 다른 것이 있다면 해제하고 새로 고른 것을 선택해야함\n      let num = 0;\n\n      if (this.before_refute_ori_select_num > 0) {\n        switch (this.before_refute_ori_select_num) {\n          case '1':\n            num = this.$refs.ele_core_1[0].className.indexOf('selected');\n\n            if (num > 0) {\n              this.$refs.ele_core_1[0].className = this.$refs.ele_core_1[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case '2':\n            num = this.$refs.ele_core_2[0].className.indexOf('selected');\n\n            if (num > 0) {\n              this.$refs.ele_core_2[0].className = this.$refs.ele_core_2[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case '3':\n            num = this.$refs.ele_core_3[0].className.indexOf('selected');\n\n            if (num > 0) {\n              this.$refs.ele_core_3[0].className = this.$refs.ele_core_3[0].className.substring(0, num - 1);\n            }\n\n            break;\n        }\n      } // 현재 선택된 값을 수정\n\n\n      let ref_str = '';\n\n      switch (n) {\n        case '1':\n          ref_str = this.$refs.ele_core_1;\n          break;\n\n        case '2':\n          ref_str = this.$refs.ele_core_2;\n          break;\n\n        case '3':\n          ref_str = this.$refs.ele_core_3;\n          break;\n      } // 현재 변수 저장\n\n\n      this.before_refute_ori_select_num = n;\n      ref_str[0].className += \" selected\";\n    },\n    check_refute_info: function () {\n      //서버에 체크 데이터 전송\n      socket.emit(\"check_refute_info\", this.reciving_data); // 변수 초기화\n\n      this.reciving_data = ''; // 반박 성공확인창 끄기\n\n      this.success_refute_modal_onoff = false;\n    },\n    click_exhibition_potion: function (potion_num) {\n      // 발표할 원소번호를 저장하고\n      this.exhibition_potion_num = potion_num; // 발표할 모달을 켜기!\n\n      this.exhibition_check_modal_onoff = true;\n    },\n    // 물약 발표회에서 발표할 물약의 재료 2가지를 선택할 함수\n    // name :: card_1~8\n    exhibit_select_ingre: function (name) {\n      // 이미 2가지가 선택되어 있으면 가장 먼저 들어온 1개를 제거하고 마지막에 들어온 한개를 진행\n      if (this.test_ingredient_list.length == 2) {\n        // 먼저 들어온 1개를 제거\n        let before_name = this.test_ingredient_list.shift();\n        let num = 0;\n\n        switch (before_name) {\n          case 'card_1':\n            num = this.$refs.exhibit_card_1[0].className.indexOf('test_border');\n\n            if (num > 0) {\n              this.$refs.exhibit_card_1[0].className = this.$refs.exhibit_card_1[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case 'card_2':\n            num = this.$refs.exhibit_card_2[0].className.indexOf('test_border');\n\n            if (num > 0) {\n              this.$refs.exhibit_card_2[0].className = this.$refs.exhibit_card_2[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case 'card_3':\n            num = this.$refs.exhibit_card_3[0].className.indexOf('test_border');\n\n            if (num > 0) {\n              this.$refs.exhibit_card_3[0].className = this.$refs.exhibit_card_3[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case 'card_4':\n            num = this.$refs.exhibit_card_4[0].className.indexOf('test_border');\n\n            if (num > 0) {\n              this.$refs.exhibit_card_4[0].className = this.$refs.exhibit_card_4[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case 'card_5':\n            num = this.$refs.exhibit_card_5[0].className.indexOf('test_border');\n\n            if (num > 0) {\n              this.$refs.exhibit_card_5[0].className = this.$refs.exhibit_card_5[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case 'card_6':\n            num = this.$refs.exhibit_card_6[0].className.indexOf('test_border');\n\n            if (num > 0) {\n              this.$refs.exhibit_card_6[0].className = this.$refs.exhibit_card_6[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case 'card_7':\n            num = this.$refs.exhibit_card_7[0].className.indexOf('test_border');\n\n            if (num > 0) {\n              this.$refs.exhibit_card_7[0].className = this.$refs.exhibit_card_7[0].className.substring(0, num - 1);\n            }\n\n            break;\n\n          case 'card_8':\n            num = this.$refs.exhibit_card_8[0].className.indexOf('test_border');\n\n            if (num > 0) {\n              this.$refs.exhibit_card_8[0].className = this.$refs.exhibit_card_8[0].className.substring(0, num - 1);\n            }\n\n            break;\n        }\n      } // 변수에 추가\n\n\n      this.test_ingredient_list.push(name);\n      let ref_str = '';\n\n      switch (name) {\n        case 'card_1':\n          ref_str = this.$refs.exhibit_card_1;\n          break;\n\n        case 'card_2':\n          ref_str = this.$refs.exhibit_card_2;\n          break;\n\n        case 'card_3':\n          ref_str = this.$refs.exhibit_card_3;\n          break;\n\n        case 'card_4':\n          ref_str = this.$refs.exhibit_card_4;\n          break;\n\n        case 'card_5':\n          ref_str = this.$refs.exhibit_card_5;\n          break;\n\n        case 'card_6':\n          ref_str = this.$refs.exhibit_card_6;\n          break;\n\n        case 'card_7':\n          ref_str = this.$refs.exhibit_card_7;\n          break;\n\n        case 'card_8':\n          ref_str = this.$refs.exhibit_card_8;\n          break;\n      }\n\n      ref_str[0].className += \" test_border\";\n    },\n    // 물약 전시회에서 시연할 재료를 고르고 결정버튼을 눌렀을 떄 실행될 함수\n    click_exhibit_ingre: function () {\n      if (this.test_ingredient_list.length != 2) {\n        alert(\"재료카드 2장을 선택해주세요!\");\n        return;\n      }\n\n      let exhibit_potion = '';\n\n      switch (this.exhibition_potion_num) {\n        case '1':\n          exhibit_potion = 'red_1';\n          break;\n\n        case '2':\n          exhibit_potion = 'red_0';\n          break;\n\n        case '3':\n          exhibit_potion = 'green_1';\n          break;\n\n        case '4':\n          exhibit_potion = 'green_0';\n          break;\n\n        case '5':\n          exhibit_potion = 'blue_1';\n          break;\n\n        case '6':\n          exhibit_potion = 'blue_0';\n          break;\n      }\n\n      let send_data = {\n        user_key: this.my_key,\n        user_color: this.my_color,\n        card_list: this.test_ingredient_list,\n        exhibit_potion: exhibit_potion,\n        board_order: this.board_order,\n        cube_order: this.board_cube_order\n      }; // 발표!\n\n      socket.emit(\"exhibit_ingre\", send_data); // 선택한 재료카드 초기화\n\n      this.test_ingredient_list = []; // 발표할 원소번호 초기화\n\n      this.exhibition_potion_num = -1;\n    }\n  }\n};","map":{"version":3,"names":["socket","default","modal_area","personal_game_data","adventurer_selling","name","components","Modal_component","Personal_game_data","Adventurer_selling","created","emit","my_key","id","mounted","on","data","user_data","i","length","is_master","room_owner","user_name","user_key","my_data","my_name","my_color","user_color","msg","speaker","type","textarea","$refs","show_chat","scrollTop","scrollHeight","ingredient_card_selected","card_1","card_2","card_3","card_4","card_5","random_adv_list","adventurer_card_data","discount_coin_list","is_end_discount","make_potion_to_sell_onoff","selling_end_modal","sell_potion_turn","selling_user_color","selling_success","selling_potion_kind","potion","selling_turn","final_round_order","result_table","round_cont","theory_data","exhibition_result","as","j","choice_data","push","round_setting_order","round_setting_order_counter","btn_ele","btn_before_ele","order","btn_1","btn_2","btn_3","btn_4","btn_5","btn_6","btn_7","btn_8","before_order","num","className","indexOf","str","substring","decide_order","can_buy_artifacts","alert","say","reciving_data","success_refute_modal_onoff","start_board","board_1_selected","board_2_selected","board_3_selected","board_4_selected","board_5_selected","board_6_selected","board_7_selected","board_8_selected","sell_ingredient_modal_onoff","test_ingredient_modal_onoff","reasoning_table_onoff","presentation_of_theories_modal","ingre_presentation_modal_onoff","board_order","sell_potion_to_adv_modal_onoff","my_turn","board_end_selected","last_round_modal_onoff","console","log","board_cube_order","user_cube_data","is_select","exhibition_check_modal_onoff","my_selling_price","before_adv_discount_select_num","user_num","open_result_user","open_result","test_result","open_result_modal","total_dicount_adventruer","message","decide_order_modal","round_order_check","get_discount_coin","im_end_discount","what_kind_sell_potion","test_ingredient_list","my_reasoning_table_modal","icon_data","require","reasoning_data","black_stamp_data","blue_stamp_data","red_stamp_data","white_stamp_data","ele_core_data","picked","before_theory_ele_select_num","before_theory_stm_select_num","now_select_ingre","before_refute_ori_select_num","exhibition_potion_num","methods","use_chat","draw_ingredient_card","cnt","round_ready","round_order_setting_end","round_order_setting_close","decide_order_modal_open","decide_order_setting_end","is_select_order","select_order_btn","val","round_order_data","click_order_btn","n","u","is_ready","is_ingame","send_data","cube_round_order_num","button_order_num","click_reasoning_ele","index","key","x","y","change_val","reasoning_table_open","open_reasoning_table_modal","index_val","innerText","key_val","reset_val","pick_ingredient","pick_item","cube_order","ingredient_select_arr_order","click_sell_ingredient_check","user_ingame_data","ingredient","sell_card_1","sell_card_2","sell_card_3","sell_card_4","sell_card_5","card_6","sell_card_6","card_7","sell_card_7","card_8","sell_card_8","ref_str","click_sell_ingredient","sell_item_num","buy_artifact_confirm","rank","arti_num","click_test_ingredient_check","before_name","shift","test_card_1","test_card_2","test_card_3","test_card_4","test_card_5","test_card_6","test_card_7","test_card_8","click_test_ingredient","board_is","card_list","open_result_modal_close","select_adv_dis_coin","ad_0_ico","ad_1_ico","ad_2_ico","ad_3_ico","adv_dis_confirm","color","dis_coin_num","sell_potion_set_price","decision_sell_potion_price","sell_price","select_sell_potion_kind","kind","make_potion_preparation","hold_before_adv_discount_num","theory_element_select","ele_1","ele_2","ele_3","ele_4","ele_5","ele_6","ele_7","ele_8","theory_stamp_select","stm_1","stm_2","stm_3","stm_4","stm_5","stm_6","stm_7","stm_8","stm_9","stm_10","stm_11","theory_presentation","select_ingre","innerHTML","theory_confirm","element","ingre","stamp","ori","theory_origin_select","ele_core_1","ele_core_2","ele_core_3","check_refute_info","click_exhibition_potion","potion_num","exhibit_select_ingre","exhibit_card_1","exhibit_card_2","exhibit_card_3","exhibit_card_4","exhibit_card_5","exhibit_card_6","exhibit_card_7","exhibit_card_8","click_exhibit_ingre","exhibit_potion"],"sources":["E:/GitHub/personal_tranning/alchemists_vue/alchemists/src/assets/script/game_board.js"],"sourcesContent":["import { socket } from '@/components/game_lobby.vue'\r\nimport { default as modal_area } from '@/components/modal_area.vue'\r\nimport { default as personal_game_data } from '@/components/personal_game_data.vue' \r\nimport { default as adventurer_selling } from '@/components/adventurer_selling.vue'\r\n\r\nexport default {\r\n    name : 'game_board',\r\n    components : {\r\n        Modal_component : modal_area,\r\n        Personal_game_data : personal_game_data,\r\n        Adventurer_selling : adventurer_selling,\r\n    },\r\n    created() {\r\n        // 게임 초기화 & 시작 트리거\r\n        socket.emit(\"created_data_announce\");\r\n        this.my_key = socket.id;\r\n    },\r\n    mounted () {\r\n        //최초 분배된 기본 재료 수령\r\n        socket.on(\"get_ingame_data\", (data) => {\r\n            this.user_data = data;\r\n            for(let i = 0; i < data.length; i++){\r\n                if( data[i].is_master === 'true' ) {\r\n                    this.room_owner = data[i].user_name;\r\n                }\r\n                if( data[i].user_key == this.my_key ){\r\n                    this.my_data = data[i];\r\n                    this.my_name = data[i].user_name;\r\n                    this.my_color = data[i].user_color;\r\n                }\r\n            }\r\n\r\n            let msg = {\r\n                speaker : this.my_name,\r\n                msg     : \"방에 입장하였습니다.\",\r\n                type    : 'announce',\r\n            }\r\n            socket.emit(\"chat\", msg);\r\n        });\r\n        \r\n        //채팅 on\r\n        socket.on(\"chat\", (data) => {\r\n            // console.log(\"서버에서 받아온 데이터\");\r\n            // console.log(data);\r\n            // console.log(\"받아오기 끝\");\r\n            switch ( data.type ) {\r\n                case \"announce\" :\r\n                    this.textarea += data.speaker + \" 이(가) \" + data.msg + \"\\n\";\r\n                    break;\r\n                case \"normal\" :\r\n                    this.textarea += data.speaker + \" : \" + data.msg + \"\\n\";\r\n                    break;\r\n            }\r\n            // 스크롤을 자동으로 내림\r\n            this.$refs.show_chat.scrollTop = this.$refs.show_chat.scrollHeight;\r\n        });\r\n\r\n        // 선택할 수 있는 카드 공개\r\n        socket.on(\"ingredient_select_card_open\", (data) => {\r\n            //console.log(data);\r\n            this.ingredient_card_selected.card_1 = data[0];\r\n            this.ingredient_card_selected.card_2 = data[1];\r\n            this.ingredient_card_selected.card_3 = data[2];\r\n            this.ingredient_card_selected.card_4 = data[3];\r\n            this.ingredient_card_selected.card_5 = data[4];\r\n        });\r\n\r\n        // 이번 게임에서 사용할 용병 리스트\r\n        socket.on(\"adv_list_setting\", (data) => {\r\n            this.random_adv_list = data;\r\n            //console.log(this.random_adv_list);\r\n        });\r\n        // 용병에게 판매 가능한 물약 리스트\r\n        socket.on(\"adv_sell_potion_list\", (data) => {\r\n            this.adventurer_card_data = data;\r\n            // console.log(this.adventurer_card_data);\r\n        })\r\n\r\n        // 용병에게 할인카드 제시가 끝났음을 받는 함수\r\n        socket.on(\"end_adv_dis_step\", (data) => {\r\n            this.discount_coin_list = data;\r\n            this.is_end_discount = true;\r\n            // console.log(this.discount_coin_list);\r\n        });\r\n\r\n        // 용병에게 판매할 물약의 값을 결정되었음을 받는 함수\r\n        socket.on(\"selling_start\", () => {\r\n            // 물약 생성 모달 on \r\n            this.make_potion_to_sell_onoff = true;\r\n        });\r\n\r\n        // 용병에게 물약 판매가 끝났음을 알리는 함수\r\n        socket.on(\"selling_potion_end\", (data) => {\r\n            // 물약 판매 모달 닫기\r\n            this.make_potion_to_sell_onoff = false;\r\n            this.selling_end_modal = true;\r\n            if( data.user_key == this.my_key ){\r\n                this.sell_potion_turn = false;\r\n            }\r\n            this.selling_user_color = data.user_color;\r\n            this.selling_success = data.selling_success;\r\n            this.selling_potion_kind = data.potion;\r\n        });\r\n\r\n        // 용병에게 물약판매 순서를 받는 함수\r\n        socket.on(\"change_selling_turn\", (data) => {\r\n            this.selling_turn = data;\r\n        });\r\n\r\n        // 변경된 게임 데이터를 받는 함수\r\n        socket.on(\"change_user_data\", (data) => {\r\n            this.user_data = data;\r\n            for( let i = 0; i < data.length; i++){\r\n                if( data[i].user_key == this.my_key ){\r\n                    this.my_data = data[i];\r\n                    break;\r\n                }\r\n            }\r\n            //console.log(this.user_data);\r\n        });\r\n        // 변경된 final_round_order를 데이터를 받는 함수 \r\n        socket.on(\"change_final_round_order\", (data) => {\r\n            this.final_round_order = data;\r\n            //console.log(this.final_round_order);\r\n        });\r\n\r\n        // 변경된 result_table : 추리 테이블 데이터를 받는 함수\r\n        socket.on(\"change_result_table\", (data) => {\r\n            this.result_table = data;\r\n            //console.log(this.result_table);\r\n        });\r\n\r\n        // 몇 라운드 인지 받기\r\n        socket.on(\"change_round\", (data) => {\r\n            this.round_cont = data;\r\n            // console.log(this.round_cont);\r\n        });\r\n\r\n        // 논문 관련 데이터 받기\r\n        socket.on(\"change_theory_data\", (data) => {\r\n            this.theory_data = data;\r\n            // console.log(this.theory_data);\r\n        });\r\n\r\n        // 물약 전시회 데이터 받기\r\n        socket.on(\"change_exhibition_data\", (data) => {\r\n            this.exhibition_result = data;\r\n            // console.log(this.exhibition_result);\r\n        });\r\n\r\n        // 게임 순서를 정하는 순서의 정보 받는 함수\r\n        socket.on(\"round_order_setting_before\" , (data) => {\r\n            //console.log(data);\r\n            let as = [];\r\n\r\n            for( let i = 0; i < data.length; i++) {\r\n                for( let j = 0; j < this.user_data.length; j++){\r\n                    if( data[i] == this.user_data[j].user_key ){\r\n\r\n                        let choice_data = {\r\n                            user_key  : this.user_data[j].user_key,\r\n                            user_name : this.user_data[j].user_name,\r\n                        }\r\n                        \r\n                        as.push(choice_data);\r\n                        \r\n                        choice_data = '';\r\n                    }\r\n                }\r\n            }\r\n            this.round_setting_order = as;\r\n            //console.log(this.round_setting_order[0].user_key);\r\n            //console.log(this.round_order[this.round_order_selecter].user_key);\r\n        });\r\n\r\n        // 게임 순서를 정하는 순서를 정하는 변수를 받는 함수 \r\n        socket.on(\"decide_round_setting_order_counter_send\", (data) => {\r\n            this.round_setting_order_counter = data;\r\n        });\r\n\r\n        // 라운드 진행 순서를 고른 정보를 받는 함수\r\n        socket.on(\"select_round_order_recive\", (data) => {\r\n            let btn_ele = '';\r\n            let btn_before_ele = '';\r\n            \r\n            for( let i = 0; i < data.length; i++){\r\n                 // 순서에 맞는 element를 선택\r\n                switch(data[i].order) {\r\n                    case 1 : \r\n                        btn_ele = this.$refs.btn_1;\r\n                        break;\r\n                    case 2 :\r\n                        btn_ele = this.$refs.btn_2;\r\n                        break;\r\n                    case 3 :\r\n                        btn_ele = this.$refs.btn_3;\r\n                        break;\r\n                    case 4 : \r\n                        btn_ele = this.$refs.btn_4;\r\n                        break;\r\n                    case 5 :\r\n                        btn_ele = this.$refs.btn_5;\r\n                        break;\r\n                    case 6 :\r\n                        btn_ele = this.$refs.btn_6;\r\n                        break;\r\n                    case 7 :\r\n                        btn_ele = this.$refs.btn_7;\r\n                        break;\r\n                    case 8 :\r\n                        btn_ele = this.$refs.btn_8;\r\n                        break;\r\n                }\r\n                switch( data[i].before_order ){\r\n                    case 1 : \r\n                        btn_before_ele = this.$refs.btn_1;\r\n                        break;\r\n                    case 2 :\r\n                        btn_before_ele = this.$refs.btn_2;\r\n                        break;\r\n                    case 3 :\r\n                        btn_before_ele = this.$refs.btn_3;\r\n                        break;\r\n                    case 4 : \r\n                        btn_before_ele = this.$refs.btn_4;\r\n                        break;\r\n                    case 5 :\r\n                        btn_before_ele = this.$refs.btn_5;\r\n                        break;\r\n                    case 6 :\r\n                        btn_before_ele = this.$refs.btn_6;\r\n                        break;\r\n                    case 7 :\r\n                        btn_before_ele = this.$refs.btn_7;\r\n                        break;\r\n                    case 8 :\r\n                        btn_before_ele = this.$refs.btn_8;\r\n                        break;\r\n                }\r\n                //console.log(btn_ele[0].className);\r\n                // 기존의 것이 있으면 기존 색 class 제거\r\n                if( btn_before_ele != '' ){\r\n\r\n                    let num = btn_before_ele[0].className.indexOf(data[i].user_color);\r\n                    // 문구 검색 결과가 있으면 제거 \r\n                    if ( num > 0 ){\r\n                        let str = btn_before_ele[0].className.substring(0, num-1);\r\n                        btn_before_ele[0].className = str;\r\n                    }\r\n                    // 결과가 음수면 없는 것이므로 넘김\r\n                }\r\n\r\n                // 기존의 것을 없앤 완전 초기화 상태이므로  기존의 것과 중복 되더라도 그냥 진행 가능\r\n                // 기존 : 5 신규 5 일 경우 위에서 이미 검사하지 않고 지웠으므로\r\n                // 신규 5를 다시 칠함\r\n                // 두 함수에서 모두 if로 구분하여 ifif중복하기 귀찮아서 그냥 무조건 지우고 무조건 색칠\r\n                if( btn_ele != '' ){\r\n                    btn_ele[0].className += ' ' + data[i].user_color;\r\n                    //console.log(btn_ele[0].className);\r\n                }\r\n                // 변수 초기화\r\n                btn_before_ele = '';\r\n                btn_ele = '';\r\n\r\n            }\r\n            // 내부 변수에도 값을 적용\r\n            this.final_round_order = data;\r\n            //console.log(data);\r\n        });\r\n\r\n        // 라운드 진행 순서를 고르는 것이 끝났다는 알림을 받는 함수 \r\n        socket.on(\"decide_round_setting_order_end\", (data) => {\r\n            this.decide_order = !this.decide_order;\r\n            // final_round_order을 고른 order에 맞게 재정렬한 값으로 재전송 받음\r\n            this.final_round_order = data;\r\n        });\r\n\r\n        // 판매하는 아티펙트 정보를 받는 함수\r\n        socket.on(\"can_buy_artifacts_list\", (data) => {\r\n            this.can_buy_artifacts = data;\r\n            //console.log(this.can_buy_artifacts);\r\n        });\r\n\r\n        // 큐브 선택시 사용 가능 큐브가 없을 때\r\n        socket.on(\"cant_use_cube\", (data) => {\r\n            alert(data.say);\r\n        });\r\n\r\n        // 논문 반박 성공시 모달 오픈 함수\r\n        socket.on(\"open_stamp_modal\", (data) => {\r\n            this.reciving_data = data;\r\n            this.success_refute_modal_onoff = true;\r\n        });\r\n\r\n        // 보드 순서 시작\r\n        socket.on(\"board_start\", (start_board) => {\r\n            // 모두 false로 만들고 선택된 보드만 true로 변경\r\n            this.board_1_selected = false;\r\n            this.board_2_selected = false;\r\n            this.board_3_selected = false;\r\n            this.board_4_selected = false;\r\n            this.board_5_selected = false;\r\n            this.board_6_selected = false;\r\n            this.board_7_selected = false;\r\n            this.board_8_selected = false;\r\n            // 다른 보드 의 모달 끄기\r\n            this.sell_ingredient_modal_onoff = false;\r\n            this.test_ingredient_modal_onoff = false;\r\n            this.reasoning_table_onoff = false;\r\n            this.presentation_of_theories_modal = false;\r\n            this.ingre_presentation_modal_onoff = false;\r\n            this.success_refute_modal_onoff = false;\r\n            this.board_order = 0;\r\n            this.sell_potion_to_adv_modal_onoff = false;\r\n            // 보드 순서 끄기\r\n            this.my_turn = false;\r\n            switch(start_board) {\r\n                case 1 : \r\n                    //재료 선택\r\n                    this.board_1_selected = true;\r\n                    break;\r\n                case 2 : \r\n                    //재료 판매\r\n                    this.board_2_selected = true;\r\n                    this.sell_ingredient_modal_onoff = true;\r\n                    break;\r\n                case 3 :\r\n                    // 용병에게 뭉약 판매\r\n                    this.board_3_selected = true;\r\n                    this.sell_potion_to_adv_modal_onoff = true;\r\n                    break;\r\n                case 4 : \r\n                    //아티펙트 구매\r\n                    this.board_4_selected = true;\r\n                    break;\r\n                case 5 :\r\n                    // 논문 반박\r\n                    this.board_5_selected = true;\r\n                    this.presentation_of_theories_modal = true;\r\n                    break;\r\n                case 6 :\r\n                    //논문 발표\r\n                    this.board_6_selected = true; \r\n                    this.presentation_of_theories_modal = true;\r\n                    break;\r\n                case 7 :\r\n                    //학생에게 실험\r\n                    this.board_7_selected = true;\r\n                    this.test_ingredient_modal_onoff = true;\r\n                    break;\r\n                case 8 :\r\n                    //교수에게 실험\r\n                    this.board_8_selected = true;\r\n                    this.test_ingredient_modal_onoff = true;\r\n                    break;\r\n                case 9 :\r\n                    // 물약 발표회\r\n                    this.board_end_selected = true;\r\n                    this.last_round_modal_onoff = true;\r\n                    break;\r\n                default:\r\n                    console.log(\"start_board_val_err \" + start_board);\r\n                    break;\r\n            }\r\n            \r\n            // 선택되지 못한 보드가 눌렸을 경우 현재 선택된 보드만 누르게 경고를 띄워야함\r\n\r\n        });\r\n        \r\n        //보드 진행 시 순서 관련 변수 업데이트\r\n        socket.on(\"change_board_order_val\", (data) => {            \r\n            this.board_order = data.board_order;\r\n            this.board_cube_order = data.board_cube_order;\r\n\r\n            // 보드 순서 일 때 변수 입력\r\n            if( this.board_2_selected == true || // 재료 판매\r\n                this.board_5_selected == true || // 논문 반박\r\n                this.board_6_selected == true || // 논문 발표\r\n                this.board_7_selected == true || // 학생에게 실험\r\n                this.board_8_selected == true    // 본인에게 실험\r\n                ){\r\n                if( this.final_round_order[this.board_order].user_key == this.my_key ){\r\n                    this.my_turn = true;\r\n                }else {\r\n                    this.my_turn = false;\r\n                }\r\n            }\r\n            // 물약 판매 순서일 경우 판매하는 모든 사람들이 동시에 진행할 수 있어야함\r\n            if( this.board_3_selected == true ){\r\n                for( let i = 0; i < this.final_round_order.length; i++){\r\n                    // 내 차례가 있으면 그냥 보여주기\r\n                    if( this.final_round_order[i].user_key == this.my_key ){\r\n                        if( this.final_round_order[i].user_cube_data[2][1].is_select == true ) {\r\n                            this.sell_potion_turn = true;\r\n                            break;\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        socket.on(\"round_end\", () => {\r\n            // 모든 보드 포인터 끄기\r\n            this.board_1_selected = false;\r\n            this.board_2_selected = false;\r\n            this.board_3_selected = false;\r\n            this.board_4_selected = false;\r\n            this.board_5_selected = false;\r\n            this.board_6_selected = false;\r\n            this.board_7_selected = false;\r\n            this.board_8_selected = false;\r\n            // 모든 모달 끄기\r\n            this.sell_ingredient_modal_onoff = false;\r\n            this.test_ingredient_modal_onoff = false;\r\n            this.reasoning_table_onoff = false;\r\n            this.presentation_of_theories_modal = false;\r\n            this.ingre_presentation_modal_onoff = false;\r\n            this.success_refute_modal_onoff = false;\r\n            this.last_round_modal_onoff = false;\r\n            this.exhibition_check_modal_onoff = false;\r\n            // 보드 칸 순서 끄기\r\n            this.my_turn = false;\r\n            // 용병에게 물약 판매 초기환\r\n            this.my_selling_price = -1;\r\n            this.selling_turn = 0;\r\n            this.discount_coin_list = [];\r\n            this.before_adv_discount_select_num = -1;\r\n            // overlay 켜서 다시 순서 정하기 시작\r\n            this.decide_order = !this.decide_order;\r\n            this.final_round_order = '';\r\n        });\r\n\r\n        socket.on(\"test_ingredient_result\", (data) => {\r\n            let user_num = -1;\r\n            for( let i = 0; i < this.user_data.length; i++){\r\n                if( this.user_data[i].user_key == data.user_key ){\r\n                    user_num = i;\r\n                }\r\n            }\r\n\r\n            this.open_result_user = this.user_data[user_num].user_name;\r\n            this.open_result = data.test_result;\r\n\r\n            this.open_result_modal = true;\r\n        });\r\n\r\n    },\r\n    data() {\r\n        return  {\r\n            user_data : '', \r\n            my_key : '',\r\n            my_data : '',\r\n            my_name : '',\r\n            my_color : '',\r\n            room_owner : '',\r\n            total_dicount_adventruer : 4,\r\n            textarea : '',\r\n            message : '',\r\n            ingredient_card_selected : {\r\n                card_1 : '0',\r\n                card_2 : '0',\r\n                card_3 : '0',\r\n                card_4 : '0',\r\n                card_5 : '0',\r\n            },\r\n            // overlay\r\n            decide_order : false,\r\n            // overlay 완료버튼으로 나오는 modal\r\n            decide_order_modal : false,\r\n            // 현재 라운드\r\n            round_cont : 0,\r\n            // 라운드 순서를 정하는 순서 정보\r\n            round_setting_order : '',\r\n            // 라운드 순서를 정하는 순서 \r\n            round_setting_order_counter : 0,\r\n            // 해당 라운드의 순서 결정완료 후 순서\r\n            final_round_order : [],\r\n            // 라운드 준비 완료 확인 모달\r\n            round_order_check : false,\r\n            // 구매 가능한 아티펙트 변수\r\n            can_buy_artifacts : '',\r\n            // 재료조합 추리 및 결과 테이블\r\n            result_table : [],\r\n            // board 선택을 위한 변수 8개\r\n            board_1_selected :false,\r\n            board_2_selected :false,\r\n            board_3_selected :false,\r\n            board_4_selected :false,\r\n            board_5_selected :false,\r\n            board_6_selected :false,\r\n            board_7_selected :false,\r\n            board_8_selected :false,\r\n            // 매 보드마다 순서를 정할 변수\r\n            board_order : 0,\r\n            // 큐브 순서를 정할 변수\r\n            board_cube_order : 1,\r\n            // 2번째 보드 modal\r\n            sell_ingredient_modal_onoff : false,\r\n            // 보드의 현재 순서가 자신인지 확인하는 변수\r\n            my_turn : false,\r\n\r\n            // 용병에게 물약 판매 모달\r\n            sell_potion_to_adv_modal_onoff : false,\r\n            // 용병에게 물약 판매 차례를 진행할 사람들만 표기할 변수\r\n            sell_potion_turn : false,\r\n            // 용병 순서 변수\r\n            random_adv_list : [],\r\n            // 용병이 판매할 물약 변수\r\n            adventurer_card_data : '',\r\n            // 할인 포인트 제시 여부\r\n            get_discount_coin : false,\r\n            // 선택한 할인 카드 저장 변수\r\n            before_adv_discount_select_num : -1,\r\n            // 제시한 할인 카드 를 저장할 변수\r\n            discount_coin_list : [],\r\n            // 할인제시 스텝이 끝났는지 안끝났는지 알려줄 변수\r\n            is_end_discount : false,\r\n            // 나의 할인 스텝이 끝났을 때 기다리기 위한 변수\r\n            im_end_discount : false,\r\n            // 내 판매가\r\n            my_selling_price : 0,\r\n            // 판매 차례\r\n            selling_turn : 0,\r\n            // 판매할 물약 생성\r\n            make_potion_to_sell_onoff : false,\r\n            // 판매할 물약 종류 설정\r\n            what_kind_sell_potion : '',\r\n            // 판매 성공/실패 모달 \r\n            selling_end_modal : false,\r\n            // 판매 성공/실패 변수\r\n            selling_success : false,\r\n            // 판매 성공/실패한 유저의 색\r\n            selling_user_color : '',\r\n            // 판매한 물약\r\n            selling_potion_kind : '',\r\n\r\n            // 실험할 재료를 저장해둘 변수\r\n            test_ingredient_list : [],\r\n            // 실험 모달\r\n            test_ingredient_modal_onoff : false,\r\n            // 추리 테이블 모달\r\n            my_reasoning_table_modal : false,\r\n            // 추리 테이블 관련 변수\r\n            icon_data : {\r\n                0 : require('@/assets/img/material_card/ingredient_1.png'),\r\n                1 : require('@/assets/img/material_card/ingredient_2.png'),\r\n                2 : require('@/assets/img/material_card/ingredient_3.png'),\r\n                3 : require('@/assets/img/material_card/ingredient_4.png'),\r\n                4 : require('@/assets/img/material_card/ingredient_5.png'),\r\n                5 : require('@/assets/img/material_card/ingredient_6.png'),\r\n                6 : require('@/assets/img/material_card/ingredient_7.png'),\r\n                7 : require('@/assets/img/material_card/ingredient_8.png'),\r\n            },\r\n            reasoning_data : {\r\n                0 : require('@/assets/img/stamp/rgbl010.png'),\r\n                1 : require('@/assets/img/stamp/rgbl101.png'),\r\n                2 : require('@/assets/img/stamp/rglb100.png'),\r\n                3 : require('@/assets/img/stamp/rglb011.png'),\r\n                4 : require('@/assets/img/stamp/rlgb001.png'),\r\n                5 : require('@/assets/img/stamp/rlgb110.png'),\r\n                6 : require('@/assets/img/stamp/rlglbl000.png'),\r\n                7 : require('@/assets/img/stamp/rlglbl111.png'),\r\n            },\r\n            black_stamp_data : {\r\n                0 : require('@/assets/img/stamp/stamp_black_5.png'),\r\n                1 : require('@/assets/img/stamp/stamp_black_5.png'),\r\n                2 : require('@/assets/img/stamp/stamp_black_3.png'),\r\n                3 : require('@/assets/img/stamp/stamp_black_3.png'),\r\n                4 : require('@/assets/img/stamp/stamp_black_3.png'),\r\n                5 : require('@/assets/img/stamp/stamp_black_red.png'),\r\n                6 : require('@/assets/img/stamp/stamp_black_red.png'),\r\n                7 : require('@/assets/img/stamp/stamp_black_green.png'),\r\n                8 : require('@/assets/img/stamp/stamp_black_green.png'),\r\n                9 : require('@/assets/img/stamp/stamp_black_blue.png'),\r\n                10 : require('@/assets/img/stamp/stamp_black_blue.png'),\r\n            },\r\n            blue_stamp_data : {\r\n                0 : require('@/assets/img/stamp/stamp_blue_5.png'),\r\n                1 : require('@/assets/img/stamp/stamp_blue_5.png'),\r\n                2 : require('@/assets/img/stamp/stamp_blue_3.png'),\r\n                3 : require('@/assets/img/stamp/stamp_blue_3.png'),\r\n                4 : require('@/assets/img/stamp/stamp_blue_3.png'),\r\n                5 : require('@/assets/img/stamp/stamp_blue_red.png'),\r\n                6 : require('@/assets/img/stamp/stamp_blue_red.png'),\r\n                7 : require('@/assets/img/stamp/stamp_blue_green.png'),\r\n                8 : require('@/assets/img/stamp/stamp_blue_green.png'),\r\n                9 : require('@/assets/img/stamp/stamp_blue_blue.png'),\r\n                10 : require('@/assets/img/stamp/stamp_blue_blue.png'),\r\n            },\r\n            red_stamp_data : {\r\n                0 : require('@/assets/img/stamp/stamp_red_5.png'),\r\n                1 : require('@/assets/img/stamp/stamp_red_5.png'),\r\n                2 : require('@/assets/img/stamp/stamp_red_3.png'),\r\n                3 : require('@/assets/img/stamp/stamp_red_3.png'),\r\n                4 : require('@/assets/img/stamp/stamp_red_3.png'),\r\n                5 : require('@/assets/img/stamp/stamp_red_red.png'),\r\n                6 : require('@/assets/img/stamp/stamp_red_red.png'),\r\n                7 : require('@/assets/img/stamp/stamp_red_green.png'),\r\n                8 : require('@/assets/img/stamp/stamp_red_green.png'),\r\n                9 : require('@/assets/img/stamp/stamp_red_blue.png'),\r\n                10 : require('@/assets/img/stamp/stamp_red_blue.png'),\r\n            },\r\n            white_stamp_data : {\r\n                0 : require('@/assets/img/stamp/stamp_white_5.png'),\r\n                1 : require('@/assets/img/stamp/stamp_white_5.png'),\r\n                2 : require('@/assets/img/stamp/stamp_white_3.png'),\r\n                3 : require('@/assets/img/stamp/stamp_white_3.png'),\r\n                4 : require('@/assets/img/stamp/stamp_white_3.png'),\r\n                5 : require('@/assets/img/stamp/stamp_white_red.png'),\r\n                6 : require('@/assets/img/stamp/stamp_white_red.png'),\r\n                7 : require('@/assets/img/stamp/stamp_white_green.png'),\r\n                8 : require('@/assets/img/stamp/stamp_white_green.png'),\r\n                9 : require('@/assets/img/stamp/stamp_white_blue.png'),\r\n                10 : require('@/assets/img/stamp/stamp_white_blue.png'),\r\n            },\r\n            ele_core_data : {\r\n                0 : require('@/assets/img/game_icon/red_origin.png'),\r\n                1 : require('@/assets/img/game_icon/green_origin.png'),\r\n                2 : require('@/assets/img/game_icon/blue_origin.png'),\r\n            },\r\n            picked : -1,\r\n            reasoning_table_onoff : false,\r\n            // 실험 결과를 모두에게 보여주는 변수\r\n            open_result : '',\r\n            open_result_user : '',\r\n            open_result_modal : false,\r\n            // 논문 발표/ 반박 시 발표된 정보 저장\r\n            theory_data : '',\r\n            // 논문 발표/ 반박 모달\r\n            presentation_of_theories_modal : false,\r\n            ingre_presentation_modal_onoff : false,\r\n            // 논문 발표/반박 원소 선택 관련 변소\r\n            before_theory_ele_select_num : 0,\r\n            before_theory_stm_select_num : 0,\r\n            now_select_ingre : 0,\r\n            before_refute_ori_select_num : 0,\r\n            // 논문 반박 성공 시 열릴 모달 \r\n            success_refute_modal_onoff : false,\r\n            // 반박 성공시 보여줄 인장들\r\n            reciving_data : '',\r\n\r\n            // 마지막 라운드 모달\r\n            last_round_modal_onoff : false,\r\n            // 마자믹 라운드 보드 켜기\r\n            board_end_selected : false,\r\n            // 잘 발표된 물약 표기\r\n            exhibition_result : '',\r\n            // 발표하기 위한 모달\r\n            exhibition_check_modal_onoff : false,\r\n            exhibition_potion_num : -1,\r\n        }\r\n    },\r\n\r\n    methods : {\r\n        use_chat : function(){\r\n            if( this.message !== '' ){\r\n              let msg = {\r\n                speaker : this.my_name,\r\n                msg : this.message,\r\n                type : \"normal\"\r\n              }\r\n            //   console.log(\"서버에 보낼 데이터\");\r\n            //   console.log(msg);\r\n            //   console.log(\"보낼준비 끝\");\r\n              this.message = '';\r\n              socket.emit(\"chat\", msg);\r\n            }\r\n        },\r\n\r\n        draw_ingredient_card : function(cnt) {\r\n            let data = {\r\n                cnt : cnt,\r\n                my_key : this.my_key,\r\n            }\r\n            socket.emit(\"draw_ingredient_card\", data);\r\n        },\r\n\r\n        // 인게임 라운드 진행 준비 완료를 알리는 함수\r\n        round_ready : function() {\r\n            this.round_order_check = true;\r\n        },\r\n\r\n        round_order_setting_end : function() {\r\n            this.round_order_check = false;\r\n            socket.emit(\"round_ready_on\", this.my_key);\r\n        },\r\n        round_order_setting_close : function() {\r\n            this.round_order_check = false;\r\n        },\r\n\r\n        // decide_order overlay의 완료 버튼\r\n        decide_order_modal_open : function() {\r\n            // 선택 순서에 따라 클릭 막기\r\n            if( this.round_setting_order[this.round_setting_order_counter].user_key != this.my_key){\r\n                alert(\"지금은 내 선택 순서가 아닙니다! 조금만 기다려주세용\");\r\n                return;\r\n            }\r\n            this.decide_order_modal = !this.decide_order_modal;\r\n        },\r\n        \r\n        // decide_order_modal 의 결정 버튼\r\n        decide_order_setting_end : function() {\r\n            \r\n            let is_select_order = false;\r\n\r\n            for( let i = 0; i < this.final_round_order.length; i++){\r\n                if( this.final_round_order[i].user_key == this.my_key ){\r\n                    is_select_order = true;\r\n                    break;\r\n                }\r\n            }\r\n            if( !is_select_order ) {\r\n                alert(\"순서를 고르고 결정을 눌러주세요\");\r\n                this.decide_order_modal = false;\r\n                return;\r\n            }\r\n            //위 if문에 안걸리면 선택한 순서가 있다는 것 이므로 진행\r\n            // 게임 결정 순서를 공유해야 하므로 서버에 값을 증가시키라고 전송\r\n            socket.emit(\"decide_round_setting_order_counter_incre\");\r\n            this.decide_order_modal = false;\r\n        },\r\n\r\n        select_order_btn : function(val){\r\n            // 선택 순서에 따라 클릭 막기\r\n            if( this.round_setting_order[this.round_setting_order_counter].user_key != this.my_key){\r\n                alert(\"지금은 내 선택 순서가 아닙니다! 조금만 기다려주세용\");\r\n                return;\r\n            }\r\n\r\n            // 마지막 순서는 벌칙 존이므로 선택할 수 없다!\r\n            if( val == 8 ){\r\n                alert(\"벌칙 존이라서 선택할 수 없습니다. 다른 순서를 선택해주세요.\");\r\n                return;\r\n            }\r\n            \r\n            if( this.final_round_order != '' ){\r\n                for( let i = 0; i < this.final_round_order.length; i++ ){\r\n                    if( this.final_round_order[i].user_key != this.my_key ){\r\n                        if( val == this.final_round_order[i].order) {\r\n                            alert(\"다른 사람이 선택한 순서는 선택 할 수 없습니다.\");\r\n                            return;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            let round_order_data = {\r\n                user_key : this.my_key,\r\n                order : val\r\n            };\r\n\r\n            // 버튼 선택 결과 전송\r\n            socket.emit(\"select_round_order\", round_order_data);\r\n        },\r\n\r\n        // 큐브로 순서를 선택할 때 반응\r\n        click_order_btn : function(n, u, user_key) {\r\n            for( let i = 0; i < this.user_data.length; i++ ) {\r\n                if( this.user_data[i].user_key == user_key ){\r\n                    if( this.user_data[i].is_ready == true ){\r\n                        alert(\"준비 완료 후에는 선택할 수 없습니다!\");\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if( user_key != this.my_key ){\r\n                alert(\"본인의 색으로 구분된 버튼만 골라주세요!\");\r\n                return;\r\n            }\r\n\r\n            // 라운드가 진행중이면 클릭되선 안됨\r\n            for( let i = 0; i < this.user_data.length; i++ ) {\r\n                if( this.user_data[i].user_key == this.my_key ){\r\n                    if( this.user_data[i].is_ingame == true ){\r\n                        alert(\"라운드 진행 중에는 클릭 할 수 없습니다!\");\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // 1라운드에는 용병에게 물약 판매 / 논문 발표 / 반박을 할 수 없다\r\n            if( this.round_cont == 1 && ( n == 2 || n == 4 || n == 5 ) ){\r\n                alert(\"1라운드에는 해당 보드의 행동을 할 수 없습니다!\\n 다른 보드를 선택해주세요\");\r\n                return;\r\n            }\r\n\r\n            // n :: final_round_order[유저].user_cube_data[n] :: 보드 번호\r\n            // u :: final_round_order[유저].user_cube_data[n][u] :: 보드 의 큐브 번호\r\n            let send_data = {\r\n                user_key : user_key,\r\n                cube_round_order_num : n,\r\n                button_order_num : u,\r\n            }\r\n            //console.log(send_data);\r\n            //버튼 선택 결과 전송\r\n            socket.emit(\"select_cube\", send_data);\r\n        },\r\n\r\n        // 추리테이블 눌렀을 때 반응\r\n        click_reasoning_ele : function(index , key) {\r\n\r\n            let reasoning_data = {\r\n                user_key : this.my_key,\r\n                x : index,\r\n                y : key,\r\n                change_val : this.picked\r\n            }\r\n\r\n            socket.emit(\"reasoning_table_change\", reasoning_data);\r\n            //console.log(reasoning_data);\r\n\r\n            this.picked = -1;\r\n            this.reasoning_table_onoff = false;\r\n        },\r\n        reasoning_table_open : function() {\r\n            this.my_reasoning_table_modal = !this.my_reasoning_table_modal;\r\n        },\r\n\r\n        open_reasoning_table_modal : function( index, key ) {\r\n            this.$refs.index_val.innerText = index;\r\n            this.$refs.key_val.innerText = key;\r\n            //console.log(this.$refs.index_val.innerText);\r\n            //console.log(index + \" \" + key);\r\n            this.reasoning_table_onoff = true;\r\n        },\r\n        reset_val : function () {\r\n            this.picked = -1;\r\n        },\r\n        \r\n\r\n        // 재료카드 선택 이벤트\r\n        pick_ingredient : function(data, index) {\r\n            if( this.board_1_selected == false || this.final_round_order[this.board_order].user_key != this.my_key){\r\n                alert(\"아직 재료를 고를 수 없습니다.\")\r\n                return;\r\n            }\r\n            // 재료 카드 선택 이벤트는 무조건 0번에 존재하므로 \r\n            if( this.final_round_order[this.board_order].user_cube_data[0][this.board_cube_order].is_select == true\r\n                && this.final_round_order[this.board_order].user_key == this.my_key )\r\n            {\r\n                switch(index){\r\n                    case \"card_1\" : \r\n                        index = 0;\r\n                        break;\r\n                    case \"card_2\" : \r\n                        index = 1;\r\n                        break;\r\n                    case \"card_3\" : \r\n                        index = 2;\r\n                        break;\r\n                    case \"card_4\" : \r\n                        index = 3;\r\n                        break;\r\n                    case \"card_5\" :\r\n                        index = 4; \r\n                        break;\r\n                }\r\n                // 위의 변수를 뚫고 내려오면 현재 내가 고를 상태가 맞는것\r\n                let send_data = {\r\n                    user_key : this.my_key,\r\n                    pick_item : data,\r\n                    cube_order : this.board_cube_order,\r\n                    board_order : this.board_order,\r\n                    ingredient_select_arr_order : index,\r\n                }\r\n\r\n                //console.log(send_data);\r\n                socket.emit(\"pick_ingredient\", send_data);\r\n            }\r\n            \r\n        },\r\n\r\n        // 판매 재료카드 선택 이벤트\r\n        click_sell_ingredient_check : function(name, user_key) {\r\n            console.log(name);\r\n            let num = -1;\r\n            // 원래 선택되어 있는지 확인하고 전부 해제 \r\n            for(let i = 0; i < this.user_data.length; i++){\r\n                if( this.user_data[i].user_key == user_key ){\r\n                    if( this.user_data[i].user_ingame_data.ingredient.card_1 > 0 ){\r\n                        num = this.$refs.sell_card_1[0].className.indexOf('sell_border');\r\n                        if( num > 0 ) {\r\n                            let str = this.$refs.sell_card_1[0].className.substring(0, num-1);\r\n                            this.$refs.sell_card_1[0].className = str;\r\n                        }\r\n                    }\r\n                    if ( this.user_data[i].user_ingame_data.ingredient.card_2 > 0 ){\r\n                        num = this.$refs.sell_card_2[0].className.indexOf('sell_border');\r\n                        if( num > 0 ) {\r\n                            let str = this.$refs.sell_card_2[0].className.substring(0, num-1);\r\n                            this.$refs.sell_card_2[0].className = str;\r\n                        }       \r\n                    }\r\n                    if ( this.user_data[i].user_ingame_data.ingredient.card_3 > 0 ){\r\n                        num = this.$refs.sell_card_3[0].className.indexOf('sell_border');\r\n                        if( num > 0 ) {\r\n                            let str = this.$refs.sell_card_3[0].className.substring(0, num-1);\r\n                            this.$refs.sell_card_3[0].className = str;\r\n                        }\r\n                    }\r\n                    if ( this.user_data[i].user_ingame_data.ingredient.card_4 > 0 ){\r\n                        num = this.$refs.sell_card_4[0].className.indexOf('sell_border');\r\n                        if( num > 0 ) {\r\n                            let str = this.$refs.sell_card_4[0].className.substring(0, num-1);\r\n                            this.$refs.sell_card_4[0].className = str;\r\n                        }\r\n                    }\r\n                    if ( this.user_data[i].user_ingame_data.ingredient.card_5 > 0 ){\r\n                        num = this.$refs.sell_card_5[0].className.indexOf('sell_border');\r\n                        if( num > 0 ) {\r\n                            let str = this.$refs.sell_card_5[0].className.substring(0, num-1);\r\n                            this.$refs.sell_card_5[0].className = str;\r\n                        }\r\n                    }\r\n                    if ( this.user_data[i].user_ingame_data.ingredient.card_6 > 0 ){\r\n                        num = this.$refs.sell_card_6[0].className.indexOf('sell_border');\r\n                        if( num > 0 ) {\r\n                            let str = this.$refs.sell_card_6[0].className.substring(0, num-1);\r\n                            this.$refs.sell_card_6[0].className = str;\r\n                        }\r\n                    }\r\n                    if ( this.user_data[i].user_ingame_data.ingredient.card_7 > 0 ){\r\n                        num = this.$refs.sell_card_7[0].className.indexOf('sell_border');\r\n                        if( num > 0 ) {\r\n                            let str = this.$refs.sell_card_7[0].className.substring(0, num-1);\r\n                            this.$refs.sell_card_7[0].className = str;\r\n                        }\r\n                    }\r\n                    if ( this.user_data[i].user_ingame_data.ingredient.card_8 > 0 ){\r\n                        num = this.$refs.sell_card_8[0].className.indexOf('sell_border');\r\n                        if( num > 0 ) {\r\n                            let str = this.$refs.sell_card_8[0].className.substring(0, num-1);\r\n                            this.$refs.sell_card_8[0].className = str;\r\n                        }\r\n                    }\r\n                    break;     \r\n                }\r\n            }\r\n            \r\n            // 전부 해제한 후 선택한 것을 선택표시\r\n            let ref_str = '';\r\n            switch(name){\r\n                case 'card_1':\r\n                    ref_str = this.$refs.sell_card_1;\r\n                    break;\r\n                case 'card_2':\r\n                    ref_str = this.$refs.sell_card_2;\r\n                    break;\r\n                case 'card_3':\r\n                    ref_str = this.$refs.sell_card_3;\r\n                    break;\r\n                case 'card_4':\r\n                    ref_str = this.$refs.sell_card_4;\r\n                    break;\r\n                case 'card_5':\r\n                    ref_str = this.$refs.sell_card_5;\r\n                    break;\r\n                case 'card_6':\r\n                    ref_str = this.$refs.sell_card_6;\r\n                    break;\r\n                case 'card_7':\r\n                    ref_str = this.$refs.sell_card_7;\r\n                    break;\r\n                case 'card_8':\r\n                    ref_str = this.$refs.sell_card_8;\r\n                    break;\r\n            }\r\n            ref_str[0].className += \" sell_border\";\r\n        },\r\n\r\n        // 재료 판매 이벤트\r\n        click_sell_ingredient : function() {\r\n            let num = -1;\r\n            let sell_item_num = 0;\r\n            // 선택된 것을 확인하고 번호를 저장\r\n            // 반드시 한 카드의 클래스에먼 sell_border가 있을것이므로 가능\r\n            for(let i = 0; i < this.user_data.length; i++){\r\n                if( this.user_data[i].user_key == this.my_key ){\r\n                    if( this.user_data[i].user_ingame_data.ingredient.card_1 > 0 ){\r\n                        num = this.$refs.sell_card_1[0].className.indexOf('sell_border');\r\n                        if( num > 0 ) {\r\n                            sell_item_num = 1;\r\n                        }\r\n                    }\r\n                    if ( this.user_data[i].user_ingame_data.ingredient.card_2 > 0 ){\r\n                        num = this.$refs.sell_card_2[0].className.indexOf('sell_border');\r\n                        if( num > 0 ) {\r\n                            sell_item_num = 2;\r\n                        }       \r\n                    }\r\n                    if ( this.user_data[i].user_ingame_data.ingredient.card_3 > 0 ){\r\n                        num = this.$refs.sell_card_3[0].className.indexOf('sell_border');\r\n                        if( num > 0 ) {\r\n                            sell_item_num = 3;\r\n                        }\r\n                    }\r\n                    if ( this.user_data[i].user_ingame_data.ingredient.card_4 > 0 ){\r\n                        num = this.$refs.sell_card_4[0].className.indexOf('sell_border');\r\n                        if( num > 0 ) {\r\n                            sell_item_num = 4;\r\n                        }\r\n                    }\r\n                    if ( this.user_data[i].user_ingame_data.ingredient.card_5 > 0 ){\r\n                        num = this.$refs.sell_card_5[0].className.indexOf('sell_border');\r\n                        if( num > 0 ) {\r\n                            sell_item_num = 5;\r\n                        }\r\n                    }\r\n                    if ( this.user_data[i].user_ingame_data.ingredient.card_6 > 0 ){\r\n                        num = this.$refs.sell_card_6[0].className.indexOf('sell_border');\r\n                        if( num > 0 ) {\r\n                            sell_item_num = 6;\r\n                        }\r\n                    }\r\n                    if ( this.user_data[i].user_ingame_data.ingredient.card_7 > 0 ){\r\n                        num = this.$refs.sell_card_7[0].className.indexOf('sell_border');\r\n                        if( num > 0 ) {\r\n                            sell_item_num = 7;\r\n                        }\r\n                    }\r\n                    if ( this.user_data[i].user_ingame_data.ingredient.card_8 > 0 ){\r\n                        num = this.$refs.sell_card_8[0].className.indexOf('sell_border');\r\n                        if( num > 0 ) {\r\n                            sell_item_num = 8;\r\n                        }\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n\r\n            //판매할 데이터를 묶어 보냄\r\n            let send_data = {\r\n                user_key : this.my_key,\r\n                sell_item_num : sell_item_num,\r\n                board_order : this.board_order,\r\n                cube_order : this.board_cube_order,\r\n            }\r\n            //console.log(send_data);\r\n            socket.emit(\"sell_item_confirm\", send_data);\r\n        },\r\n\r\n        // 아티팩트 구매 가능 여부 확인 및 구매\r\n        buy_artifact_confirm : function( data ) {\r\n            if( this.final_round_order[this.board_order].user_key != this.my_key ||\r\n                this.board_4_selected == false \r\n                ){\r\n                alert(\"자신의 순서에만 구매할 수 있습니다\\n큐브를 두고 해당 보드의 순서가 되면 구매해 주세요\");\r\n                return;\r\n            }\r\n            let send_data = {\r\n                board_order : this.board_order,\r\n                cube_order : this.board_cube_order,\r\n                rank : data.rank,\r\n                arti_num : data.num,\r\n                user_key : this.my_key,\r\n            }\r\n\r\n            socket.emit(\"buy_artifact_confirm\", send_data);\r\n        },\r\n\r\n        // 실험 재료 2개 고르기\r\n        click_test_ingredient_check : function(name){\r\n\r\n            // 이미 2가지가 선택되어 있으면 가장 먼저 들어온 1개를 제거하고 마지막에 들어온 한개를 진행\r\n            if( this.test_ingredient_list.length == 2){\r\n                // 먼저 들어온 1개를 제거\r\n                let before_name = this.test_ingredient_list.shift();\r\n                let num = 0;\r\n                switch(before_name) {\r\n                    case 'card_1' :\r\n                        num = this.$refs.test_card_1[0].className.indexOf('test_border');\r\n                        if( num > 0 ) {\r\n                            this.$refs.test_card_1[0].className = this.$refs.test_card_1[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case 'card_2' :\r\n                        num = this.$refs.test_card_2[0].className.indexOf('test_border');\r\n                        if( num > 0 ){\r\n                            this.$refs.test_card_2[0].className = this.$refs.test_card_2[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case 'card_3' :\r\n                        num = this.$refs.test_card_3[0].className.indexOf('test_border');\r\n                        if( num > 0 ) {\r\n                            this.$refs.test_card_3[0].className = this.$refs.test_card_3[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case 'card_4' :\r\n                        num = this.$refs.test_card_4[0].className.indexOf('test_border');\r\n                        if (num > 0 ) {\r\n                            this.$refs.test_card_4[0].className = this.$refs.test_card_4[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case 'card_5' :\r\n                        num = this.$refs.test_card_5[0].className.indexOf('test_border');\r\n                        if( num > 0 ){\r\n                            this.$refs.test_card_5[0].className = this.$refs.test_card_5[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case 'card_6' :\r\n                        num = this.$refs.test_card_6[0].className.indexOf('test_border');\r\n                        if( num > 0 ) {\r\n                            this.$refs.test_card_6[0].className = this.$refs.test_card_6[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case 'card_7' :\r\n                        num = this.$refs.test_card_7[0].className.indexOf('test_border');\r\n                        if( num > 0 ) {\r\n                            this.$refs.test_card_7[0].className = this.$refs.test_card_7[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case 'card_8' :\r\n                        num = this.$refs.test_card_8[0].className.indexOf('test_border');\r\n                        if ( num > 0 ) {\r\n                            this.$refs.test_card_8[0].className = this.$refs.test_card_8[0].className.substring(0, num-1);\r\n                        }\r\n                        break;                                  \r\n                }\r\n            }\r\n            // 변수에 추가\r\n            this.test_ingredient_list.push(name);\r\n            let ref_str = '';\r\n            switch(name){\r\n                case 'card_1':\r\n                    ref_str = this.$refs.test_card_1;\r\n                    break;\r\n                case 'card_2':\r\n                    ref_str = this.$refs.test_card_2;\r\n                    break;\r\n                case 'card_3':\r\n                    ref_str = this.$refs.test_card_3;\r\n                    break;\r\n                case 'card_4':\r\n                    ref_str = this.$refs.test_card_4;\r\n                    break;\r\n                case 'card_5':\r\n                    ref_str = this.$refs.test_card_5;\r\n                    break;\r\n                case 'card_6':\r\n                    ref_str = this.$refs.test_card_6;\r\n                    break;\r\n                case 'card_7':\r\n                    ref_str = this.$refs.test_card_7;\r\n                    break;\r\n                case 'card_8':\r\n                    ref_str = this.$refs.test_card_8;\r\n                    break;\r\n            }\r\n            ref_str[0].className += \" test_border\";\r\n        },\r\n\r\n        click_test_ingredient : function() {\r\n            if( this.test_ingredient_list.length != 2 ){\r\n                alert(\"재료카드를 2장 선택해주세요!!!\");\r\n                return;\r\n            }\r\n            // test_ingredient_list의 길이가 2이면 서버에게 보내고\r\n            // 고른 재료 차감 / 변수 초기화 / 결과는 모두에게 전송\r\n            // / -> 유물 카드 에 따른 효과 발동 할 부분 추가할 것 계산\r\n            else {\r\n                let board_is = 0;\r\n                if( this.board_7_selected == true ){\r\n                    board_is = 7;\r\n                }else if ( this.board_8_selected == true ) {\r\n                    board_is = 8;\r\n                }\r\n                let send_data = {\r\n                    user_key : this.my_key,\r\n                    card_list : this.test_ingredient_list,\r\n                    board_order : this.board_order,\r\n                    cube_order : this.board_cube_order,\r\n                    board_is : board_is,\r\n                }\r\n                //console.log(send_data);\r\n                socket.emit(\"test_ingredient_confirm\", send_data);\r\n                this.test_ingredient_list = [];\r\n            }\r\n        },\r\n\r\n        open_result_modal_close : function() {\r\n            this.open_result_modal = false;\r\n        },\r\n\r\n        // 용병에게 물약 판매 전 코인 제시\r\n        select_adv_dis_coin : function(n) { \r\n            // 선택된 다른 코인은 표기 해제\r\n            let num = 0;\r\n            if( this.before_adv_discount_select_num > 0 ) {\r\n                switch(this.before_adv_discount_select_num){\r\n                    case '0':\r\n                        num = this.$refs.ad_0_ico[0].className.indexOf('selected');\r\n                        if( num > 0 ) {\r\n                            this.$refs.ad_0_ico[0].className = this.$refs.ad_0_ico[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case '1':\r\n                        num = this.$refs.ad_1_ico[0].className.indexOf('selected');\r\n                        if( num > 0 ) {\r\n                            this.$refs.ad_1_ico[0].className = this.$refs.ad_1_ico[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case '2':\r\n                        num = this.$refs.ad_2_ico[0].className.indexOf('selected');\r\n                        if( num > 0 ) {\r\n                            this.$refs.ad_2_ico[0].className = this.$refs.ad_2_ico[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case '3':\r\n                        num = this.$refs.ad_3_ico[0].className.indexOf('selected');\r\n                        if( num > 0 ) {\r\n                            this.$refs.ad_3_ico[0].className = this.$refs.ad_3_ico[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                }\r\n            }\r\n            // 선택한 코인 표기\r\n            let ref_str = '';\r\n            switch(n){\r\n                case '0':\r\n                    ref_str = this.$refs.ad_0_ico;\r\n                    break;\r\n                case '1':\r\n                    ref_str = this.$refs.ad_1_ico;\r\n                    break;\r\n                case '2':\r\n                    ref_str = this.$refs.ad_2_ico;\r\n                    break;\r\n                case '3':\r\n                    ref_str = this.$refs.ad_3_ico;\r\n                    break;\r\n            }\r\n            ref_str[0].className += \" selected\";\r\n            this.before_adv_discount_select_num = n;\r\n        },\r\n\r\n        // 용병에게 할인 카드 제시 결정 \r\n        adv_dis_confirm : function() {\r\n            // 보낼 데이터\r\n            // 유저키 , 유저색\r\n            // 내가 선택한 할인 제시 코인 번호 -> 유저데이터의 제시카드 false로 변경 -> 겜당 1회밖에 못쓰기 때문\r\n            let send_data = {\r\n                user_key : this.my_key,\r\n                color : this.my_color,\r\n                dis_coin_num : this.before_adv_discount_select_num,\r\n            }\r\n\r\n            socket.emit(\"adv_dis_confirm\", send_data);\r\n            // 할인카드를 제시했으므로 변수 변경\r\n            this.im_end_discount = true;\r\n        },\r\n\r\n        // 용병에게 팔 물약의 값 선택하기\r\n        sell_potion_set_price : function(n){\r\n            this.my_selling_price = n;\r\n        },\r\n\r\n        // 용병에게 팔 금액 홀드하기\r\n        decision_sell_potion_price : function(){\r\n            //내 차례가 아니면 진행 불가\r\n            if( this.my_key != this.discount_coin_list[this.selling_turn].user_key ){\r\n                alert(\"내 차례가 아니면 확정할 수 없습니다\\n 조금 더 기다려주세요\");\r\n                return;\r\n            }\r\n            let send_data = {\r\n                user_key : this.my_key,\r\n                sell_price : this.my_selling_price,\r\n            }\r\n            socket.emit(\"sell_price_confirm\", send_data);\r\n        },\r\n\r\n        // 용병에게 팔 물약 고르기\r\n        select_sell_potion_kind : function(kind) {\r\n            this.what_kind_sell_potion = kind;\r\n        },\r\n\r\n        // 물약 조제하기 :: \r\n        make_potion_preparation : function(data) {\r\n            \r\n            // test_ingredient_list 의 2가지 재료를 사용 --> 서버에서 재료 제거\r\n            // what_kind_sell_potion -> 보내서 정답과 비교(red_1,0/ green_1/0, blue_1/0)\r\n            // user_key , \r\n            let send_data = {\r\n                user_key : this.my_key,\r\n                user_color : this.my_color,\r\n                card_list : data,\r\n                what_kind_sell_potion : this.what_kind_sell_potion, \r\n                selling_turn : this.selling_turn,\r\n            };\r\n\r\n            socket.emit(\"sell_to_adv_potion\", send_data);\r\n        },\r\n\r\n        // 용병에게 물약을 판매하는 변수에 값 넣기\r\n        hold_before_adv_discount_num : function(data) {\r\n            this.before_adv_discount_select_num = data;\r\n        },\r\n\r\n        // 논문 발표에서 원소를 선택할 함수.\r\n        theory_element_select : function(n) {\r\n            // 이미 선택된 다른 것이 있다면 해제하고 새로 고른 것을 선택해야함\r\n            let num = 0;\r\n            if( this.before_theory_ele_select_num > 0){\r\n                switch(this.before_theory_ele_select_num){\r\n                    case '1':\r\n                        num = this.$refs.ele_1[0].className.indexOf('selected');\r\n                        if( num > 0 ) {\r\n                            this.$refs.ele_1[0].className = this.$refs.ele_1[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case '2':\r\n                        num = this.$refs.ele_2[0].className.indexOf('selected');\r\n                        if( num > 0 ) {\r\n                            this.$refs.ele_2[0].className = this.$refs.ele_2[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case '3':\r\n                        num = this.$refs.ele_3[0].className.indexOf('selected');\r\n                        if( num > 0 ) {\r\n                            this.$refs.ele_3[0].className = this.$refs.ele_3[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case '4':\r\n                        num = this.$refs.ele_4[0].className.indexOf('selected');\r\n                        if( num > 0 ) {\r\n                            this.$refs.ele_4[0].className = this.$refs.ele_4[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case '5':\r\n                        num = this.$refs.ele_5[0].className.indexOf('selected');\r\n                        if( num > 0 ) {\r\n                            this.$refs.ele_5[0].className = this.$refs.ele_5[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case '6':\r\n                        num = this.$refs.ele_6[0].className.indexOf('selected');\r\n                        if( num > 0 ) {\r\n                            this.$refs.ele_6[0].className = this.$refs.ele_6[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case '7':\r\n                        num = this.$refs.ele_7[0].className.indexOf('selected');\r\n                        if( num > 0 ) {\r\n                            this.$refs.ele_7[0].className = this.$refs.ele_7[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case '8':\r\n                        num = this.$refs.ele_8[0].className.indexOf('selected');\r\n                        if( num > 0 ) {\r\n                            this.$refs.ele_8[0].className = this.$refs.ele_8[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                }\r\n            }\r\n\r\n            // 현재 선택된 값을 수정\r\n            let ref_str = '';\r\n            switch(n){\r\n                case '1':\r\n                    ref_str = this.$refs.ele_1;\r\n                    break;\r\n                case '2':\r\n                    ref_str = this.$refs.ele_2;\r\n                    break;\r\n                case '3':\r\n                    ref_str = this.$refs.ele_3;\r\n                    break;\r\n                case '4':\r\n                    ref_str = this.$refs.ele_4;\r\n                    break;\r\n                case '5':\r\n                    ref_str = this.$refs.ele_5;\r\n                    break;\r\n                case '6':\r\n                    ref_str = this.$refs.ele_6;\r\n                    break;\r\n                case '7':\r\n                    ref_str = this.$refs.ele_7;\r\n                    break;\r\n                case '8':\r\n                    ref_str = this.$refs.ele_8;\r\n                    break;\r\n            }\r\n            \r\n            // 현재 변수 저장\r\n            this.before_theory_ele_select_num = n;\r\n            ref_str[0].className += \" selected\";\r\n        },\r\n\r\n        //논문 발표에서 고를 인자를 선택하는 함수\r\n        theory_stamp_select : function(n) {\r\n            // 이미 선택된 것이 있다면 해제하고 새로 고른 것을 선택해야 함\r\n            // 나의 색에 따라 나와야하는 stamp의 모양이 달라야함...!\r\n            let num = 0;\r\n            if( this.before_theory_stm_select_num > 0){\r\n                switch(this.before_theory_stm_select_num){\r\n                    case '1':\r\n                        num = this.$refs.stm_1[0].className.indexOf('selected');\r\n                        if( num > 0 ) {\r\n                            this.$refs.stm_1[0].className = this.$refs.stm_1[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case '2':\r\n                        num = this.$refs.stm_2[0].className.indexOf('selected');\r\n                        if( num > 0 ) {\r\n                            this.$refs.stm_2[0].className = this.$refs.stm_2[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case '3':\r\n                        num = this.$refs.stm_3[0].className.indexOf('selected');\r\n                        if( num > 0 ) {\r\n                            this.$refs.stm_3[0].className = this.$refs.stm_3[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case '4':\r\n                        num = this.$refs.stm_4[0].className.indexOf('selected');\r\n                        if( num > 0 ) {\r\n                            this.$refs.stm_4[0].className = this.$refs.stm_4[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case '5':\r\n                        num = this.$refs.stm_5[0].className.indexOf('selected');\r\n                        if( num > 0 ) {\r\n                            this.$refs.stm_5[0].className = this.$refs.stm_5[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case '6':\r\n                        num = this.$refs.stm_6[0].className.indexOf('selected');\r\n                        if( num > 0 ) {\r\n                            this.$refs.stm_6[0].className = this.$refs.stm_6[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case '7':\r\n                        num = this.$refs.stm_7[0].className.indexOf('selected');\r\n                        if( num > 0 ) {\r\n                            this.$refs.stm_7[0].className = this.$refs.stm_7[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case '8':\r\n                        num = this.$refs.stm_8[0].className.indexOf('selected');\r\n                        if( num > 0 ) {\r\n                            this.$refs.stm_8[0].className = this.$refs.stm_8[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case '9':\r\n                        num = this.$refs.stm_9[0].className.indexOf('selected');\r\n                        if( num > 0 ) {\r\n                            this.$refs.stm_9[0].className = this.$refs.stm_9[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case '10':\r\n                        num = this.$refs.stm_10[0].className.indexOf('selected');\r\n                        if( num > 0 ) {\r\n                            this.$refs.stm_10[0].className = this.$refs.stm_10[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case '11':\r\n                        num = this.$refs.stm_11[0].className.indexOf('selected');\r\n                        if( num > 0 ) {\r\n                            this.$refs.stm_11[0].className = this.$refs.stm_11[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                }\r\n            }\r\n\r\n            // 현재 선택된 값을 수정\r\n            let ref_str = '';\r\n            switch(n){\r\n                case '1':\r\n                    ref_str = this.$refs.stm_1;\r\n                    break;\r\n                case '2':\r\n                    ref_str = this.$refs.stm_2;\r\n                    break;\r\n                case '3':\r\n                    ref_str = this.$refs.stm_3;\r\n                    break;\r\n                case '4':\r\n                    ref_str = this.$refs.stm_4;\r\n                    break;\r\n                case '5':\r\n                    ref_str = this.$refs.stm_5;\r\n                    break;\r\n                case '6':\r\n                    ref_str = this.$refs.stm_6;\r\n                    break;\r\n                case '7':\r\n                    ref_str = this.$refs.stm_7;\r\n                    break;\r\n                case '8':\r\n                    ref_str = this.$refs.stm_8;\r\n                    break;\r\n                case '9':\r\n                    ref_str = this.$refs.stm_9;\r\n                    break;\r\n                case '10':\r\n                    ref_str = this.$refs.stm_10;\r\n                    break;\r\n                case '11':\r\n                    ref_str = this.$refs.stm_11;\r\n                    break;\r\n            }\r\n            \r\n            // 현재 변수 저장\r\n            this.before_theory_stm_select_num = n;\r\n            ref_str[0].className += \" selected\";\r\n        },\r\n\r\n        // 논문 반박/발표 모달에서 발표/반박할 재료를 고르는 함수\r\n        theory_presentation : function(n) {\r\n            this.now_select_ingre = n;\r\n            this.ingre_presentation_modal_onoff = true;\r\n            switch(n){\r\n                case '1': \r\n                    this.$refs.select_ingre.innerHTML = \"<img class='ingre_presentation_selected_ingre' src='@/assets/img/material_card/ingredient_1.png'>\"\r\n                    break;\r\n                case '2': \r\n                    this.$refs.select_ingre.innerHTML = \"<img class='ingre_presentation_selected_ingre' src='@/assets/img/material_card/ingredient_2.png'>\"\r\n                    break;\r\n                case '3': \r\n                    this.$refs.select_ingre.innerHTML = \"<img class='ingre_presentation_selected_ingre' src='@/assets/img/material_card/ingredient_3.png'>\"\r\n                    break;\r\n                case '4': \r\n                    this.$refs.select_ingre.innerHTML = \"<img class='ingre_presentation_selected_ingre' src='@/assets/img/material_card/ingredient_4.png'>\"\r\n                    break;\r\n                case '5': \r\n                    this.$refs.select_ingre.innerHTML = \"<img class='ingre_presentation_selected_ingre' src='@/assets/img/material_card/ingredient_5.png'>\"\r\n                    break;\r\n                case '6': \r\n                    this.$refs.select_ingre.innerHTML = \"<img class='ingre_presentation_selected_ingre' src='@/assets/img/material_card/ingredient_6.png'>\"\r\n                    break;\r\n                case '7': \r\n                    this.$refs.select_ingre.innerHTML = \"<img class='ingre_presentation_selected_ingre' src='@/assets/img/material_card/ingredient_7.png'>\"\r\n                    break;\r\n                case '8': \r\n                    this.$refs.select_ingre.innerHTML = \"<img class='ingre_presentation_selected_ingre' src='@/assets/img/material_card/ingredient_8.png'>\"\r\n                    break;\r\n            }\r\n        },\r\n\r\n        // 발표하기 버튼으로 실행될 함수\r\n        theory_confirm : function(){\r\n            //발표 \r\n            if( this.board_6_selected == true ){\r\n                // 넘겨야 하는 정보\r\n                // 재료번호(ingre), 원소번호(ele), 스탬프 번호(stm), 유저키, 유저색 ,큐브순서, 보드순서\r\n                let send_data = {\r\n                    element : this.before_theory_ele_select_num,\r\n                    ingre : this.now_select_ingre,\r\n                    user_key : this.my_key,\r\n                    user_color : this.my_color,\r\n                    stamp : this.before_theory_stm_select_num,\r\n                    cube_order : this.board_cube_order,\r\n                    board_order : this.board_order,\r\n                };\r\n                console.log(send_data);\r\n                //socket.emit(\"presentation_theory\",send_data);\r\n                // 선택된 재료 초기화\r\n                this.before_theory_ele_select_num = 0;\r\n                this.before_theory_stm_select_num = 0;\r\n            }\r\n            //반박\r\n            else if ( this.board_5_selected == true ){\r\n                // 넘겨야 하는 정보\r\n                // 재료번호(ingre), 틀리다고 주장할 원소 색(ori), 유저키(user_key), 큐브순서, 보드순서\r\n                let send_data = {\r\n                    ingre : this.now_select_ingre,\r\n                    ori : this.before_refute_ori_select_num,\r\n                    user_key : this.my_key,\r\n                    cube_order : this.board_cube_order,\r\n                    board_order : this.board_order,\r\n                };\r\n                console.log(send_data);\r\n                //socket.emit(\"refuting_theory_data\", send_data);\r\n                // 변수 초기화\r\n                this.before_refute_ori_select_num = 0;\r\n            }\r\n            // 선택한 원소 지우기\r\n            this.$refs.select_ingre.innerHTML = \"\";\r\n           \r\n            // 원소 발표/반박 모달 끄기!\r\n            // this.ingre_presentation_modal_onoff = false;\r\n        },\r\n\r\n        //논문 반박에서 어떤 원소를 반박할 건지 선택하는 함수\r\n        theory_origin_select : function(n){\r\n            // 이미 선택된 다른 것이 있다면 해제하고 새로 고른 것을 선택해야함\r\n            let num = 0;\r\n            if( this.before_refute_ori_select_num > 0){\r\n                switch(this.before_refute_ori_select_num){\r\n                    case '1':\r\n                        num = this.$refs.ele_core_1[0].className.indexOf('selected');\r\n                        if( num > 0 ) {\r\n                            this.$refs.ele_core_1[0].className = this.$refs.ele_core_1[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case '2':\r\n                        num = this.$refs.ele_core_2[0].className.indexOf('selected');\r\n                        if( num > 0 ) {\r\n                            this.$refs.ele_core_2[0].className = this.$refs.ele_core_2[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case '3':\r\n                        num = this.$refs.ele_core_3[0].className.indexOf('selected');\r\n                        if( num > 0 ) {\r\n                            this.$refs.ele_core_3[0].className = this.$refs.ele_core_3[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                }\r\n            }\r\n\r\n            // 현재 선택된 값을 수정\r\n            let ref_str = '';\r\n            switch(n){\r\n                case '1':\r\n                    ref_str = this.$refs.ele_core_1;\r\n                    break;\r\n                case '2':\r\n                    ref_str = this.$refs.ele_core_2;\r\n                    break;\r\n                case '3':\r\n                    ref_str = this.$refs.ele_core_3;\r\n                    break;\r\n            }\r\n            \r\n            // 현재 변수 저장\r\n            this.before_refute_ori_select_num = n;\r\n            ref_str[0].className += \" selected\";\r\n        },\r\n\r\n        check_refute_info : function() {\r\n            //서버에 체크 데이터 전송\r\n            socket.emit(\"check_refute_info\", this.reciving_data);\r\n\r\n            // 변수 초기화\r\n            this.reciving_data = '';\r\n            // 반박 성공확인창 끄기\r\n            this.success_refute_modal_onoff = false;\r\n        },\r\n\r\n        click_exhibition_potion : function(potion_num) {            \r\n            // 발표할 원소번호를 저장하고\r\n            this.exhibition_potion_num = potion_num;\r\n            // 발표할 모달을 켜기!\r\n            this.exhibition_check_modal_onoff = true;\r\n        },\r\n\r\n        // 물약 발표회에서 발표할 물약의 재료 2가지를 선택할 함수\r\n        // name :: card_1~8\r\n        exhibit_select_ingre : function(name) {\r\n            // 이미 2가지가 선택되어 있으면 가장 먼저 들어온 1개를 제거하고 마지막에 들어온 한개를 진행\r\n            if( this.test_ingredient_list.length == 2){\r\n                // 먼저 들어온 1개를 제거\r\n                let before_name = this.test_ingredient_list.shift();\r\n                let num = 0;\r\n                switch(before_name) {\r\n                    case 'card_1' :\r\n                        num = this.$refs.exhibit_card_1[0].className.indexOf('test_border');\r\n                        if( num > 0 ) {\r\n                            this.$refs.exhibit_card_1[0].className = this.$refs.exhibit_card_1[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case 'card_2' :\r\n                        num = this.$refs.exhibit_card_2[0].className.indexOf('test_border');\r\n                        if( num > 0 ){\r\n                            this.$refs.exhibit_card_2[0].className = this.$refs.exhibit_card_2[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case 'card_3' :\r\n                        num = this.$refs.exhibit_card_3[0].className.indexOf('test_border');\r\n                        if( num > 0 ) {\r\n                            this.$refs.exhibit_card_3[0].className = this.$refs.exhibit_card_3[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case 'card_4' :\r\n                        num = this.$refs.exhibit_card_4[0].className.indexOf('test_border');\r\n                        if (num > 0 ) {\r\n                            this.$refs.exhibit_card_4[0].className = this.$refs.exhibit_card_4[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case 'card_5' :\r\n                        num = this.$refs.exhibit_card_5[0].className.indexOf('test_border');\r\n                        if( num > 0 ){\r\n                            this.$refs.exhibit_card_5[0].className = this.$refs.exhibit_card_5[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case 'card_6' :\r\n                        num = this.$refs.exhibit_card_6[0].className.indexOf('test_border');\r\n                        if( num > 0 ) {\r\n                            this.$refs.exhibit_card_6[0].className = this.$refs.exhibit_card_6[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case 'card_7' :\r\n                        num = this.$refs.exhibit_card_7[0].className.indexOf('test_border');\r\n                        if( num > 0 ) {\r\n                            this.$refs.exhibit_card_7[0].className = this.$refs.exhibit_card_7[0].className.substring(0, num-1);\r\n                        }\r\n                        break;\r\n                    case 'card_8' :\r\n                        num = this.$refs.exhibit_card_8[0].className.indexOf('test_border');\r\n                        if ( num > 0 ) {\r\n                            this.$refs.exhibit_card_8[0].className = this.$refs.exhibit_card_8[0].className.substring(0, num-1);\r\n                        }\r\n                        break;                                  \r\n                }\r\n            }\r\n            // 변수에 추가\r\n            this.test_ingredient_list.push(name);\r\n            let ref_str = '';\r\n            switch(name){\r\n                case 'card_1':\r\n                    ref_str = this.$refs.exhibit_card_1;\r\n                    break;\r\n                case 'card_2':\r\n                    ref_str = this.$refs.exhibit_card_2;\r\n                    break;\r\n                case 'card_3':\r\n                    ref_str = this.$refs.exhibit_card_3;\r\n                    break;\r\n                case 'card_4':\r\n                    ref_str = this.$refs.exhibit_card_4;\r\n                    break;\r\n                case 'card_5':\r\n                    ref_str = this.$refs.exhibit_card_5;\r\n                    break;\r\n                case 'card_6':\r\n                    ref_str = this.$refs.exhibit_card_6;\r\n                    break;\r\n                case 'card_7':\r\n                    ref_str = this.$refs.exhibit_card_7;\r\n                    break;\r\n                case 'card_8':\r\n                    ref_str = this.$refs.exhibit_card_8;\r\n                    break;\r\n            }\r\n            ref_str[0].className += \" test_border\";\r\n        },\r\n\r\n        // 물약 전시회에서 시연할 재료를 고르고 결정버튼을 눌렀을 떄 실행될 함수\r\n        click_exhibit_ingre : function() {\r\n            if( this.test_ingredient_list.length != 2 ){\r\n                alert(\"재료카드 2장을 선택해주세요!\");\r\n                return;\r\n            }\r\n            let exhibit_potion = '';\r\n            switch(this.exhibition_potion_num){\r\n                case '1':\r\n                  exhibit_potion = 'red_1';\r\n                  break;\r\n                case '2':\r\n                  exhibit_potion = 'red_0';\r\n                  break;\r\n                case '3':\r\n                  exhibit_potion = 'green_1';\r\n                  break;\r\n                case '4':\r\n                  exhibit_potion = 'green_0';\r\n                  break;\r\n                case '5':\r\n                  exhibit_potion = 'blue_1';\r\n                  break;\r\n                case '6':\r\n                  exhibit_potion = 'blue_0';\r\n                  break;\r\n              }\r\n\r\n            let send_data = {\r\n                user_key : this.my_key,\r\n                user_color : this.my_color,\r\n                card_list : this.test_ingredient_list,\r\n                exhibit_potion : exhibit_potion,\r\n                board_order : this.board_order,\r\n                cube_order : this.board_cube_order,\r\n            }\r\n            \r\n            // 발표!\r\n            socket.emit(\"exhibit_ingre\", send_data);\r\n\r\n            // 선택한 재료카드 초기화\r\n            this.test_ingredient_list = [];\r\n            // 발표할 원소번호 초기화\r\n            this.exhibition_potion_num = -1;\r\n        }\r\n\r\n    },\r\n\r\n    \r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}