{"ast":null,"code":"import { toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"game_lobby_master\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, _toDisplayString(this.$route.params), 1\n  /* TEXT */\n  );\n}","map":{"version":3,"mappings":";;EACSA,EAAE,EAAC;;;uBAARC,oBAEM,KAFN,cAEMC,sBADMC,MACN,CADaC,MACb,CAFN,EACyB;EAAA;EADzB","names":["id","_createElementBlock","_toDisplayString","$route","params"],"sourceRoot":"","sources":["E:\\web\\alchemists_vue\\alchemists\\src\\components\\game_lobby_master.vue"],"sourcesContent":["<template>\r\n    <div id=\"game_lobby_master\">\r\n        {{ this.$route.params }}\r\n    </div>\r\n\r\n\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n  name : 'game_lobby_master',\r\n  created() {\r\n    var server_app = require('express')();\r\n    var server = require('http').createServer(server_app);\r\n    // http server를 socket.io server로 upgrade한다\r\n    var io = require('socket.io')(server);\r\n\r\n    server_app.get('/', function(req, res) {\r\n      res.sendFile(__dirname + '/index.html');\r\n    });\r\n\r\n    //* 웹소켓 연결 시 \r\n    io.on('connection', (socket) => { \r\n        const req = socket.request; \r\n        // 웹소켓과는 달리 req객체를 따로 뽑아야함 \r\n\r\n        //* ip 정보 얻기\r\n        const ip = req.headers['x-forwarded-for'] || req.connection.remoteAddress; \r\n        console.log('새로운 클라이언트 접속!', ip, socket.id, req.ip); \r\n        // socket.id 는 소켓 연결된 고유한 클라이언트 식별자라고 보면된다. 채팅방의 입장한 고유한 사람 \r\n\r\n        //* 연결 종료 시 \r\n        socket.on('disconnect', () => { \r\n            console.log('클라이언트 접속 해제', ip, socket.id); \r\n            clearInterval(socket.interval); \r\n        }); \r\n        //* 에러 시 \r\n        socket.on('error', (error) => { \r\n            console.error(error); \r\n        }); \r\n        //* 클라이언트로부터 메시지 \r\n        socket.on('reply', (data) => { \r\n            console.log(data); \r\n        }); \r\n        //* 클라이언트로 메세지 보내기 \r\n        socket.interval = setInterval(() => { \r\n            // 3초마다 클라이언트로 메시지 전송 \r\n            socket.emit('news', 'Hello Socket.IO'); }, 3000); \r\n        }); \r\n\r\n  },\r\n\r\n  methods : {\r\n\r\n  }\r\n}\r\n\r\n\r\n\r\n/*\r\n  import socketio from 'socket.io-client';\r\n\r\n  var ioInstance = socketio('http://socketserver.com:1923');\r\n\r\n  Vue.use(VueSocketio, ioInstance); // bind custom socketio instance\r\n*/\r\n/*\r\nnew Vue({\r\n  sockets:{\r\n    connect: function(){\r\n      console.log('socket connected')\r\n    },\r\n    customEmit: function(val){\r\n      console.log('this method fired by socket server. eg: io.emit(\"customEmit\", data) :: ' + val)\r\n    }\r\n  },\r\n  methods: {\r\n    clickButton: function(val){\r\n        // $socket is socket.io-client instance\r\n        this.$socket.emit('emit_method', val);\r\n    }\r\n  }\r\n})\r\n*/\r\n</script>"]},"metadata":{},"sourceType":"module"}