{"ast":null,"code":"import is, { assert } from '@sindresorhus/is';\nimport asPromise from './as-promise/index.js';\nimport Request from './core/index.js';\nimport Options from './core/options.js'; // The `delay` package weighs 10KB (!)\n\nconst delay = async ms => new Promise(resolve => {\n  setTimeout(resolve, ms);\n});\n\nconst isGotInstance = value => is.function_(value);\n\nconst aliases = ['get', 'post', 'put', 'patch', 'head', 'delete'];\n\nconst create = defaults => {\n  defaults = {\n    options: new Options(undefined, undefined, defaults.options),\n    handlers: [...defaults.handlers],\n    mutableDefaults: defaults.mutableDefaults\n  };\n  Object.defineProperty(defaults, 'mutableDefaults', {\n    enumerable: true,\n    configurable: false,\n    writable: false\n  }); // Got interface\n\n  const got = (url, options, defaultOptions = defaults.options) => {\n    const request = new Request(url, options, defaultOptions);\n    let promise;\n\n    const lastHandler = normalized => {\n      // Note: `options` is `undefined` when `new Options(...)` fails\n      request.options = normalized;\n      request._noPipe = !normalized.isStream;\n      void request.flush();\n\n      if (normalized.isStream) {\n        return request;\n      }\n\n      if (!promise) {\n        promise = asPromise(request);\n      }\n\n      return promise;\n    };\n\n    let iteration = 0;\n\n    const iterateHandlers = newOptions => {\n      const handler = defaults.handlers[iteration++] ?? lastHandler;\n      const result = handler(newOptions, iterateHandlers);\n\n      if (is.promise(result) && !request.options.isStream) {\n        if (!promise) {\n          promise = asPromise(request);\n        }\n\n        if (result !== promise) {\n          const descriptors = Object.getOwnPropertyDescriptors(promise);\n\n          for (const key in descriptors) {\n            if (key in result) {\n              // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n              delete descriptors[key];\n            }\n          } // eslint-disable-next-line @typescript-eslint/no-floating-promises\n\n\n          Object.defineProperties(result, descriptors);\n          result.cancel = promise.cancel;\n        }\n      }\n\n      return result;\n    };\n\n    return iterateHandlers(request.options);\n  };\n\n  got.extend = (...instancesOrOptions) => {\n    const options = new Options(undefined, undefined, defaults.options);\n    const handlers = [...defaults.handlers];\n    let mutableDefaults;\n\n    for (const value of instancesOrOptions) {\n      if (isGotInstance(value)) {\n        options.merge(value.defaults.options);\n        handlers.push(...value.defaults.handlers);\n        mutableDefaults = value.defaults.mutableDefaults;\n      } else {\n        options.merge(value);\n\n        if (value.handlers) {\n          handlers.push(...value.handlers);\n        }\n\n        mutableDefaults = value.mutableDefaults;\n      }\n    }\n\n    return create({\n      options,\n      handlers,\n      mutableDefaults: Boolean(mutableDefaults)\n    });\n  }; // Pagination\n\n\n  const paginateEach = async function* (url, options) {\n    let normalizedOptions = new Options(url, options, defaults.options);\n    normalizedOptions.resolveBodyOnly = false;\n    const {\n      pagination\n    } = normalizedOptions;\n    assert.function_(pagination.transform);\n    assert.function_(pagination.shouldContinue);\n    assert.function_(pagination.filter);\n    assert.function_(pagination.paginate);\n    assert.number(pagination.countLimit);\n    assert.number(pagination.requestLimit);\n    assert.number(pagination.backoff);\n    const allItems = [];\n    let {\n      countLimit\n    } = pagination;\n    let numberOfRequests = 0;\n\n    while (numberOfRequests < pagination.requestLimit) {\n      if (numberOfRequests !== 0) {\n        // eslint-disable-next-line no-await-in-loop\n        await delay(pagination.backoff);\n      } // eslint-disable-next-line no-await-in-loop\n\n\n      const response = await got(undefined, undefined, normalizedOptions); // eslint-disable-next-line no-await-in-loop\n\n      const parsed = await pagination.transform(response);\n      const currentItems = [];\n      assert.array(parsed);\n\n      for (const item of parsed) {\n        if (pagination.filter({\n          item,\n          currentItems,\n          allItems\n        })) {\n          if (!pagination.shouldContinue({\n            item,\n            currentItems,\n            allItems\n          })) {\n            return;\n          }\n\n          yield item;\n\n          if (pagination.stackAllItems) {\n            allItems.push(item);\n          }\n\n          currentItems.push(item);\n\n          if (--countLimit <= 0) {\n            return;\n          }\n        }\n      }\n\n      const optionsToMerge = pagination.paginate({\n        response,\n        currentItems,\n        allItems\n      });\n\n      if (optionsToMerge === false) {\n        return;\n      }\n\n      if (optionsToMerge === response.request.options) {\n        normalizedOptions = response.request.options;\n      } else {\n        normalizedOptions.merge(optionsToMerge);\n        assert.any([is.urlInstance, is.undefined], optionsToMerge.url);\n\n        if (optionsToMerge.url !== undefined) {\n          normalizedOptions.prefixUrl = '';\n          normalizedOptions.url = optionsToMerge.url;\n        }\n      }\n\n      numberOfRequests++;\n    }\n  };\n\n  got.paginate = paginateEach;\n\n  got.paginate.all = async (url, options) => {\n    const results = [];\n\n    for await (const item of paginateEach(url, options)) {\n      results.push(item);\n    }\n\n    return results;\n  }; // For those who like very descriptive names\n\n\n  got.paginate.each = paginateEach; // Stream API\n\n  got.stream = (url, options) => got(url, { ...options,\n    isStream: true\n  }); // Shortcuts\n\n\n  for (const method of aliases) {\n    got[method] = (url, options) => got(url, { ...options,\n      method\n    });\n\n    got.stream[method] = (url, options) => got(url, { ...options,\n      method,\n      isStream: true\n    });\n  }\n\n  if (!defaults.mutableDefaults) {\n    Object.freeze(defaults.handlers);\n    defaults.options.freeze();\n  }\n\n  Object.defineProperty(got, 'defaults', {\n    value: defaults,\n    writable: false,\n    configurable: false,\n    enumerable: true\n  });\n  return got;\n};\n\nexport default create;","map":{"version":3,"names":["is","assert","asPromise","Request","Options","delay","ms","Promise","resolve","setTimeout","isGotInstance","value","function_","aliases","create","defaults","options","undefined","handlers","mutableDefaults","Object","defineProperty","enumerable","configurable","writable","got","url","defaultOptions","request","promise","lastHandler","normalized","_noPipe","isStream","flush","iteration","iterateHandlers","newOptions","handler","result","descriptors","getOwnPropertyDescriptors","key","defineProperties","cancel","extend","instancesOrOptions","merge","push","Boolean","paginateEach","normalizedOptions","resolveBodyOnly","pagination","transform","shouldContinue","filter","paginate","number","countLimit","requestLimit","backoff","allItems","numberOfRequests","response","parsed","currentItems","array","item","stackAllItems","optionsToMerge","any","urlInstance","prefixUrl","all","results","each","stream","method","freeze"],"sources":["E:/web/alchemists_vue/alchemists/node_modules/got/dist/source/create.js"],"sourcesContent":["import is, { assert } from '@sindresorhus/is';\nimport asPromise from './as-promise/index.js';\nimport Request from './core/index.js';\nimport Options from './core/options.js';\n// The `delay` package weighs 10KB (!)\nconst delay = async (ms) => new Promise(resolve => {\n    setTimeout(resolve, ms);\n});\nconst isGotInstance = (value) => is.function_(value);\nconst aliases = [\n    'get',\n    'post',\n    'put',\n    'patch',\n    'head',\n    'delete',\n];\nconst create = (defaults) => {\n    defaults = {\n        options: new Options(undefined, undefined, defaults.options),\n        handlers: [...defaults.handlers],\n        mutableDefaults: defaults.mutableDefaults,\n    };\n    Object.defineProperty(defaults, 'mutableDefaults', {\n        enumerable: true,\n        configurable: false,\n        writable: false,\n    });\n    // Got interface\n    const got = ((url, options, defaultOptions = defaults.options) => {\n        const request = new Request(url, options, defaultOptions);\n        let promise;\n        const lastHandler = (normalized) => {\n            // Note: `options` is `undefined` when `new Options(...)` fails\n            request.options = normalized;\n            request._noPipe = !normalized.isStream;\n            void request.flush();\n            if (normalized.isStream) {\n                return request;\n            }\n            if (!promise) {\n                promise = asPromise(request);\n            }\n            return promise;\n        };\n        let iteration = 0;\n        const iterateHandlers = (newOptions) => {\n            const handler = defaults.handlers[iteration++] ?? lastHandler;\n            const result = handler(newOptions, iterateHandlers);\n            if (is.promise(result) && !request.options.isStream) {\n                if (!promise) {\n                    promise = asPromise(request);\n                }\n                if (result !== promise) {\n                    const descriptors = Object.getOwnPropertyDescriptors(promise);\n                    for (const key in descriptors) {\n                        if (key in result) {\n                            // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n                            delete descriptors[key];\n                        }\n                    }\n                    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n                    Object.defineProperties(result, descriptors);\n                    result.cancel = promise.cancel;\n                }\n            }\n            return result;\n        };\n        return iterateHandlers(request.options);\n    });\n    got.extend = (...instancesOrOptions) => {\n        const options = new Options(undefined, undefined, defaults.options);\n        const handlers = [...defaults.handlers];\n        let mutableDefaults;\n        for (const value of instancesOrOptions) {\n            if (isGotInstance(value)) {\n                options.merge(value.defaults.options);\n                handlers.push(...value.defaults.handlers);\n                mutableDefaults = value.defaults.mutableDefaults;\n            }\n            else {\n                options.merge(value);\n                if (value.handlers) {\n                    handlers.push(...value.handlers);\n                }\n                mutableDefaults = value.mutableDefaults;\n            }\n        }\n        return create({\n            options,\n            handlers,\n            mutableDefaults: Boolean(mutableDefaults),\n        });\n    };\n    // Pagination\n    const paginateEach = (async function* (url, options) {\n        let normalizedOptions = new Options(url, options, defaults.options);\n        normalizedOptions.resolveBodyOnly = false;\n        const { pagination } = normalizedOptions;\n        assert.function_(pagination.transform);\n        assert.function_(pagination.shouldContinue);\n        assert.function_(pagination.filter);\n        assert.function_(pagination.paginate);\n        assert.number(pagination.countLimit);\n        assert.number(pagination.requestLimit);\n        assert.number(pagination.backoff);\n        const allItems = [];\n        let { countLimit } = pagination;\n        let numberOfRequests = 0;\n        while (numberOfRequests < pagination.requestLimit) {\n            if (numberOfRequests !== 0) {\n                // eslint-disable-next-line no-await-in-loop\n                await delay(pagination.backoff);\n            }\n            // eslint-disable-next-line no-await-in-loop\n            const response = (await got(undefined, undefined, normalizedOptions));\n            // eslint-disable-next-line no-await-in-loop\n            const parsed = await pagination.transform(response);\n            const currentItems = [];\n            assert.array(parsed);\n            for (const item of parsed) {\n                if (pagination.filter({ item, currentItems, allItems })) {\n                    if (!pagination.shouldContinue({ item, currentItems, allItems })) {\n                        return;\n                    }\n                    yield item;\n                    if (pagination.stackAllItems) {\n                        allItems.push(item);\n                    }\n                    currentItems.push(item);\n                    if (--countLimit <= 0) {\n                        return;\n                    }\n                }\n            }\n            const optionsToMerge = pagination.paginate({\n                response,\n                currentItems,\n                allItems,\n            });\n            if (optionsToMerge === false) {\n                return;\n            }\n            if (optionsToMerge === response.request.options) {\n                normalizedOptions = response.request.options;\n            }\n            else {\n                normalizedOptions.merge(optionsToMerge);\n                assert.any([is.urlInstance, is.undefined], optionsToMerge.url);\n                if (optionsToMerge.url !== undefined) {\n                    normalizedOptions.prefixUrl = '';\n                    normalizedOptions.url = optionsToMerge.url;\n                }\n            }\n            numberOfRequests++;\n        }\n    });\n    got.paginate = paginateEach;\n    got.paginate.all = (async (url, options) => {\n        const results = [];\n        for await (const item of paginateEach(url, options)) {\n            results.push(item);\n        }\n        return results;\n    });\n    // For those who like very descriptive names\n    got.paginate.each = paginateEach;\n    // Stream API\n    got.stream = ((url, options) => got(url, { ...options, isStream: true }));\n    // Shortcuts\n    for (const method of aliases) {\n        got[method] = ((url, options) => got(url, { ...options, method }));\n        got.stream[method] = ((url, options) => got(url, { ...options, method, isStream: true }));\n    }\n    if (!defaults.mutableDefaults) {\n        Object.freeze(defaults.handlers);\n        defaults.options.freeze();\n    }\n    Object.defineProperty(got, 'defaults', {\n        value: defaults,\n        writable: false,\n        configurable: false,\n        enumerable: true,\n    });\n    return got;\n};\nexport default create;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}