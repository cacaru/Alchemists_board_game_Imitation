{"ast":null,"code":"import { socket } from '@/components/game_lobby.vue';\nimport { default as modal_area } from '@/components/modal_area.vue';\nimport { default as personal_game_data } from '@/components/personal_game_data.vue';\nexport default {\n  name: 'game_board',\n\n  created() {\n    // 게임 초기화 & 시작 트리거\n    socket.emit(\"created_data_announce\"); //최초 분배된 기본 재료 수령\n\n    socket.on(\"get_ingame_data\", data => {\n      this.user_data = data;\n\n      for (let i = 0; i < data.length; i++) {\n        if (data[i].is_master === 'true') {\n          this.room_owner = data[i].user_name;\n        }\n\n        if (this.my_key == data[i].user_key) {\n          this.my_name = data[i].user_name;\n          this.my_color = data[i].user_color;\n        }\n      }\n\n      let msg = {\n        speaker: this.my_name,\n        msg: \"방에 입장하였습니다.\",\n        type: 'announce'\n      };\n      socket.emit(\"chat\", msg);\n    }); //채팅 on\n\n    socket.on(\"chat\", data => {\n      // console.log(\"서버에서 받아온 데이터\");\n      // console.log(data);\n      // console.log(\"받아오기 끝\");\n      switch (data.type) {\n        case \"announce\":\n          this.textarea += data.speaker + \" 이(가) \" + data.msg + \"\\n\";\n          break;\n\n        case \"normal\":\n          this.textarea += data.speaker + \" : \" + data.msg + \"\\n\";\n          break;\n      } //console.log(\"chat :: \");\n      //console.log(data);\n\n    }); // 선택할 수 있는 카드 공개\n\n    socket.on(\"ingredient_select_card_open\", data => {\n      //console.log(data);\n      this.ingredient_card_selected.card_1 = data[0];\n      this.ingredient_card_selected.card_2 = data[1];\n      this.ingredient_card_selected.card_3 = data[2];\n      this.ingredient_card_selected.card_4 = data[3];\n      this.ingredient_card_selected.card_5 = data[4];\n    }); // 인게임 초기 셋팅값을 전송 받는 함수\n\n    socket.on(\"draw_ingredient_card_result\", data => {\n      this.user_data = data; //console.log(this.user_data);\n    }); // 게임 순서 정하는 순서를 받는 함수\n\n    socket.on(\"round_order_setting_before\", data => {\n      //console.log(data);\n      let as = [];\n\n      for (let i = 0; i < data.length; i++) {\n        for (let j = 0; j < this.user_data.length; j++) {\n          if (data[i] == this.user_data[j].user_key) {\n            let choice_data = {\n              user_key: this.user_data[j].user_key,\n              user_name: this.user_data[j].user_name,\n              is_select: false\n            };\n            as.push(choice_data);\n            choice_data = '';\n          }\n        }\n      }\n\n      this.round_order = as; //console.log(this.round_order[this.round_order_selecter].user_key);\n    });\n  },\n\n  components: {\n    modal_component: modal_area,\n    personal_game_data: personal_game_data\n  },\n\n  data() {\n    return {\n      user_data: '',\n      my_key: socket.id,\n      my_name: '',\n      my_color: '',\n      room_owner: '',\n      total_dicount_adventruer: 4,\n      textarea: '',\n      message: '',\n      ingredient_card_selected: {\n        card_1: '0',\n        card_2: '0',\n        card_3: '0',\n        card_4: '0',\n        card_5: '0'\n      },\n      decide_order: false,\n      round_order: '',\n      round_order_selecter: 0\n    };\n  },\n\n  methods: {\n    use_chat: function () {\n      if (this.message !== '') {\n        let msg = {\n          speaker: this.my_name,\n          msg: this.message,\n          type: \"normal\"\n        }; //   console.log(\"서버에 보낼 데이터\");\n        //   console.log(msg);\n        //   console.log(\"보낼준비 끝\");\n\n        this.message = '';\n        socket.emit(\"chat\", msg);\n      }\n    },\n    draw_ingredient_card: function (cnt) {\n      let data = {\n        cnt: cnt,\n        my_key: this.my_key\n      };\n      socket.emit(\"draw_ingredient_card\", data);\n    },\n    round_ready: function () {\n      console.log(\"ready\");\n    },\n    decide_order_end: function () {\n      this.decide_order = true;\n    },\n    select_order_btn: function (val, e) {\n      console.log(val);\n      console.log(e.target.className);\n      e.target.className += this.my_color;\n      console.log(e.target.className);\n    }\n  }\n};","map":{"version":3,"names":["socket","default","modal_area","personal_game_data","name","created","emit","on","data","user_data","i","length","is_master","room_owner","user_name","my_key","user_key","my_name","my_color","user_color","msg","speaker","type","textarea","ingredient_card_selected","card_1","card_2","card_3","card_4","card_5","as","j","choice_data","is_select","push","round_order","components","modal_component","id","total_dicount_adventruer","message","decide_order","round_order_selecter","methods","use_chat","draw_ingredient_card","cnt","round_ready","console","log","decide_order_end","select_order_btn","val","e","target","className"],"sources":["E:/GitHub/personal_tranning/alchemists_vue/alchemists/src/assets/script/game_board.js"],"sourcesContent":["import { socket } from '@/components/game_lobby.vue'\r\nimport { default as modal_area } from '@/components/modal_area.vue'\r\nimport { default as personal_game_data } from '@/components/personal_game_data.vue' \r\n\r\nexport default {\r\n    name : 'game_board',\r\n    created() {\r\n        // 게임 초기화 & 시작 트리거\r\n        socket.emit(\"created_data_announce\");\r\n\r\n        //최초 분배된 기본 재료 수령\r\n        socket.on(\"get_ingame_data\", (data) => {\r\n            this.user_data = data;\r\n            for(let i = 0; i < data.length; i++){\r\n                if( data[i].is_master === 'true' ) {\r\n                    this.room_owner = data[i].user_name;\r\n                }\r\n                if( this.my_key == data[i].user_key ){\r\n                    this.my_name = data[i].user_name;\r\n                    this.my_color = data[i].user_color;\r\n                }\r\n            }\r\n\r\n            let msg = {\r\n                speaker : this.my_name,\r\n                msg     : \"방에 입장하였습니다.\",\r\n                type    : 'announce',\r\n            }\r\n            socket.emit(\"chat\", msg);\r\n        });\r\n\r\n        //채팅 on\r\n        socket.on(\"chat\", (data) => {\r\n            // console.log(\"서버에서 받아온 데이터\");\r\n            // console.log(data);\r\n            // console.log(\"받아오기 끝\");\r\n            switch ( data.type ) {\r\n                case \"announce\" :\r\n                    this.textarea += data.speaker + \" 이(가) \" + data.msg + \"\\n\";\r\n                    break;\r\n                case \"normal\" :\r\n                    this.textarea += data.speaker + \" : \" + data.msg + \"\\n\";\r\n                    break;\r\n            }\r\n            //console.log(\"chat :: \");\r\n            //console.log(data);\r\n        });\r\n\r\n        // 선택할 수 있는 카드 공개\r\n        socket.on(\"ingredient_select_card_open\", (data) => {\r\n            //console.log(data);\r\n            this.ingredient_card_selected.card_1 = data[0];\r\n            this.ingredient_card_selected.card_2 = data[1];\r\n            this.ingredient_card_selected.card_3 = data[2];\r\n            this.ingredient_card_selected.card_4 = data[3];\r\n            this.ingredient_card_selected.card_5 = data[4];\r\n        });\r\n\r\n        // 인게임 초기 셋팅값을 전송 받는 함수\r\n        socket.on(\"draw_ingredient_card_result\", (data) => {\r\n            this.user_data = data;\r\n            //console.log(this.user_data);\r\n        });\r\n\r\n        // 게임 순서 정하는 순서를 받는 함수\r\n        socket.on(\"round_order_setting_before\" , (data) => {\r\n            //console.log(data);\r\n            let as = [];\r\n\r\n            for( let i = 0; i < data.length; i++) {\r\n                for( let j = 0; j < this.user_data.length; j++){\r\n                    if( data[i] == this.user_data[j].user_key ){\r\n\r\n                        let choice_data = {\r\n                            user_key  : this.user_data[j].user_key,\r\n                            user_name : this.user_data[j].user_name,\r\n                            is_select : false\r\n                        }\r\n                        \r\n                        as.push(choice_data);\r\n                        \r\n                        choice_data = '';\r\n                    }\r\n                }\r\n            }\r\n            this.round_order = as;\r\n            //console.log(this.round_order[this.round_order_selecter].user_key);\r\n        });\r\n\r\n\r\n    },\r\n    components : {\r\n        modal_component : modal_area,\r\n        personal_game_data : personal_game_data,\r\n    \r\n    },\r\n    data() {\r\n        return  {\r\n            user_data : '', \r\n            my_key : socket.id,\r\n            my_name : '',\r\n            my_color : '',\r\n            room_owner : '',\r\n            total_dicount_adventruer : 4,\r\n            textarea : '',\r\n            message : '',\r\n            ingredient_card_selected : {\r\n                card_1 : '0',\r\n                card_2 : '0',\r\n                card_3 : '0',\r\n                card_4 : '0',\r\n                card_5 : '0',\r\n            },\r\n            decide_order : false,\r\n            round_order : '',\r\n            round_order_selecter : 0,\r\n        }\r\n    },\r\n\r\n    methods : {\r\n        use_chat : function(){\r\n            if( this.message !== '' ){\r\n              let msg = {\r\n                speaker : this.my_name,\r\n                msg : this.message,\r\n                type : \"normal\"\r\n              }\r\n            //   console.log(\"서버에 보낼 데이터\");\r\n            //   console.log(msg);\r\n            //   console.log(\"보낼준비 끝\");\r\n              this.message = '';\r\n              socket.emit(\"chat\", msg);\r\n            }\r\n        },\r\n\r\n        draw_ingredient_card : function(cnt) {\r\n            let data = {\r\n                cnt : cnt,\r\n                my_key : this.my_key,\r\n            }\r\n            socket.emit(\"draw_ingredient_card\", data);\r\n        },\r\n\r\n        round_ready : function() {\r\n            console.log(\"ready\");\r\n        },\r\n\r\n        decide_order_end : function() {\r\n            this.decide_order = true;\r\n        },\r\n\r\n        select_order_btn : function(val, e){\r\n            console.log(val);\r\n            console.log(e.target.className);\r\n            e.target.className += this.my_color;\r\n            console.log(e.target.className)\r\n        }\r\n    }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}