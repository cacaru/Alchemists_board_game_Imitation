{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-6294ced9\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  id: \"game_lobby\"\n};\nconst _hoisted_2 = {\n  id: \"room_title\"\n};\nconst _hoisted_3 = {\n  class: \"user_name\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, _toDisplayString(this.$route.params.room_name), 1\n  /* TEXT */\n  ), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.users, entrans => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"entrans\",\n      key: entrans\n    }, [_createElementVNode(\"p\", _hoisted_3, \" 이름 : \" + _toDisplayString(entrans.user_name), 1\n    /* TEXT */\n    )]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  )), _createTextVNode(\" \" + _toDisplayString(this.$route.params), 1\n  /* TEXT */\n  )]);\n}","map":{"version":3,"mappings":";;;;;EACSA,EAAE,EAAC;;;EACCA,EAAE,EAAC;;;EAIDC,KAAK,EAAC;;;uBALjBC,oBASM,KATN,cASM,CARFC,oBAEM,KAFN,cAEMC,sBADMC,MACN,CADaC,MACb,CADoBC,SACpB,CAFN,EACmC;EAAA;EADnC,CAQE,qBALFL,oBAGMM,SAHN,EAGM,IAHN,EAGMC,YAHiCC,WAGjC,EAHsBC,OAAgB,IAAT;yBAAnCT,oBAGM,KAHN,EAGM;MAHDD,KAAK,EAAC,SAGL;MAHyCW,GAAG,EAAED;IAG9C,CAHN,GACIR,oBAAuD,GAAvD,cAAqB,WAAMC,iBAAGO,OAAO,CAACE,SAAX,CAA3B,EAA+C;IAAA;IAA/C,EADJ;GAGM,CAHN;;EAAA,CAKE,oBAFI,MACNT,sBAAQC,MAAR,CAAeC,MAAf,GAAqB;EAAA;GACnB,CATN","names":["id","class","_createElementBlock","_createElementVNode","_toDisplayString","$route","params","room_name","_Fragment","_renderList","$data","entrans","key","user_name"],"sourceRoot":"","sources":["E:\\web\\alchemists_vue\\alchemists\\src\\components\\game_lobby.vue"],"sourcesContent":["<template>\r\n    <div id=\"game_lobby\">\r\n        <div id=\"room_title\">\r\n            {{ this.$route.params.room_name }}\r\n        </div>\r\n        <div class=\"entrans\" v-for=\"entrans in users\" :key=\"entrans\">\r\n            <p class=\"user_name\"> 이름 : {{ entrans.user_name }} </p>\r\n            \r\n        </div>\r\n        {{ this.$route.params }}\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport io from 'socket.io-client';\r\n\r\n// 모든 사용자를 보여주기 위한 arr\r\nvar all_user = [];\r\n\r\nexport default {\r\n  name : 'game_lobby',\r\n  created() {\r\n    //this.$route.params.room_address:this.$route.params.port\r\n    const socket = io(\"http://192.168.0.102:3000\");\r\n    // console.log(params);\r\n    // console.log(params.nick_name);\r\n    console.log(\"server in\");\r\n\r\n    let msg = {\r\n        user_name : this.$route.params.nick_name,\r\n        room_pw   : this.$route.params.room_pw,\r\n        count     : this.$route.params.count,\r\n        msg       : this.$route.params.nick_name + \" 가 방에 참가하였습니다.\"\r\n    };\r\n\r\n    socket.emit('enter', msg);\r\n\r\n    socket.on(\"chat\", (data) => {\r\n      console.log(\"chat :: \");\r\n      console.log( data);\r\n    });\r\n  \r\n    socket.on(\"all_player\", (data) => {\r\n      all_user.push(data);\r\n      console.log(\"all_player log\");\r\n      console.log(data);\r\n      console.log(\"all player log end\");\r\n    });\r\n\r\n\r\n  },\r\n\r\n  methods : {\r\n\r\n  },\r\n  data() {\r\n    return  {\r\n      users : all_user\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped src=\"@/assets/css/game_lobby.css\"></style>"]},"metadata":{},"sourceType":"module"}