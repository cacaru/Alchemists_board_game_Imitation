{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, normalizeStyle as _normalizeStyle, createBlock as _createBlock, vModelText as _vModelText, withDirectives as _withDirectives, withKeys as _withKeys, createTextVNode as _createTextVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-6294ced9\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  id: \"room_title\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"inline name\"\n};\n\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"inline name\"\n}, \"이름\", -1\n/* HOISTED */\n));\n\nconst _hoisted_4 = {\n  class: \"inline user_name\"\n};\nconst _hoisted_5 = {\n  class: \"choose_color_section\"\n};\nconst _hoisted_6 = {\n  key: 0,\n  class: \"user_color_announce\"\n};\nconst _hoisted_7 = {\n  key: 1,\n  class: \"user_color_announce\"\n};\nconst _hoisted_8 = {\n  key: 2,\n  class: \"button_area\"\n};\nconst _hoisted_9 = {\n  key: 3\n};\nconst _hoisted_10 = {\n  class: \"overlay_ready\"\n};\n\nconst _hoisted_11 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", {\n  id: \"check_label\"\n}, \"준비 완료\", -1\n/* HOISTED */\n));\n\nconst _hoisted_12 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", null, null, -1\n/* HOISTED */\n));\n\nconst _hoisted_13 = /*#__PURE__*/_createTextVNode(\" 보내기 \");\n\nconst _hoisted_14 = /*#__PURE__*/_createTextVNode(\" 게임 시작 \");\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_b_col = _resolveComponent(\"b-col\");\n\n  const _component_b_row = _resolveComponent(\"b-row\");\n\n  const _component_b_icon_funnel_fill = _resolveComponent(\"b-icon-funnel-fill\");\n\n  const _component_b_icon_funnel = _resolveComponent(\"b-icon-funnel\");\n\n  const _component_b_overlay = _resolveComponent(\"b-overlay\");\n\n  const _component_b_container = _resolveComponent(\"b-container\");\n\n  const _component_b_button = _resolveComponent(\"b-button\");\n\n  return _openBlock(), _createBlock(_component_b_container, {\n    id: \"game_lobby\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_b_row, null, {\n      default: _withCtx(() => [_createVNode(_component_b_col, null, {\n        default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_1, _toDisplayString($data.room_name), 1\n        /* TEXT */\n        )]),\n        _: 1\n        /* STABLE */\n\n      })]),\n      _: 1\n      /* STABLE */\n\n    }), _createVNode(_component_b_row, null, {\n      default: _withCtx(() => [_createVNode(_component_b_col, null, {\n        default: _withCtx(() => [_createVNode(_component_b_container, {\n          id: \"room_back\"\n        }, {\n          default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(Math.ceil($data.users.length / 2), i => {\n            return _openBlock(), _createBlock(_component_b_row, {\n              \"align-v\": \"stretch\",\n              key: i\n            }, {\n              default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.users.slice((i - 1) * 2, i * 2), entrans => {\n                return _openBlock(), _createBlock(_component_b_col, {\n                  sm: \"6\",\n                  key: entrans\n                }, {\n                  default: _withCtx(() => [_createElementVNode(\"div\", null, [_createVNode(_component_b_overlay, {\n                    show: entrans.is_ready == true,\n                    class: \"entrans\",\n                    rounded: \"lg\"\n                  }, {\n                    overlay: _withCtx(() => [_createElementVNode(\"div\", _hoisted_10, [_createVNode(_component_b_icon_funnel, {\n                      style: {\n                        \"width\": \"100px\",\n                        \"height\": \"100px\"\n                      }\n                    }), _hoisted_11])]),\n                    default: _withCtx(() => [entrans.is_master === 'true' ? (_openBlock(), _createElementBlock(\"p\", _hoisted_2, \"방장\")) : _createCommentVNode(\"v-if\", true), _hoisted_3, _createElementVNode(\"p\", _hoisted_4, _toDisplayString(entrans.user_name), 1\n                    /* TEXT */\n                    ), _createElementVNode(\"div\", _hoisted_5, [entrans.user_color == '' ? (_openBlock(), _createElementBlock(\"p\", _hoisted_6, \" 색 선택 중 \")) : (_openBlock(), _createElementBlock(\"p\", _hoisted_7, \" 고른 색 \")), $data.my_key === entrans.user_key ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [_createVNode(_component_b_icon_funnel_fill, {\n                      onClick: $event => $options.choose_color('red', entrans.user_name, entrans.user_key),\n                      style: _normalizeStyle([{\n                        display: $data.color_button\n                      }, {\n                        \"width\": \"45px\",\n                        \"height\": \"45px\",\n                        \"color\": \"red\",\n                        \"transform\": \"rotate(180deg)\"\n                      }])\n                    }, null, 8\n                    /* PROPS */\n                    , [\"onClick\", \"style\"]), _createVNode(_component_b_icon_funnel_fill, {\n                      onClick: $event => $options.choose_color('blue', entrans.user_name, entrans.user_key),\n                      style: _normalizeStyle([{\n                        display: $data.color_button\n                      }, {\n                        \"width\": \"45px\",\n                        \"height\": \"45px\",\n                        \"color\": \"blue\",\n                        \"transform\": \"rotate(180deg)\"\n                      }])\n                    }, null, 8\n                    /* PROPS */\n                    , [\"onClick\", \"style\"]), _createVNode(_component_b_icon_funnel_fill, {\n                      onClick: $event => $options.choose_color('black', entrans.user_name, entrans.user_key),\n                      style: _normalizeStyle([{\n                        display: $data.color_button\n                      }, {\n                        \"width\": \"45px\",\n                        \"height\": \"45px\",\n                        \"color\": \"black\",\n                        \"transform\": \"rotate(180deg)\"\n                      }])\n                    }, null, 8\n                    /* PROPS */\n                    , [\"onClick\", \"style\"]), _createVNode(_component_b_icon_funnel_fill, {\n                      onClick: $event => $options.choose_color('white', entrans.user_name, entrans.user_key),\n                      style: _normalizeStyle([{\n                        display: $data.color_button\n                      }, {\n                        \"width\": \"45px\",\n                        \"height\": \"45px\",\n                        \"color\": \"white\",\n                        \"transform\": \"rotate(180deg)\"\n                      }])\n                    }, null, 8\n                    /* PROPS */\n                    , [\"onClick\", \"style\"]), _createVNode(_component_b_icon_funnel_fill, {\n                      onClick: $options.back_choose_color,\n                      style: _normalizeStyle([{\n                        display: $data.back_button,\n                        color: entrans.user_color\n                      }, {\n                        \"width\": \"45px\",\n                        \"height\": \"45px\",\n                        \"transform\": \"rotate(180deg)\"\n                      }])\n                    }, null, 8\n                    /* PROPS */\n                    , [\"onClick\", \"style\"]), _createElementVNode(\"p\", {\n                      class: \"announce\",\n                      style: _normalizeStyle({\n                        display: $data.back_button\n                      })\n                    }, \" 한 번 더 누르면 고른 색이 취소됩니다. \", 4\n                    /* STYLE */\n                    )])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_9, [_createVNode(_component_b_icon_funnel_fill, {\n                      style: _normalizeStyle([{\n                        color: entrans.user_color\n                      }, {\n                        \"width\": \"40px\",\n                        \"height\": \"40px\",\n                        \"transform\": \"rotate(180deg)\"\n                      }])\n                    }, null, 8\n                    /* PROPS */\n                    , [\"style\"])]))])]),\n                    _: 2\n                    /* DYNAMIC */\n\n                  }, 1032\n                  /* PROPS, DYNAMIC_SLOTS */\n                  , [\"show\"])])]),\n                  _: 2\n                  /* DYNAMIC */\n\n                }, 1024\n                /* DYNAMIC_SLOTS */\n                );\n              }), 128\n              /* KEYED_FRAGMENT */\n              ))]),\n              _: 2\n              /* DYNAMIC */\n\n            }, 1024\n            /* DYNAMIC_SLOTS */\n            );\n          }), 128\n          /* KEYED_FRAGMENT */\n          ))]),\n          _: 1\n          /* STABLE */\n\n        })]),\n        _: 1\n        /* STABLE */\n\n      })]),\n      _: 1\n      /* STABLE */\n\n    }), _createVNode(_component_b_row, null, {\n      default: _withCtx(() => [_createVNode(_component_b_col, {\n        sm: \"8\"\n      }, {\n        default: _withCtx(() => [_withDirectives(_createElementVNode(\"textarea\", {\n          id: \"chat_area\",\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.textarea = $event),\n          disabled: \"\"\n        }, null, 512\n        /* NEED_PATCH */\n        ), [[_vModelText, $data.textarea]]), _hoisted_12, _withDirectives(_createElementVNode(\"input\", {\n          id: \"message_area\",\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.message = $event),\n          onKeyup: _cache[2] || (_cache[2] = _withKeys((...args) => $options.sending_message && $options.sending_message(...args), [\"enter\"]))\n        }, null, 544\n        /* HYDRATE_EVENTS, NEED_PATCH */\n        ), [[_vModelText, $data.message]]), _createVNode(_component_b_button, {\n          pill: \"\",\n          id: \"sending\",\n          onClick: $options.sending_message\n        }, {\n          default: _withCtx(() => [_hoisted_13]),\n          _: 1\n          /* STABLE */\n\n        }, 8\n        /* PROPS */\n        , [\"onClick\"])]),\n        _: 1\n        /* STABLE */\n\n      }), _createVNode(_component_b_col, null, {\n        default: _withCtx(() => [this.$route.params.is_master === 'true' ? (_openBlock(), _createBlock(_component_b_button, {\n          key: 0,\n          pill: \"\",\n          size: \"lg\",\n          class: \"game_start\",\n          onClick: $options.game_start\n        }, {\n          default: _withCtx(() => [_hoisted_14]),\n          _: 1\n          /* STABLE */\n\n        }, 8\n        /* PROPS */\n        , [\"onClick\"])) : (_openBlock(), _createBlock(_component_b_button, {\n          key: 1,\n          pill: \"\",\n          size: \"lg\",\n          class: \"game_start\",\n          onClick: $options.game_ready\n        }, {\n          default: _withCtx(() => [_createTextVNode(_toDisplayString(this.toggle_game_start), 1\n          /* TEXT */\n          )]),\n          _: 1\n          /* STABLE */\n\n        }, 8\n        /* PROPS */\n        , [\"onClick\"]))]),\n        _: 1\n        /* STABLE */\n\n      })]),\n      _: 1\n      /* STABLE */\n\n    })]),\n    _: 1\n    /* STABLE */\n\n  });\n}","map":{"version":3,"mappings":"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","names":["id","class","_createElementVNode","_createBlock","_component_b_container","_createVNode","_component_b_row","_component_b_col","_toDisplayString","$data","_createElementBlock","_Fragment","_renderList","Math","ceil","length","i","key","slice","entrans","sm","_component_b_overlay","show","is_ready","rounded","overlay","_component_b_icon_funnel","style","_hoisted_11","is_master","_hoisted_3","user_name","user_color","user_key","_component_b_icon_funnel_fill","onClick","$options","display","color","_hoisted_9","$event","disabled","_hoisted_12","onKeyup","_component_b_button","pill","$route","params","size","toggle_game_start"],"sourceRoot":"","sources":["E:\\web\\alchemists_vue\\alchemists\\src\\components\\game_lobby.vue"],"sourcesContent":["<template>\r\n    <b-container id=\"game_lobby\">\r\n      <b-row>\r\n        <b-col>\r\n          <div id=\"room_title\">\r\n              {{ room_name }}\r\n          </div>\r\n        </b-col>\r\n      </b-row>\r\n      <b-row>\r\n        <b-col>\r\n          <b-container id=\"room_back\">\r\n            <b-row align-v=\"stretch\" v-for=\"i in Math.ceil(users.length / 2 )\" :key=\"i\">\r\n              <b-col sm=\"6\" v-for=\"entrans in users.slice((i - 1) * 2, i * 2)\" :key=\"entrans\">\r\n                \r\n                <div>\r\n                  <b-overlay v-bind:show=\"entrans.is_ready == true\" class=\"entrans\" rounded=\"lg\" >\r\n                    <p class=\"inline name\" v-if=\"entrans.is_master === 'true'\">방장</p>\r\n                    <p class=\"inline name\">이름</p>\r\n                    <p class=\"inline user_name\"> {{ entrans.user_name }} </p>\r\n                    \r\n                    <div class=\"choose_color_section\">\r\n                      <p class=\"user_color_announce\" v-if=\"entrans.user_color == '' \"> 색 선택 중 </p>\r\n                      <p class=\"user_color_announce\" v-else > 고른 색 </p>\r\n                      <div class=\"button_area\" v-if=\"my_key === entrans.user_key\">\r\n                        <b-icon-funnel-fill v-on:click=\"choose_color('red',   entrans.user_name, entrans.user_key)\" v-bind:style=\"{display : color_button }\" style=\"width : 45px; height: 45px; color:red; transform: rotate(180deg);\"></b-icon-funnel-fill>\r\n                        <b-icon-funnel-fill v-on:click=\"choose_color('blue',  entrans.user_name, entrans.user_key)\" v-bind:style=\"{display : color_button }\" style=\"width : 45px; height: 45px; color:blue; transform: rotate(180deg);\"></b-icon-funnel-fill>\r\n                        <b-icon-funnel-fill v-on:click=\"choose_color('black', entrans.user_name, entrans.user_key)\" v-bind:style=\"{display : color_button }\" style=\"width : 45px; height: 45px; color:black; transform: rotate(180deg);\"></b-icon-funnel-fill>\r\n                        <b-icon-funnel-fill v-on:click=\"choose_color('white', entrans.user_name, entrans.user_key)\" v-bind:style=\"{display : color_button }\" style=\"width : 45px; height: 45px; color:white; transform: rotate(180deg);\"></b-icon-funnel-fill>\r\n                        <b-icon-funnel-fill v-on:click=\"back_choose_color\" v-bind:style=\"{display : back_button , color: entrans.user_color }\" style=\"width : 45px; height: 45px; transform: rotate(180deg);\"></b-icon-funnel-fill>\r\n                        <p class=\"announce\" v-bind:style=\"{display : back_button }\"> 한 번 더 누르면 고른 색이 취소됩니다. </p>\r\n                      </div>\r\n                      <div v-else>\r\n                        <b-icon-funnel-fill v-bind:style=\"{ color : entrans.user_color }\" style=\"width : 40px; height: 40px; transform: rotate(180deg);\"/>\r\n                      </div>\r\n                    </div>\r\n                    <template v-slot:overlay>\r\n                      <div class=\"overlay_ready\">\r\n                          <b-icon-funnel style=\"width:100px; height:100px;\" />\r\n                          <p id=\"check_label\">준비 완료</p>\r\n                      </div>\r\n                    </template>\r\n                  </b-overlay>\r\n                </div>\r\n              </b-col>\r\n            </b-row>\r\n          </b-container>\r\n        </b-col>\r\n      </b-row>\r\n\r\n      <b-row>\r\n        <b-col sm=\"8\">\r\n          <textarea id=\"chat_area\" v-model=\"textarea\" disabled></textarea>\r\n          <div></div>\r\n          <input id=\"message_area\" v-model=\"message\" v-on:keyup.enter=\"sending_message\"/>\r\n          <b-button pill id=\"sending\" v-on:click=\"sending_message\"> 보내기 </b-button>\r\n        </b-col>\r\n        <b-col>\r\n          <b-button pill size=\"lg\" class=\"game_start\" v-on:click=\"game_start\" v-if=\"this.$route.params.is_master === 'true' \"> 게임 시작 </b-button>\r\n          <b-button pill size=\"lg\" class=\"game_start\" v-on:click=\"game_ready\" v-else> {{ this.toggle_game_start }} </b-button>\r\n        </b-col>\r\n      </b-row>\r\n    </b-container>\r\n</template>\r\n\r\n<script>\r\nimport io from 'socket.io-client';\r\n\r\n// 다른 곳에서도 쓸 수 있게 전역 선언\r\nvar socket;\r\n\r\nexport default {\r\n  name : 'game_lobby',\r\n  created() {\r\n    //this.$route.params.room_address:this.$route.params.port\r\n    socket = io(`http://192.168.0.102:3000`);\r\n    // console.log(params);\r\n    // console.log(params.nick_name);\r\n    //console.log(\"server in\");\r\n    //console.log(this.$route.params);\r\n    let msg;\r\n    //마스터 인 입장만 count를 가지고 있으므로\r\n    if ( this.$route.params.is_master === 'true' ) {\r\n      msg = {\r\n        user_name : this.$route.params.nick_name,\r\n        room_pw   : this.$route.params.room_pw,\r\n        count     : this.$route.params.count,\r\n        is_master : this.$route.params.is_master,\r\n        is_ready  : false,\r\n        msg       : this.$route.params.nick_name + \" 가 방에 참가하였습니다.\"\r\n      };\r\n      //console.log(\"master\");\r\n    } else {\r\n      msg = {\r\n        user_name : this.$route.params.nick_name,\r\n        room_pw   : this.$route.params.room_pw,\r\n        is_master : this.$route.params.is_master,\r\n        is_ready  : false,\r\n        msg       : this.$route.params.nick_name + \" 가 방에 참가하였습니다.\"\r\n      }\r\n      //console.log(\"entras\");\r\n    }\r\n   \r\n    // 입장했음을 알림\r\n    socket.emit(\"enter\", msg);\r\n\r\n    // 방 정보를 받음 - 입장 했을 때 자신에게만 한 번 전송\r\n    socket.on(\"announce_room_name\", (room_data) => {\r\n      this.room_name = room_data.room_name;\r\n      this.my_key = room_data.my_key;\r\n      //console.log(this.my_key);\r\n    })\r\n\r\n\r\n    //다른 채팅이 있는지 확인\r\n    socket.on(\"chat\", (data) => {\r\n      switch ( data.type ) {\r\n        case \"announce\" :\r\n          this.textarea += data.speaker + \" 이(가) \" + data.msg + \"\\n\";\r\n          break;\r\n        case \"normal\" :\r\n          this.textarea += data.speaker + \" : \" + data.msg + \"\\n\";\r\n          break;\r\n      }\r\n      //console.log(\"chat :: \");\r\n      //console.log(data);\r\n    });\r\n\r\n    // 다른 플레이어가 입장시 / 색깔 선택 시 정보를 받음\r\n    socket.on(\"all_player\", (data) => {\r\n      //console.log(data);\r\n      this.users = data;\r\n      for( var i = 0; i < this.users.length ; i++ ) {\r\n        if( this.users[i].user_color != '' ){\r\n          this.color_button = 'none';\r\n          this.back_button = 'inline-block';\r\n        }\r\n      }\r\n    });\r\n\r\n    //입장시 방이 가득 찼는지 확인\r\n    socket.on(\"pull_room\", () => {\r\n        //console.log(res + \"방이 가득 찼습니다.\");\r\n        alert(\"방이 가득 찼습니다. 뒤로 돌아갑니다\");\r\n        // master 면 create 로\r\n        if( this.$route.params.is_master === 'true' ){\r\n          this.$router.push({\r\n            name: 'create_lobby',\r\n            params : {\r\n                count : this.$route.params.count\r\n            }\r\n          });\r\n        }\r\n        // entrans 면 enter 로\r\n        else {\r\n          this.$router.push({\r\n            name: 'enter_lobby',\r\n          });\r\n        }\r\n        \r\n        \r\n    });\r\n\r\n    // 마스터가 아닌데 방이 없는 곳에 들어갈 경우\r\n    socket.on(\"no_room\", () => {\r\n      alert(\"방이 아직 생성되지 않았거나 잘못된 주소입니다. 주소를 확인해주세요\");\r\n      alert(\"뒤로 돌아갑니다.\");\r\n      this.$router.push({\r\n          name: 'enter_lobby'\r\n      });\r\n    })\r\n\r\n    // 비밀번호가 잘못 된 경우\r\n    socket.on(\"wrong_pw\", () => {\r\n      alert(\"비밀번호가 잘못되었습니다. 비밀번호를 확인해주세요\");\r\n      this.$router.push({\r\n        name: 'enter_lobby'\r\n      });\r\n    });\r\n\r\n  },\r\n  data() {\r\n    return  {\r\n      users : '',\r\n      textarea : '',\r\n      message : '',\r\n      room_name : '',\r\n      my_key : '',\r\n      my_name : this.$route.params.nick_name,\r\n      color_button : 'inline-block',\r\n      back_button : 'none',\r\n      toggle_game_start : \"준비완료\",\r\n    }\r\n  },\r\n  methods : {\r\n    // 고른 색을 서버에 알림\r\n    choose_color : function(color, my_name, my_key) {\r\n\r\n        this.color_button = this.color_button === 'inline-block' ? 'none' : 'inline-block';\r\n        this.back_button = this.back_button === 'none' ? 'inline-block' : 'none';\r\n        let data = {\r\n          user_name   : my_name,\r\n          user_color  : color,\r\n          user_key    : my_key\r\n        }\r\n        //선택한 값을 서버에 전송\r\n        socket.emit(\"edit_color\", data);\r\n\r\n    },\r\n\r\n    sending_message : function(){\r\n      if( this.message !== '' ){\r\n        let msg = {\r\n          speaker : this.my_name,\r\n          msg : this.message,\r\n          type : \"normal\"\r\n        }\r\n        //console.log(msg);\r\n        this.message = '';\r\n        socket.emit(\"chat\", msg);\r\n      }\r\n    },\r\n\r\n    back_choose_color : function() {\r\n      this.color_button = this.color_button === 'inline-block' ? 'none' : 'inline-block';\r\n      this.back_button = this.back_button === 'none' ? 'inline-block' : 'none';\r\n      let data = {\r\n          user_name   : this.my_name,\r\n          user_color  : '',\r\n          user_key    : this.my_key\r\n        }\r\n        //선택한 값을 서버에 전송\r\n        socket.emit(\"edit_color\", data);\r\n\r\n    },\r\n    game_start : function() {\r\n      console.log(\"게임시작 클릭\");\r\n    },\r\n\r\n    game_ready : function(){\r\n      var is_select_color = false;\r\n      for( var i = 0 ; i < this.users.length; i++){\r\n        if( this.users[i].user_key === this.my_key ){\r\n          if( this.users[i].user_color != '' ){\r\n            is_select_color = true;\r\n          }\r\n        }\r\n      }\r\n\r\n      if( !is_select_color ) {\r\n        alert(\"색을 먼저 선택해주세요!\");\r\n        return;\r\n      }\r\n\r\n      this.toggle_game_start = this.toggle_game_start === '준비완료' ? '시작대기' : '준비완료';\r\n      var ready_var;\r\n\r\n      if ( this.toggle_game_start === '준비완료' ){\r\n        ready_var = false;\r\n      }else {\r\n        ready_var = true;\r\n      }\r\n      \r\n      let data = {\r\n        is_ready : ready_var,\r\n        user_key : this.my_key\r\n      };\r\n\r\n      socket.emit(\"lobby_ready\", data);\r\n    }\r\n      \r\n\r\n  },\r\n  \r\n  \r\n}\r\n</script>\r\n\r\n<style scoped src=\"@/assets/css/game_lobby.css\"></style>"]},"metadata":{},"sourceType":"module"}