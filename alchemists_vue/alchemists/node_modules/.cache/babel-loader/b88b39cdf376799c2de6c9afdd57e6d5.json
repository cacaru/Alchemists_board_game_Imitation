{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-6294ced9\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  id: \"game_lobby\"\n};\nconst _hoisted_2 = {\n  id: \"room_title\"\n};\nconst _hoisted_3 = {\n  id: \"room_back\"\n};\n\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"name inline\"\n}, \"이름\", -1\n/* HOISTED */\n));\n\nconst _hoisted_5 = {\n  class: \"inline user_name\"\n};\n\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"user_color\"\n}, \" 색을 골라주세요 \", -1\n/* HOISTED */\n));\n\nconst _hoisted_7 = {\n  class: \"button_area\"\n};\nconst _hoisted_8 = [\"onClick\"];\nconst _hoisted_9 = [\"onClick\"];\nconst _hoisted_10 = [\"onClick\"];\nconst _hoisted_11 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, _toDisplayString(this.$route.params.room_name), 1\n  /* TEXT */\n  ), _createElementVNode(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.users, entrans => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"entrans\",\n      key: entrans\n    }, [_hoisted_4, _createElementVNode(\"p\", _hoisted_5, _toDisplayString(entrans.user_name), 1\n    /* TEXT */\n    ), _hoisted_6, _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"button\", {\n      class: \"red color\",\n      onClick: $event => $options.choose_color('red', entrans.user_name, entrans.user_key),\n      value: \"red\"\n    }, null, 8\n    /* PROPS */\n    , _hoisted_8), _createElementVNode(\"button\", {\n      class: \"blue color\",\n      onClick: $event => $options.choose_color('blue', entrans.user_name, entrans.user_key),\n      value: \"blue\"\n    }, null, 8\n    /* PROPS */\n    , _hoisted_9), _createElementVNode(\"button\", {\n      class: \"black color\",\n      onClick: $event => $options.choose_color('black', entrans.user_name, entrans.user_key),\n      value: \"black\"\n    }, null, 8\n    /* PROPS */\n    , _hoisted_10), _createElementVNode(\"button\", {\n      class: \"white color\",\n      onClick: $event => $options.choose_color('white', entrans.user_name, entrans.user_key),\n      value: \"white\"\n    }, null, 8\n    /* PROPS */\n    , _hoisted_11)])]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])]);\n}","map":{"version":3,"mappings":";;;;;EACSA,EAAE,EAAC;;;EACCA,EAAE,EAAC;;;EAGHA,EAAE,EAAC;;;gEAEFC,oBAA6B,GAA7B,EAA6B;EAA1BC,KAAK,EAAC;AAAoB,CAA7B,EAAuB,IAAvB,EAAyB;AAAA;AAAzB;;;EACGA,KAAK,EAAC;;;gEACTD,oBAAoC,GAApC,EAAoC;EAAjCC,KAAK,EAAC;AAA2B,CAApC,EAAsB,YAAtB,EAAgC;AAAA;AAAhC;;;EACKA,KAAK,EAAC;;;;;;;uBATrBC,oBAiBM,KAjBN,cAiBM,CAhBFF,oBAEM,KAFN,cAEMG,sBADMC,MACN,CADaC,MACb,CADoBC,SACpB,CAFN,EACmC;EAAA;EADnC,CAgBE,EAbFN,oBAYM,KAZN,cAYM,oBAXJE,oBAUMK,SAVN,EAUM,IAVN,EAUMC,YAViCC,WAUjC,EAVsBC,OAAgB,IAAT;yBAAnCR,oBAUM,KAVN,EAUM;MAVDD,KAAK,EAAC,SAUL;MAVyCU,GAAG,EAAED;IAU9C,CAVN,GACIE,YACAZ,oBAAyD,GAAzD,cAAyDG,iBAAzBO,OAAO,CAACG,SAAiB,CAAzD,EAAiD;IAAA;IAAjD,GACAC,YACAd,oBAKM,KALN,cAKM,CAJJA,oBAAuH,QAAvH,EAAuH;MAA/GC,KAAK,EAAC,WAAyG;MAAtFc,OAAK,YAAEC,sBAAY,KAAZ,EAAoBN,OAAO,CAACG,SAA5B,EAAuCH,OAAO,CAACO,QAA/C,CAA+E;MAArBC,KAAK,EAAC;IAAe,CAAvH;;IAAA,aAII,EAHJlB,oBAAyH,QAAzH,EAAyH;MAAjHC,KAAK,EAAC,YAA2G;MAAxFc,OAAK,YAAEC,sBAAY,MAAZ,EAAqBN,OAAO,CAACG,SAA7B,EAAwCH,OAAO,CAACO,QAAhD,CAAiF;MAAtBC,KAAK,EAAC;IAAgB,CAAzH;;IAAA,aAGI,EAFJlB,oBAA2H,QAA3H,EAA2H;MAAnHC,KAAK,EAAC,aAA6G;MAA1Fc,OAAK,YAAEC,sBAAY,OAAZ,EAAsBN,OAAO,CAACG,SAA9B,EAAyCH,OAAO,CAACO,QAAjD,CAAmF;MAAvBC,KAAK,EAAC;IAAiB,CAA3H;;IAAA,cAEI,EADJlB,oBAA2H,QAA3H,EAA2H;MAAnHC,KAAK,EAAC,aAA6G;MAA1Fc,OAAK,YAAEC,sBAAY,OAAZ,EAAsBN,OAAO,CAACG,SAA9B,EAAyCH,OAAO,CAACO,QAAjD,CAAmF;MAAvBC,KAAK,EAAC;IAAiB,CAA3H;;IAAA,cACI,CALN,EAJJ;GAUM,CAVN;;EAAA,CAWI,EAZN,CAaE,CAjBN","names":["id","_createElementVNode","class","_createElementBlock","_toDisplayString","$route","params","room_name","_Fragment","_renderList","$data","entrans","key","_hoisted_4","user_name","_hoisted_6","onClick","$options","user_key","value"],"sourceRoot":"","sources":["E:\\web\\alchemists_vue\\alchemists\\src\\components\\game_lobby.vue"],"sourcesContent":["<template>\r\n    <div id=\"game_lobby\">\r\n        <div id=\"room_title\">\r\n            {{ this.$route.params.room_name }}\r\n        </div>\r\n        <div id=\"room_back\">\r\n          <div class=\"entrans\" v-for=\"entrans in users\" :key=\"entrans\">\r\n              <p class=\"name inline\">이름</p>\r\n              <p class=\"inline user_name\"> {{ entrans.user_name }} </p>\r\n              <p class=\"user_color\"> 색을 골라주세요 </p>\r\n              <div class=\"button_area\">\r\n                <button class=\"red color\"   v-on:click=\"choose_color('red', entrans.user_name, entrans.user_key)\" value=\"red\"></button>\r\n                <button class=\"blue color\"  v-on:click=\"choose_color('blue', entrans.user_name, entrans.user_key)\" value=\"blue\"></button>\r\n                <button class=\"black color\" v-on:click=\"choose_color('black', entrans.user_name, entrans.user_key)\" value=\"black\"></button>\r\n                <button class=\"white color\" v-on:click=\"choose_color('white', entrans.user_name, entrans.user_key)\" value=\"white\"></button>\r\n              </div>\r\n          </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport io from 'socket.io-client';\r\n\r\n// 다른 곳에서도 쓸 수 있게 전역 선언\r\nvar socket;\r\n\r\nexport default {\r\n  name : 'game_lobby',\r\n  created() {\r\n    //this.$route.params.room_address:this.$route.params.port\r\n    socket = io(`http://192.168.0.102:3000`)\r\n    // console.log(params);\r\n    // console.log(params.nick_name);\r\n    console.log(\"server in\");\r\n\r\n    let msg = {\r\n        user_name : this.$route.params.nick_name,\r\n        room_pw   : this.$route.params.room_pw,\r\n        count     : this.$route.params.count,\r\n        msg       : this.$route.params.nick_name + \" 가 방에 참가하였습니다.\"\r\n    };\r\n    // 입장했음을 알림\r\n    socket.emit(\"enter\", msg);\r\n\r\n    //다른 채팅이 있는지 확인\r\n    socket.on(\"chat\", (data) => {\r\n      console.log(\"chat :: \");\r\n      console.log(data);\r\n    });\r\n\r\n    // 다른 플레이어가 입장시 / 색깔 선택 시 정보를 받음\r\n    socket.on(\"all_player\", (data) => {\r\n      console.log(\"all player work\");\r\n      console.log(data);\r\n      this.users = data;\r\n    });\r\n\r\n    //입장시 방이 가득 찼는지 확인\r\n    socket.on(\"pull_room\", (res) => {\r\n        console.log(res + \"방이 가득 찼습니다.\");\r\n        this.$router.push({\r\n          name: 'create_lobby',\r\n          params : {\r\n              count : this.$route.params.count\r\n          }\r\n          });\r\n        alert(\"방이 가득 찼습니다. 뒤로 돌아갑니다\");\r\n    });\r\n\r\n  },\r\n  data() {\r\n    return  {\r\n      users : '',\r\n      select_red : false,\r\n      select_blue : false,\r\n      select_black : false,\r\n      select_white : false\r\n    }\r\n  },\r\n  methods : {\r\n    choose_color : function(val, my_name, my_key) {\r\n      switch(val) {\r\n        case \"red\" :\r\n          this.select_red = true;\r\n          this.select_blue = false;\r\n          this.select_black = false;\r\n          this.select_white = false;\r\n          break;\r\n        case \"blue\" :\r\n          this.select_red = false;\r\n          this.select_blue = true;\r\n          this.select_black = false;\r\n          this.select_white = false;\r\n          break;\r\n        case \"black\" :\r\n          this.select_red = false;\r\n          this.select_blue = false;\r\n          this.select_black = true;\r\n          this.select_white = false;\r\n          break;\r\n        case \"white\" :\r\n          this.select_red = false;\r\n          this.select_blue = false;\r\n          this.select_black = false;\r\n          this.select_white = true;\r\n          break;\r\n      }\r\n      let data = {\r\n        user_name   : my_name,\r\n        user_color  : val,\r\n        user_key    : my_key\r\n      }\r\n      //선택한 값을 서버에 전송\r\n      socket.emit(\"edit_color\", data);\r\n    }\r\n  },\r\n  \r\n}\r\n</script>\r\n\r\n<style scoped src=\"@/assets/css/game_lobby.css\"></style>"]},"metadata":{},"sourceType":"module"}